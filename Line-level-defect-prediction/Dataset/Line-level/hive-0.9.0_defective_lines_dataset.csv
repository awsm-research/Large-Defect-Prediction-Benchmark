File,Line_number,SRC
serde/src/java/org/apache/hadoop/hive/serde2/lazy/LazyArray.java,226,if (cachedList == null) {
serde/src/java/org/apache/hadoop/hive/serde2/lazy/LazyArray.java,227,cachedList = new ArrayList<Object>(arrayLength);
serde/src/java/org/apache/hadoop/hive/serde2/lazy/LazyArray.java,228,} else {
serde/src/java/org/apache/hadoop/hive/serde2/lazy/LazyArray.java,229,cachedList.clear();
serde/src/java/org/apache/hadoop/hive/serde2/lazy/LazyMap.java,244,return null;
serde/src/java/org/apache/hadoop/hive/serde2/lazy/LazyMap.java,246,if (!valueInited[index]) {
serde/src/java/org/apache/hadoop/hive/serde2/lazy/LazyMap.java,247,valueInited[index] = true;
serde/src/java/org/apache/hadoop/hive/serde2/lazy/LazyMap.java,248,if (valueObjects[index] == null) {
serde/src/java/org/apache/hadoop/hive/serde2/lazy/LazyMap.java,249,valueObjects[index] = LazyFactory
serde/src/java/org/apache/hadoop/hive/serde2/lazy/LazyMap.java,250,.createLazyObject(((MapObjectInspector) oi)
serde/src/java/org/apache/hadoop/hive/serde2/lazy/LazyMap.java,251,.getMapValueObjectInspector());
serde/src/java/org/apache/hadoop/hive/serde2/lazy/LazyMap.java,253,"valueObjects[index].init(bytes, valueIBegin, valueILength);"
serde/src/java/org/apache/hadoop/hive/serde2/lazy/LazyMap.java,272,return null;
serde/src/java/org/apache/hadoop/hive/serde2/lazy/LazyMap.java,274,if (!keyInited[index]) {
serde/src/java/org/apache/hadoop/hive/serde2/lazy/LazyMap.java,275,keyInited[index] = true;
serde/src/java/org/apache/hadoop/hive/serde2/lazy/LazyMap.java,276,if (keyObjects[index] == null) {
serde/src/java/org/apache/hadoop/hive/serde2/lazy/LazyMap.java,278,keyObjects[index] = LazyFactory
serde/src/java/org/apache/hadoop/hive/serde2/lazy/LazyMap.java,279,.createLazyPrimitiveClass((PrimitiveObjectInspector) ((MapObjectInspector) oi)
serde/src/java/org/apache/hadoop/hive/serde2/lazy/LazyMap.java,280,.getMapKeyObjectInspector());
serde/src/java/org/apache/hadoop/hive/serde2/lazy/LazyMap.java,282,"keyObjects[index].init(bytes, keyIBegin, keyILength);"
serde/src/java/org/apache/hadoop/hive/serde2/lazy/LazyMap.java,303,if (cachedMap == null) {
serde/src/java/org/apache/hadoop/hive/serde2/lazy/LazyMap.java,305,"cachedMap = new LinkedHashMap<Object, Object>();"
serde/src/java/org/apache/hadoop/hive/serde2/lazy/LazyMap.java,306,} else {
serde/src/java/org/apache/hadoop/hive/serde2/lazy/LazyMap.java,307,cachedMap.clear();
metastore/src/java/org/apache/hadoop/hive/metastore/HiveMetaStore.java,452,ms = null;
metastore/src/java/org/apache/hadoop/hive/metastore/HiveMetaStore.java,58,import org.apache.hadoop.hive.metastore.api.Constants;
metastore/src/java/org/apache/hadoop/hive/metastore/HiveMetaStore.java,824,tbl.getParameters().get(Constants.DDL_TIME) == null) {
metastore/src/java/org/apache/hadoop/hive/metastore/HiveMetaStore.java,825,"tbl.putToParameters(Constants.DDL_TIME, Long.toString(time));"
metastore/src/java/org/apache/hadoop/hive/metastore/HiveMetaStore.java,1099,"part.putToParameters(Constants.DDL_TIME, Long.toString(time));"
metastore/src/java/org/apache/hadoop/hive/metastore/HiveMetaStore.java,1267,part.getParameters().get(Constants.DDL_TIME) == null) {
metastore/src/java/org/apache/hadoop/hive/metastore/HiveMetaStore.java,1268,"part.putToParameters(Constants.DDL_TIME, Long.toString(time));"
metastore/src/java/org/apache/hadoop/hive/metastore/HiveMetaStore.java,1567,"newIndex.putToParameters(Constants.DDL_TIME, Long.toString(System"
metastore/src/java/org/apache/hadoop/hive/metastore/HiveMetaStore.java,1594,newTable.getParameters().get(Constants.DDL_TIME) == null) {
metastore/src/java/org/apache/hadoop/hive/metastore/HiveMetaStore.java,1595,"newTable.putToParameters(Constants.DDL_TIME, Long.toString(System"
metastore/src/java/org/apache/hadoop/hive/metastore/HiveMetaStore.java,2004,"index.putToParameters(Constants.DDL_TIME, Long.toString(time));"
metastore/src/java/org/apache/hadoop/hive/metastore/HiveMetaStore.java,892,isIndexTable = isIndexTable(tbl);
metastore/src/java/org/apache/hadoop/hive/metastore/HiveMetaStore.java,893,if (isIndexTable) {
metastore/src/java/org/apache/hadoop/hive/metastore/HiveMetaStore.java,915,"throw new MetaException(""Table metadata not deleted since "" +"
metastore/src/java/org/apache/hadoop/hive/metastore/HiveMetaStore.java,922,"throw new MetaException(""Unable to drop table"");"
metastore/src/java/org/apache/hadoop/hive/metastore/HiveMetaStore.java,2053,"Index index = get_index_by_name(dbName, tblName, indexName);"
metastore/src/java/org/apache/hadoop/hive/metastore/HiveMetaStore.java,2054,if (index == null) {
metastore/src/java/org/apache/hadoop/hive/metastore/HiveMetaStore.java,2055,"throw new NoSuchObjectException(indexName + "" doesn't exist"");"
metastore/src/java/org/apache/hadoop/hive/metastore/HiveMetaStore.java,2075,"if (!ms.dropTable(dbName, idxTblName)) {"
metastore/src/java/org/apache/hadoop/hive/metastore/HiveMetaStore.java,2077,"+ idxTblName + "" for index "" + idxTblName);"
metastore/src/java/org/apache/hadoop/hive/metastore/HiveMetaStore.java,2090,return true;
metastore/src/java/org/apache/hadoop/hive/metastore/HiveMetaStore.java,2010,if (!success) {
metastore/src/java/org/apache/hadoop/hive/metastore/HiveMetaStore.java,1001,"public List<Table> get_table_objects_by_name(final String dbname, final List<String> names)"
metastore/src/java/org/apache/hadoop/hive/metastore/HiveMetaStore.java,1003,List<Table> tables = null;
metastore/src/java/org/apache/hadoop/hive/metastore/HiveMetaStore.java,1004,"startMultiTableFunction(""get_multi_table"", dbname, names);"
metastore/src/java/org/apache/hadoop/hive/metastore/HiveMetaStore.java,2989,try {
metastore/src/java/org/apache/hadoop/hive/metastore/HiveMetaStore.java,1007,if (dbname == null || dbname.isEmpty()) {
metastore/src/java/org/apache/hadoop/hive/metastore/HiveMetaStore.java,1010,if (names == null)
metastore/src/java/org/apache/hadoop/hive/metastore/HiveMetaStore.java,1012,"throw new InvalidOperationException(dbname + "" cannot find null tables"");"
metastore/src/java/org/apache/hadoop/hive/metastore/HiveMetaStore.java,2921,"if (System.getProperty(""log4j.configuration"") == null) {"
metastore/src/java/org/apache/hadoop/hive/metastore/HiveMetaStore.java,482,if (!validateName(db.getName())) {
metastore/src/java/org/apache/hadoop/hive/metastore/HiveMetaStore.java,668,if (!MetaStoreUtils.validateName(type.getName())) {
serde/src/java/org/apache/hadoop/hive/serde2/objectinspector/primitive/PrimitiveObjectInspectorFactory.java,29,import org.apache.hadoop.hive.serde2.io.ByteWritable;
serde/src/java/org/apache/hadoop/hive/serde2/objectinspector/primitive/PrimitiveObjectInspectorFactory.java,30,import org.apache.hadoop.hive.serde2.io.ShortWritable;
ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java,6526,"ErrorMsg.BUCKETED_NUMBERATOR_BIGGER_DENOMINATOR.getMsg() + "" """
ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java,159,import org.apache.hadoop.hive.serde.Constants;
ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java,1737,".setProperty(Constants.FIELD_DELIM, fieldDelim);"
ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java,1738,"tblDesc.getProperties().setProperty(Constants.SERIALIZATION_FORMAT,"
ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java,1744,"tblDesc.getProperties().setProperty(Constants.ESCAPE_CHAR,"
ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java,1749,"tblDesc.getProperties().setProperty(Constants.COLLECTION_DELIM,"
ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java,1753,"tblDesc.getProperties().setProperty(Constants.MAPKEY_DELIM,"
ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java,1758,"tblDesc.getProperties().setProperty(Constants.LINE_DELIM, lineDelim);"
ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java,4242,if (tName.equals(Constants.VOID_TYPE_NAME)) {
ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java,4243,colTypes = colTypes.concat(Constants.STRING_TYPE_NAME);
ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java,2686,boolean partialAggDone = !(distPartAgg || isDistinct);
ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java,2687,if (!partialAggDone) {
ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java,2730,if (distPartAgg) {
ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java,2731,"genericUDAFEvaluator = getGenericUDAFEvaluator(aggName, aggParameters,"
ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java,2732,"value, isDistinct, isAllColumns);"
ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java,2585,assert (genericUDAFEvaluator != null);
ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java,2867,"genericUDAFEvaluators.put(entry.getKey(), genericUDAFEvaluator);"
ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java,2974,} else {
ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java,2736,genericUDAFEvaluator = genericUDAFEvaluators.get(entry.getKey());
ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java,3294,assert (genericUDAFEvaluator != null);
ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java,6132,"curr = genGroupByPlan1MR(dest, qb, curr);"
ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java,4460,Operator output = putOpInsertMap(OperatorFactory.getAndMakeChild(
ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java,4467,return input;
ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java,4316,dpCtx);
ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java,974,if (tab.isOffline()) {
ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java,975,throw new SemanticException(ErrorMsg.OFFLINE_TABLE_OR_PARTITION.
ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java,976,"getMsg(""Table "" + getUnescapedName(qb.getParseInfo().getSrcForAlias(alias))));"
ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java,979,if (tab.isView()) {
ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java,1562,"private Operator genFilterPlan(QB qb, ASTNode condn, Operator input)"
ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java,1568,"new FilterDesc(genExprNodeDesc(condn, inputRR), false), new RowSchema("
ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java,5254,"srcOp = genFilterPlan(qb, cond, srcOp);"
ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java,7712,TypeCheckCtx tcCtx = new TypeCheckCtx(input);
ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java,204,private List<FieldSchema> resultSchema;
ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java,4218,col.setType(colInfo.getType().getTypeName());
ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java,847,"qbp.setDestLimit(ctx_1.dest, new Integer(ast.getChild(0).getText()));"
ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java,4472,"private Operator genLimitPlan(String dest, QB qb, Operator input, int limit)"
ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java,4483,LimitDesc limitDesc = new LimitDesc(limit);
ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java,4585,"int limit, boolean extraMRStep) throws SemanticException {"
ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java,4592,"Operator curr = genLimitPlan(dest, qb, input, limit);"
ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java,4601,"return genLimitPlan(dest, qb, curr, limit);"
ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java,6201,"curr = genLimitMapRedPlan(dest, qb, curr, limit.intValue(),"
ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java,6202,extraMRStep);
ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java,943,"LOG.info(""Get metadata for source tables"");"
ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java,948,List<String> tabAliases = new ArrayList<String>(qb.getTabAliases());
ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java,950,for (String alias : tabAliases) {
ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java,951,String tab_name = qb.getTabNameForAlias(alias);
ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java,7524,getMetaData(qb);
ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFSortArray.java,34,import org.apache.hadoop.hive.serde2.objectinspector.ObjectInspectorFactory;
ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFSortArray.java,35,import org.apache.hadoop.hive.serde2.objectinspector.PrimitiveObjectInspector;
ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFSortArray.java,37,import org.apache.hadoop.hive.serde2.objectinspector.primitive.PrimitiveObjectInspectorFactory;
ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFSortArray.java,38,import org.apache.hadoop.hive.serde2.objectinspector.primitive.StringObjectInspector;
ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFSortArray.java,55,private ArrayList<Object> ret = new ArrayList<Object>();
ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFSortArray.java,71,.getCategory().equals(Category.PRIMITIVE))
ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFSortArray.java,101,ArrayList retArray = (ArrayList) arrayOI.getList(array);
ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFSortArray.java,102,Collections.sort(retArray);
ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFSortArray.java,29,import org.apache.hadoop.hive.serde.Constants;
ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFSortArray.java,75,#VALUE!
ql/src/java/org/apache/hadoop/hive/ql/exec/ExecDriver.java,535,"System.err.println(""ExecDriver -plan <plan-file> [-jobconf k1=v1 [-jobconf k2=v2] ...] """
ql/src/java/org/apache/hadoop/hive/ql/exec/ExecDriver.java,572,ArrayList<String> jobConfArgs = new ArrayList<String>();
ql/src/java/org/apache/hadoop/hive/ql/exec/ExecDriver.java,580,"} else if (args[i].equals(""-jobconf"")) {"
ql/src/java/org/apache/hadoop/hive/ql/exec/ExecDriver.java,581,jobConfArgs.add(args[++i]);
ql/src/java/org/apache/hadoop/hive/ql/exec/ExecDriver.java,601,"StringBuilder sb = new StringBuilder(""JobConf:\n"");"
ql/src/java/org/apache/hadoop/hive/ql/exec/ExecDriver.java,603,for (String one : jobConfArgs) {
ql/src/java/org/apache/hadoop/hive/ql/exec/ExecDriver.java,604,int eqIndex = one.indexOf('=');
ql/src/java/org/apache/hadoop/hive/ql/exec/ExecDriver.java,605,if (eqIndex != -1) {
ql/src/java/org/apache/hadoop/hive/ql/exec/ExecDriver.java,606,try {
ql/src/java/org/apache/hadoop/hive/ql/exec/ExecDriver.java,607,"String key = one.substring(0, eqIndex);"
ql/src/java/org/apache/hadoop/hive/ql/exec/ExecDriver.java,608,"String value = URLDecoder.decode(one.substring(eqIndex + 1), ""UTF-8"");"
ql/src/java/org/apache/hadoop/hive/ql/exec/ExecDriver.java,609,"conf.set(key, value);"
ql/src/java/org/apache/hadoop/hive/ql/exec/ExecDriver.java,610,"sb.append(key).append(""="").append(value).append(""\n"");"
ql/src/java/org/apache/hadoop/hive/ql/exec/ExecDriver.java,611,} catch (UnsupportedEncodingException e) {
ql/src/java/org/apache/hadoop/hive/ql/exec/ExecDriver.java,612,"System.err.println(""Unexpected error "" + e.getMessage() + "" while encoding """
ql/src/java/org/apache/hadoop/hive/ql/exec/ExecDriver.java,613,+ one.substring(eqIndex + 1));
ql/src/java/org/apache/hadoop/hive/ql/exec/ExecDriver.java,614,System.exit(3);
ql/src/java/org/apache/hadoop/hive/ql/exec/ExecDriver.java,705,public static String generateCmdLine(HiveConf hconf) {
ql/src/java/org/apache/hadoop/hive/ql/exec/ExecDriver.java,706,try {
ql/src/java/org/apache/hadoop/hive/ql/exec/ExecDriver.java,707,StringBuilder sb = new StringBuilder();
ql/src/java/org/apache/hadoop/hive/ql/exec/ExecDriver.java,708,Properties deltaP = hconf.getChangedProperties();
ql/src/java/org/apache/hadoop/hive/ql/exec/ExecDriver.java,709,"boolean hadoopLocalMode = hconf.getVar(HiveConf.ConfVars.HADOOPJT).equals(""local"");"
ql/src/java/org/apache/hadoop/hive/ql/exec/ExecDriver.java,710,"String hadoopSysDir = ""mapred.system.dir"";"
ql/src/java/org/apache/hadoop/hive/ql/exec/ExecDriver.java,711,"String hadoopWorkDir = ""mapred.local.dir"";"
ql/src/java/org/apache/hadoop/hive/ql/exec/ExecDriver.java,713,for (Object one : deltaP.keySet()) {
ql/src/java/org/apache/hadoop/hive/ql/exec/ExecDriver.java,714,String oneProp = (String) one;
ql/src/java/org/apache/hadoop/hive/ql/exec/ExecDriver.java,716,if (hadoopLocalMode && (oneProp.equals(hadoopSysDir) || oneProp.equals(hadoopWorkDir))) {
ql/src/java/org/apache/hadoop/hive/ql/exec/ExecDriver.java,717,continue;
ql/src/java/org/apache/hadoop/hive/ql/exec/ExecDriver.java,720,String oneValue = deltaP.getProperty(oneProp);
ql/src/java/org/apache/hadoop/hive/ql/exec/ExecDriver.java,722,"sb.append(""-jobconf "");"
ql/src/java/org/apache/hadoop/hive/ql/exec/ExecDriver.java,723,sb.append(oneProp);
ql/src/java/org/apache/hadoop/hive/ql/exec/ExecDriver.java,724,"sb.append(""="");"
ql/src/java/org/apache/hadoop/hive/ql/exec/ExecDriver.java,725,"sb.append(URLEncoder.encode(oneValue, ""UTF-8""));"
ql/src/java/org/apache/hadoop/hive/ql/exec/ExecDriver.java,726,"sb.append("" "");"
ql/src/java/org/apache/hadoop/hive/ql/exec/ExecDriver.java,733,if (hadoopLocalMode) {
ql/src/java/org/apache/hadoop/hive/ql/exec/ExecDriver.java,734,"sb.append(""-jobconf "");"
ql/src/java/org/apache/hadoop/hive/ql/exec/ExecDriver.java,735,sb.append(hadoopSysDir);
ql/src/java/org/apache/hadoop/hive/ql/exec/ExecDriver.java,736,"sb.append(""="");"
ql/src/java/org/apache/hadoop/hive/ql/exec/ExecDriver.java,737,"sb.append(URLEncoder.encode(hconf.get(hadoopSysDir) + ""/"" + Utilities.randGen.nextInt(),"
ql/src/java/org/apache/hadoop/hive/ql/exec/ExecDriver.java,738,"""UTF-8""));"
ql/src/java/org/apache/hadoop/hive/ql/exec/ExecDriver.java,740,"sb.append("" "");"
ql/src/java/org/apache/hadoop/hive/ql/exec/ExecDriver.java,741,"sb.append(""-jobconf "");"
ql/src/java/org/apache/hadoop/hive/ql/exec/ExecDriver.java,742,sb.append(hadoopWorkDir);
ql/src/java/org/apache/hadoop/hive/ql/exec/ExecDriver.java,743,"sb.append(""="");"
ql/src/java/org/apache/hadoop/hive/ql/exec/ExecDriver.java,744,"sb.append(URLEncoder.encode(hconf.get(hadoopWorkDir) + ""/"" + Utilities.randGen.nextInt(),"
ql/src/java/org/apache/hadoop/hive/ql/exec/ExecDriver.java,745,"""UTF-8""));"
ql/src/java/org/apache/hadoop/hive/ql/exec/MapRedTask.java,169,String hiveConfArgs = generateCmdLine(conf);
ql/src/java/org/apache/hadoop/hive/ql/exec/MapredLocalTask.java,133,String hiveConfArgs = ExecDriver.generateCmdLine(conf);
ql/src/java/org/apache/hadoop/hive/ql/io/rcfile/merge/BlockMergeTask.java,271,"} else if (args[i].equals(""-jobconf"")) {"
ql/src/java/org/apache/hadoop/hive/ql/io/rcfile/merge/BlockMergeTask.java,272,jobConfArgs.add(args[++i]);
ql/src/java/org/apache/hadoop/hive/ql/io/rcfile/merge/BlockMergeTask.java,315,"StringBuilder sb = new StringBuilder(""JobConf:\n"");"
ql/src/java/org/apache/hadoop/hive/ql/io/rcfile/merge/BlockMergeTask.java,317,for (String one : jobConfArgs) {
ql/src/java/org/apache/hadoop/hive/ql/io/rcfile/merge/BlockMergeTask.java,318,int eqIndex = one.indexOf('=');
ql/src/java/org/apache/hadoop/hive/ql/io/rcfile/merge/BlockMergeTask.java,319,if (eqIndex != -1) {
ql/src/java/org/apache/hadoop/hive/ql/io/rcfile/merge/BlockMergeTask.java,320,try {
ql/src/java/org/apache/hadoop/hive/ql/io/rcfile/merge/BlockMergeTask.java,321,"String key = one.substring(0, eqIndex);"
ql/src/java/org/apache/hadoop/hive/ql/io/rcfile/merge/BlockMergeTask.java,322,"String value = URLDecoder.decode(one.substring(eqIndex + 1), ""UTF-8"");"
ql/src/java/org/apache/hadoop/hive/ql/io/rcfile/merge/BlockMergeTask.java,323,"conf.set(key, value);"
ql/src/java/org/apache/hadoop/hive/ql/io/rcfile/merge/BlockMergeTask.java,324,"sb.append(key).append(""="").append(value).append(""\n"");"
ql/src/java/org/apache/hadoop/hive/ql/io/rcfile/merge/BlockMergeTask.java,325,} catch (UnsupportedEncodingException e) {
ql/src/java/org/apache/hadoop/hive/ql/io/rcfile/merge/BlockMergeTask.java,326,"System.err.println(""Unexpected error "" + e.getMessage()"
ql/src/java/org/apache/hadoop/hive/ql/io/rcfile/merge/BlockMergeTask.java,327,"+ "" while encoding "" + one.substring(eqIndex + 1));"
ql/src/java/org/apache/hadoop/hive/ql/io/rcfile/merge/BlockMergeTask.java,328,System.exit(3);
ql/src/java/org/apache/hadoop/hive/ql/io/rcfile/merge/BlockMergeTask.java,368,"+ ""-outputDir outputDir [-jobconf k1=v1 [-jobconf k2=v2] ...] "");"
ql/src/java/org/apache/hadoop/hive/ql/exec/GroupByOperator.java,464,if (c.isInstance(new String())) {
ql/src/java/org/apache/hadoop/hive/ql/exec/GroupByOperator.java,851,if (key instanceof LazyPrimitive) {
ql/src/java/org/apache/hadoop/hive/ql/exec/GroupByOperator.java,876,totalVariableSize += ((String) f.get(agg)).length();
ql/src/java/org/apache/hadoop/hive/ql/exec/GroupByOperator.java,694,if (hashAggr && !groupKeyIsNotReduceKey) {
ql/src/java/org/apache/hadoop/hive/ql/exec/GroupByOperator.java,777,if ((!groupKeyIsNotReduceKey || firstRowInGroup)
ql/src/java/org/apache/hadoop/hive/ql/exec/GroupByOperator.java,778,&& shouldBeFlushed(newKeys)) {
ql/src/java/org/apache/hadoop/hive/ql/parse/EximUtil.java,81,"path = new Path(System.getProperty(""build.dir.hive""),"
ql/src/java/org/apache/hadoop/hive/ql/parse/EximUtil.java,82,path).toString();
ql/src/java/org/apache/hadoop/hive/ql/parse/EximUtil.java,84,"path = new Path(new Path(""/user/"" + System.getProperty(""user.name"")),"
ql/src/java/org/apache/hadoop/hive/ql/parse/EximUtil.java,85,path).toString();
ql/src/java/org/apache/hadoop/hive/ql/parse/EximUtil.java,146,"path = new Path(System.getProperty(""build.dir.hive""),"
ql/src/java/org/apache/hadoop/hive/ql/parse/EximUtil.java,147,path).toString();
ql/src/java/org/apache/hadoop/hive/ql/parse/EximUtil.java,207,FSDataInputStream mdstream = fs.open(metadataPath);
serde/src/java/org/apache/hadoop/hive/serde2/lazy/objectinspector/primitive/LazyBinaryObjectInspector.java,45,ByteArrayRef ba = new ByteArrayRef();
serde/src/java/org/apache/hadoop/hive/serde2/lazy/objectinspector/primitive/LazyBinaryObjectInspector.java,46,ba.setData(((LazyBinary) o).getWritableObject().getBytes());
serde/src/java/org/apache/hadoop/hive/serde2/lazy/objectinspector/primitive/LazyBinaryObjectInspector.java,47,return ba;
serde/src/java/org/apache/hadoop/hive/serde2/lazy/objectinspector/primitive/LazyBinaryObjectInspector.java,41,public ByteArrayRef getPrimitiveJavaObject(Object o) {
serde/src/java/org/apache/hadoop/hive/serde2/objectinspector/primitive/JavaBinaryObjectInspector.java,66,ByteArrayRef ba = (ByteArrayRef)o;
serde/src/java/org/apache/hadoop/hive/serde2/objectinspector/primitive/JavaBinaryObjectInspector.java,67,ba.setData(bw.getBytes());
serde/src/java/org/apache/hadoop/hive/serde2/objectinspector/primitive/JavaBinaryObjectInspector.java,68,return ba;
serde/src/java/org/apache/hadoop/hive/serde2/objectinspector/primitive/JavaBinaryObjectInspector.java,83,ByteArrayRef ba = new ByteArrayRef();
serde/src/java/org/apache/hadoop/hive/serde2/objectinspector/primitive/JavaBinaryObjectInspector.java,84,ba.setData(bw.getBytes());
serde/src/java/org/apache/hadoop/hive/serde2/objectinspector/primitive/JavaBinaryObjectInspector.java,85,return ba;
serde/src/java/org/apache/hadoop/hive/serde2/objectinspector/primitive/JavaBinaryObjectInspector.java,3,import org.apache.hadoop.hive.serde2.lazy.ByteArrayRef;
serde/src/java/org/apache/hadoop/hive/serde2/objectinspector/primitive/JavaBinaryObjectInspector.java,32,public ByteArrayRef copyObject(Object o) {
serde/src/java/org/apache/hadoop/hive/serde2/objectinspector/primitive/JavaBinaryObjectInspector.java,37,ByteArrayRef ba = new ByteArrayRef();
serde/src/java/org/apache/hadoop/hive/serde2/objectinspector/primitive/JavaBinaryObjectInspector.java,38,byte[] incoming = ((ByteArrayRef)o).getData();
serde/src/java/org/apache/hadoop/hive/serde2/objectinspector/primitive/JavaBinaryObjectInspector.java,41,ba.setData(outgoing);
serde/src/java/org/apache/hadoop/hive/serde2/objectinspector/primitive/JavaBinaryObjectInspector.java,42,return ba;
serde/src/java/org/apache/hadoop/hive/serde2/objectinspector/primitive/JavaBinaryObjectInspector.java,47,return o == null ? null : new BytesWritable(((ByteArrayRef)o).getData());
serde/src/java/org/apache/hadoop/hive/serde2/objectinspector/primitive/JavaBinaryObjectInspector.java,51,public ByteArrayRef getPrimitiveJavaObject(Object o) {
serde/src/java/org/apache/hadoop/hive/serde2/objectinspector/primitive/JavaBinaryObjectInspector.java,52,return (ByteArrayRef)o;
serde/src/java/org/apache/hadoop/hive/serde2/objectinspector/primitive/JavaBinaryObjectInspector.java,55,"public ByteArrayRef set(Object o, ByteArrayRef bb) {"
serde/src/java/org/apache/hadoop/hive/serde2/objectinspector/primitive/JavaBinaryObjectInspector.java,56,ByteArrayRef ba = (ByteArrayRef)o;
serde/src/java/org/apache/hadoop/hive/serde2/objectinspector/primitive/JavaBinaryObjectInspector.java,57,ba.setData(bb.getData());
serde/src/java/org/apache/hadoop/hive/serde2/objectinspector/primitive/JavaBinaryObjectInspector.java,58,return ba;
serde/src/java/org/apache/hadoop/hive/serde2/objectinspector/primitive/JavaBinaryObjectInspector.java,72,public ByteArrayRef create(ByteArrayRef bb) {
serde/src/java/org/apache/hadoop/hive/serde2/objectinspector/primitive/JavaBinaryObjectInspector.java,73,ByteArrayRef ba = new ByteArrayRef();
serde/src/java/org/apache/hadoop/hive/serde2/objectinspector/primitive/JavaBinaryObjectInspector.java,74,ba.setData(bb.getData());
serde/src/java/org/apache/hadoop/hive/serde2/objectinspector/primitive/JavaBinaryObjectInspector.java,75,return ba;
serde/src/java/org/apache/hadoop/hive/serde2/objectinspector/primitive/WritableBinaryObjectInspector.java,47,ByteArrayRef ba = new ByteArrayRef();
serde/src/java/org/apache/hadoop/hive/serde2/objectinspector/primitive/WritableBinaryObjectInspector.java,48,ba.setData(((BytesWritable)o).getBytes());
serde/src/java/org/apache/hadoop/hive/serde2/objectinspector/primitive/WritableBinaryObjectInspector.java,49,return ba;
serde/src/java/org/apache/hadoop/hive/serde2/objectinspector/primitive/WritableBinaryObjectInspector.java,21,import org.apache.hadoop.hive.serde2.lazy.ByteArrayRef;
serde/src/java/org/apache/hadoop/hive/serde2/objectinspector/primitive/WritableBinaryObjectInspector.java,58,"public BytesWritable set(Object o, ByteArrayRef bb) {"
serde/src/java/org/apache/hadoop/hive/serde2/objectinspector/primitive/WritableBinaryObjectInspector.java,61,"incoming.set(bb.getData(),0,bb.getData().length);"
serde/src/java/org/apache/hadoop/hive/serde2/objectinspector/primitive/WritableBinaryObjectInspector.java,76,public BytesWritable create(ByteArrayRef bb) {
serde/src/java/org/apache/hadoop/hive/serde2/objectinspector/primitive/WritableBinaryObjectInspector.java,77,return new BytesWritable(bb.getData());
ql/src/java/org/apache/hadoop/hive/ql/exec/FunctionRegistry.java,242,"static Map<String, FunctionInfo> mFunctions = new LinkedHashMap<String, FunctionInfo>();"
ql/src/java/org/apache/hadoop/hive/ql/exec/FunctionRegistry.java,216,import org.apache.hadoop.hive.serde.Constants;
ql/src/java/org/apache/hadoop/hive/ql/exec/FunctionRegistry.java,379,"registerUDF(Constants.BOOLEAN_TYPE_NAME, UDFToBoolean.class, false,"
ql/src/java/org/apache/hadoop/hive/ql/exec/FunctionRegistry.java,381,"registerUDF(Constants.TINYINT_TYPE_NAME, UDFToByte.class, false,"
ql/src/java/org/apache/hadoop/hive/ql/exec/FunctionRegistry.java,383,"registerUDF(Constants.SMALLINT_TYPE_NAME, UDFToShort.class, false,"
ql/src/java/org/apache/hadoop/hive/ql/exec/FunctionRegistry.java,385,"registerUDF(Constants.INT_TYPE_NAME, UDFToInteger.class, false,"
ql/src/java/org/apache/hadoop/hive/ql/exec/FunctionRegistry.java,387,"registerUDF(Constants.BIGINT_TYPE_NAME, UDFToLong.class, false,"
ql/src/java/org/apache/hadoop/hive/ql/exec/FunctionRegistry.java,389,"registerUDF(Constants.FLOAT_TYPE_NAME, UDFToFloat.class, false,"
ql/src/java/org/apache/hadoop/hive/ql/exec/FunctionRegistry.java,391,"registerUDF(Constants.DOUBLE_TYPE_NAME, UDFToDouble.class, false,"
ql/src/java/org/apache/hadoop/hive/ql/exec/FunctionRegistry.java,393,"registerUDF(Constants.STRING_TYPE_NAME, UDFToString.class, false,"
ql/src/java/org/apache/hadoop/hive/ql/exec/FunctionRegistry.java,396,"registerGenericUDF(Constants.TIMESTAMP_TYPE_NAME,"
ql/src/java/org/apache/hadoop/hive/ql/exec/FunctionRegistry.java,398,"registerGenericUDF(Constants.BINARY_TYPE_NAME,"
ql/src/java/org/apache/hadoop/hive/ql/exec/FunctionRegistry.java,624,"registerNumericType(Constants.TINYINT_TYPE_NAME, 1);"
ql/src/java/org/apache/hadoop/hive/ql/exec/FunctionRegistry.java,625,"registerNumericType(Constants.SMALLINT_TYPE_NAME, 2);"
ql/src/java/org/apache/hadoop/hive/ql/exec/FunctionRegistry.java,626,"registerNumericType(Constants.INT_TYPE_NAME, 3);"
ql/src/java/org/apache/hadoop/hive/ql/exec/FunctionRegistry.java,627,"registerNumericType(Constants.BIGINT_TYPE_NAME, 4);"
ql/src/java/org/apache/hadoop/hive/ql/exec/FunctionRegistry.java,628,"registerNumericType(Constants.FLOAT_TYPE_NAME, 5);"
ql/src/java/org/apache/hadoop/hive/ql/exec/FunctionRegistry.java,629,"registerNumericType(Constants.DOUBLE_TYPE_NAME, 6);"
ql/src/java/org/apache/hadoop/hive/ql/exec/FunctionRegistry.java,630,"registerNumericType(Constants.STRING_TYPE_NAME, 7);"
serde/src/java/org/apache/hadoop/hive/serde2/objectinspector/primitive/BinaryObjectInspector.java,28,ByteArrayRef getPrimitiveJavaObject(Object o);
serde/src/java/org/apache/hadoop/hive/serde2/objectinspector/primitive/PrimitiveObjectInspectorConverter.java,271,ByteArrayRef ba = new ByteArrayRef();
serde/src/java/org/apache/hadoop/hive/serde2/objectinspector/primitive/PrimitiveObjectInspectorConverter.java,272,ba.setData(new byte[]{});
serde/src/java/org/apache/hadoop/hive/serde2/objectinspector/primitive/PrimitiveObjectInspectorConverter.java,273,r = outputOI.create(ba);
serde/src/java/org/apache/hadoop/hive/serde2/objectinspector/primitive/PrimitiveObjectInspectorConverter.java,279,inputOI));
serde/src/java/org/apache/hadoop/hive/serde2/objectinspector/primitive/PrimitiveObjectInspectorUtils.java,149,"ByteArrayRef.class, BytesWritable.class);"
serde/src/java/org/apache/hadoop/hive/serde2/objectinspector/primitive/PrimitiveObjectInspectorUtils.java,28,import org.apache.hadoop.hive.serde.Constants;
serde/src/java/org/apache/hadoop/hive/serde2/objectinspector/primitive/PrimitiveObjectInspectorUtils.java,148,"PrimitiveCategory.BINARY, Constants.BINARY_TYPE_NAME, byte[].class,"
serde/src/java/org/apache/hadoop/hive/serde2/objectinspector/primitive/PrimitiveObjectInspectorUtils.java,151,"PrimitiveCategory.STRING, Constants.STRING_TYPE_NAME, null, String.class,"
serde/src/java/org/apache/hadoop/hive/serde2/objectinspector/primitive/PrimitiveObjectInspectorUtils.java,154,"PrimitiveCategory.BOOLEAN, Constants.BOOLEAN_TYPE_NAME, Boolean.TYPE,"
serde/src/java/org/apache/hadoop/hive/serde2/objectinspector/primitive/PrimitiveObjectInspectorUtils.java,157,"PrimitiveCategory.INT, Constants.INT_TYPE_NAME, Integer.TYPE,"
serde/src/java/org/apache/hadoop/hive/serde2/objectinspector/primitive/PrimitiveObjectInspectorUtils.java,160,"PrimitiveCategory.LONG, Constants.BIGINT_TYPE_NAME, Long.TYPE,"
serde/src/java/org/apache/hadoop/hive/serde2/objectinspector/primitive/PrimitiveObjectInspectorUtils.java,163,"PrimitiveCategory.FLOAT, Constants.FLOAT_TYPE_NAME, Float.TYPE,"
serde/src/java/org/apache/hadoop/hive/serde2/objectinspector/primitive/PrimitiveObjectInspectorUtils.java,166,"PrimitiveCategory.VOID, Constants.VOID_TYPE_NAME, Void.TYPE, Void.class,"
serde/src/java/org/apache/hadoop/hive/serde2/objectinspector/primitive/PrimitiveObjectInspectorUtils.java,171,"PrimitiveCategory.DOUBLE, Constants.DOUBLE_TYPE_NAME, Double.TYPE,"
serde/src/java/org/apache/hadoop/hive/serde2/objectinspector/primitive/PrimitiveObjectInspectorUtils.java,174,"PrimitiveCategory.BYTE, Constants.TINYINT_TYPE_NAME, Byte.TYPE,"
serde/src/java/org/apache/hadoop/hive/serde2/objectinspector/primitive/PrimitiveObjectInspectorUtils.java,177,"PrimitiveCategory.SHORT, Constants.SMALLINT_TYPE_NAME, Short.TYPE,"
serde/src/java/org/apache/hadoop/hive/serde2/objectinspector/primitive/PrimitiveObjectInspectorUtils.java,180,"PrimitiveCategory.TIMESTAMP, Constants.TIMESTAMP_TYPE_NAME, null,"
serde/src/java/org/apache/hadoop/hive/serde2/objectinspector/primitive/PrimitiveObjectInspectorUtils.java,754,result = new Timestamp(((BooleanObjectInspector) oi).get(o) ? 1 : 0);
serde/src/java/org/apache/hadoop/hive/serde2/objectinspector/primitive/PrimitiveObjectInspectorUtils.java,757,result = new Timestamp(((ByteObjectInspector) oi).get(o));
serde/src/java/org/apache/hadoop/hive/serde2/objectinspector/primitive/PrimitiveObjectInspectorUtils.java,760,result = new Timestamp(((ShortObjectInspector) oi).get(o));
serde/src/java/org/apache/hadoop/hive/serde2/objectinspector/primitive/PrimitiveObjectInspectorUtils.java,763,result = new Timestamp(((IntObjectInspector) oi).get(o));
serde/src/java/org/apache/hadoop/hive/serde2/objectinspector/primitive/PrimitiveObjectInspectorUtils.java,766,result = new Timestamp(((LongObjectInspector) oi).get(o));
serde/src/java/org/apache/hadoop/hive/serde2/objectinspector/primitive/PrimitiveObjectInspectorUtils.java,769,result = TimestampWritable.floatToTimestamp(((FloatObjectInspector) oi).get(o));
serde/src/java/org/apache/hadoop/hive/serde2/objectinspector/primitive/PrimitiveObjectInspectorUtils.java,749,switch (oi.getPrimitiveCategory()) {
serde/src/java/org/apache/hadoop/hive/serde2/objectinspector/primitive/PrimitiveObjectInspectorUtils.java,772,result = TimestampWritable.doubleToTimestamp(((DoubleObjectInspector) oi).get(o));
serde/src/java/org/apache/hadoop/hive/serde2/objectinspector/primitive/PrimitiveObjectInspectorUtils.java,775,StringObjectInspector soi = (StringObjectInspector) oi;
serde/src/java/org/apache/hadoop/hive/serde2/objectinspector/primitive/PrimitiveObjectInspectorUtils.java,792,result = ((TimestampObjectInspector) oi).getPrimitiveWritableObject(o).getTimestamp();
serde/src/java/org/apache/hadoop/hive/serde2/objectinspector/primitive/PrimitiveObjectInspectorUtils.java,796,+ oi.getTypeName());
serde/src/java/org/apache/hadoop/hive/serde2/objectinspector/primitive/SettableBinaryObjectInspector.java,26,"Object set(Object o, ByteArrayRef bb);"
serde/src/java/org/apache/hadoop/hive/serde2/objectinspector/primitive/SettableBinaryObjectInspector.java,30,Object create(ByteArrayRef bb);
serde/src/test/org/apache/hadoop/hive/serde2/TestStatsSerde.java,120,"ByteArrayRef ba = TestBinarySortableSerDe.getRandBA(r, i);"
serde/src/test/org/apache/hadoop/hive/serde2/TestStatsSerde.java,28,import org.apache.hadoop.hive.serde.Constants;
serde/src/test/org/apache/hadoop/hive/serde2/TestStatsSerde.java,133,"schema.setProperty(Constants.LIST_COLUMNS, fieldNames);"
serde/src/test/org/apache/hadoop/hive/serde2/TestStatsSerde.java,134,"schema.setProperty(Constants.LIST_COLUMN_TYPES, fieldTypes);"
serde/src/test/org/apache/hadoop/hive/serde2/TestStatsSerde.java,237,"tbl.setProperty(Constants.SERIALIZATION_FORMAT, ""9"");"
serde/src/test/org/apache/hadoop/hive/serde2/TestStatsSerde.java,242,"tbl.setProperty(Constants.SERIALIZATION_NULL_FORMAT, ""NULL"");"
serde/src/test/org/apache/hadoop/hive/serde2/binarysortable/MyTestClass.java,34,ByteArrayRef myBA;
serde/src/test/org/apache/hadoop/hive/serde2/binarysortable/MyTestClass.java,40,"String st, MyTestInnerStruct is, List<Integer> li, ByteArrayRef ba) {"
serde/src/test/org/apache/hadoop/hive/serde2/binarysortable/TestBinarySortableSerDe.java,154,"public static ByteArrayRef getRandBA(Random r, int len){"
serde/src/test/org/apache/hadoop/hive/serde2/binarysortable/TestBinarySortableSerDe.java,159,ByteArrayRef ba = new ByteArrayRef();
serde/src/test/org/apache/hadoop/hive/serde2/binarysortable/TestBinarySortableSerDe.java,160,ba.setData(bytes);
serde/src/test/org/apache/hadoop/hive/serde2/binarysortable/TestBinarySortableSerDe.java,161,return ba;
serde/src/test/org/apache/hadoop/hive/serde2/binarysortable/TestBinarySortableSerDe.java,29,import org.apache.hadoop.hive.serde.Constants;
serde/src/test/org/apache/hadoop/hive/serde2/binarysortable/TestBinarySortableSerDe.java,67,"schema.setProperty(Constants.LIST_COLUMNS, fieldNames);"
serde/src/test/org/apache/hadoop/hive/serde2/binarysortable/TestBinarySortableSerDe.java,68,"schema.setProperty(Constants.LIST_COLUMN_TYPES, fieldTypes);"
serde/src/test/org/apache/hadoop/hive/serde2/binarysortable/TestBinarySortableSerDe.java,69,"schema.setProperty(Constants.SERIALIZATION_SORT_ORDER, order);"
serde/src/test/org/apache/hadoop/hive/serde2/columnar/TestLazyBinaryColumnarSerDe.java,62,ByteArrayRef mBA;
serde/src/test/org/apache/hadoop/hive/serde2/columnar/TestLazyBinaryColumnarSerDe.java,86,ByteArrayRef ba = new ByteArrayRef();
serde/src/test/org/apache/hadoop/hive/serde2/columnar/TestLazyBinaryColumnarSerDe.java,87,ba.setData(new byte[]{'2'});
serde/src/test/org/apache/hadoop/hive/serde2/columnar/TestLazyBinaryColumnarSerDe.java,88,outerStruct.mBA =  ba;
serde/src/test/org/apache/hadoop/hive/serde2/columnar/TestLazyBinaryColumnarSerDe.java,129,ByteArrayRef ba = new ByteArrayRef();
serde/src/test/org/apache/hadoop/hive/serde2/columnar/TestLazyBinaryColumnarSerDe.java,130,ba.setData(new byte[]{'a'});
serde/src/test/org/apache/hadoop/hive/serde2/columnar/TestLazyBinaryColumnarSerDe.java,131,outerStruct.mBA = ba;
serde/src/test/org/apache/hadoop/hive/serde2/columnar/TestLazyBinaryColumnarSerDe.java,166,ByteArrayRef ba = new ByteArrayRef();
serde/src/test/org/apache/hadoop/hive/serde2/columnar/TestLazyBinaryColumnarSerDe.java,167,ba.setData(new byte[]{});
serde/src/test/org/apache/hadoop/hive/serde2/columnar/TestLazyBinaryColumnarSerDe.java,168,outerStruct.mBA = ba;
serde/src/test/org/apache/hadoop/hive/serde2/columnar/TestLazyBinaryColumnarSerDe.java,225,ByteArrayRef ba = new ByteArrayRef();
serde/src/test/org/apache/hadoop/hive/serde2/columnar/TestLazyBinaryColumnarSerDe.java,226,ba.setData(new byte[]{'3'});
serde/src/test/org/apache/hadoop/hive/serde2/columnar/TestLazyBinaryColumnarSerDe.java,227,outerStruct.mBA = ba;
serde/src/test/org/apache/hadoop/hive/serde2/columnar/TestLazyBinaryColumnarSerDe.java,31,import org.apache.hadoop.hive.serde.Constants;
serde/src/test/org/apache/hadoop/hive/serde2/columnar/TestLazyBinaryColumnarSerDe.java,73,"props.setProperty(Constants.LIST_COLUMNS, cols);"
serde/src/test/org/apache/hadoop/hive/serde2/columnar/TestLazyBinaryColumnarSerDe.java,74,"props.setProperty(Constants.LIST_COLUMN_TYPES, ObjectInspectorUtils.getFieldTypes(oi));"
serde/src/test/org/apache/hadoop/hive/serde2/columnar/TestLazyBinaryColumnarSerDe.java,116,"props.setProperty(Constants.LIST_COLUMNS, cols);"
serde/src/test/org/apache/hadoop/hive/serde2/columnar/TestLazyBinaryColumnarSerDe.java,117,"props.setProperty(Constants.LIST_COLUMN_TYPES, ObjectInspectorUtils.getFieldTypes(oi));"
serde/src/test/org/apache/hadoop/hive/serde2/columnar/TestLazyBinaryColumnarSerDe.java,153,"props.setProperty(Constants.LIST_COLUMNS, cols);"
serde/src/test/org/apache/hadoop/hive/serde2/columnar/TestLazyBinaryColumnarSerDe.java,154,"props.setProperty(Constants.LIST_COLUMN_TYPES, ObjectInspectorUtils.getFieldTypes(oi));"
serde/src/test/org/apache/hadoop/hive/serde2/columnar/TestLazyBinaryColumnarSerDe.java,188,"props.setProperty(Constants.LIST_COLUMNS, cols);"
serde/src/test/org/apache/hadoop/hive/serde2/columnar/TestLazyBinaryColumnarSerDe.java,189,"props.setProperty(Constants.LIST_COLUMN_TYPES, ObjectInspectorUtils.getFieldTypes(oi));"
serde/src/test/org/apache/hadoop/hive/serde2/columnar/TestLazyBinaryColumnarSerDe.java,212,"props.setProperty(Constants.LIST_COLUMNS, cols);"
serde/src/test/org/apache/hadoop/hive/serde2/columnar/TestLazyBinaryColumnarSerDe.java,213,"props.setProperty(Constants.LIST_COLUMN_TYPES, ObjectInspectorUtils.getFieldTypes(oi));"
serde/src/test/org/apache/hadoop/hive/serde2/lazybinary/MyTestClassBigger.java,40,ByteArrayRef myBA;
serde/src/test/org/apache/hadoop/hive/serde2/lazybinary/MyTestClassBigger.java,48,"ByteArrayRef ba, Map<String, List<MyTestInnerStruct>> mp) {"
serde/src/test/org/apache/hadoop/hive/serde2/lazybinary/TestLazyBinarySerDe.java,198,"ByteArrayRef ba  = TestBinarySortableSerDe.getRandBA(r, itest);"
serde/src/test/org/apache/hadoop/hive/serde2/lazybinary/TestLazyBinarySerDe.java,265,"ByteArrayRef ba = TestBinarySortableSerDe.getRandBA(r, itest);"
serde/src/test/org/apache/hadoop/hive/serde2/lazybinary/TestLazyBinarySerDe.java,320,"ByteArrayRef ba = TestBinarySortableSerDe.getRandBA(r, itest);"
serde/src/test/org/apache/hadoop/hive/serde2/lazybinary/TestLazyBinarySerDe.java,493,"ByteArrayRef ba = TestBinarySortableSerDe.getRandBA(r, i);"
serde/src/test/org/apache/hadoop/hive/serde2/lazybinary/TestLazyBinarySerDe.java,31,import org.apache.hadoop.hive.serde.Constants;
serde/src/test/org/apache/hadoop/hive/serde2/lazybinary/TestLazyBinarySerDe.java,84,"schema.setProperty(Constants.LIST_COLUMNS, fieldNames);"
serde/src/test/org/apache/hadoop/hive/serde2/lazybinary/TestLazyBinarySerDe.java,85,"schema.setProperty(Constants.LIST_COLUMN_TYPES, fieldTypes);"
serde/src/test/org/apache/hadoop/hive/serde2/objectinspector/TestStandardObjectInspectors.java,92,"doTestStandardPrimitiveObjectInspector(BytesWritable.class, ByteArrayRef.class);"
serde/src/test/org/apache/hadoop/hive/serde2/objectinspector/TestStandardObjectInspectors.java,144,ByteArrayRef ba = new ByteArrayRef();
serde/src/test/org/apache/hadoop/hive/serde2/objectinspector/TestStandardObjectInspectors.java,145,ba.setData(new byte[]{'3'});
serde/src/test/org/apache/hadoop/hive/serde2/objectinspector/TestStandardObjectInspectors.java,146,"doTestJavaPrimitiveObjectInspector(BytesWritable.class, ByteArrayRef.class, ba);"
serde/src/test/org/apache/hadoop/hive/serde2/objectinspector/TestStandardObjectInspectors.java,119,assertEquals(PrimitiveObjectInspectorUtils
ql/src/java/org/apache/hadoop/hive/ql/Driver.java,617,if (tbl.isPartitioned() && tableUsePartLevelAuth.get(tbl.getTableName())) {
ql/src/java/org/apache/hadoop/hive/ql/Driver.java,654,if (tableUsePartLevelAuth.get(tbl.getTableName())) {
ql/src/java/org/apache/hadoop/hive/ql/Driver.java,1130,if (running.size() != 0) {
ql/src/java/org/apache/hadoop/hive/ql/Driver.java,1131,taskCleanup();
ql/src/java/org/apache/hadoop/hive/ql/Driver.java,1169,if (running.size() != 0) {
ql/src/java/org/apache/hadoop/hive/ql/Driver.java,1170,taskCleanup();
ql/src/java/org/apache/hadoop/hive/ql/Driver.java,1336,public void taskCleanup() {
ql/src/java/org/apache/hadoop/hive/ql/Driver.java,1340,System.exit(9);
ql/src/java/org/apache/hadoop/hive/ql/Driver.java,410,"command = new VariableSubstitution().substitute(conf,command);"
ql/src/java/org/apache/hadoop/hive/ql/Driver.java,425,if (saHooks != null) {
ql/src/java/org/apache/hadoop/hive/ql/Driver.java,393,PerfLogger perfLogger = PerfLogger.getPerfLogger();
ql/src/java/org/apache/hadoop/hive/ql/Driver.java,773,PerfLogger perfLogger = PerfLogger.getPerfLogger();
ql/src/java/org/apache/hadoop/hive/ql/Driver.java,874,PerfLogger perfLogger = PerfLogger.getPerfLogger();
ql/src/java/org/apache/hadoop/hive/ql/Driver.java,906,PerfLogger perfLogger = PerfLogger.getPerfLogger(true);
ql/src/java/org/apache/hadoop/hive/ql/Driver.java,1034,PerfLogger perfLogger = PerfLogger.getPerfLogger();
ql/src/java/org/apache/hadoop/hive/ql/Driver.java,751,"+ ""/"" + p.getTable().getTableName()"
ql/src/java/org/apache/hadoop/hive/ql/Driver.java,434,"hook.postAnalyze(hookCtx, sem.getRootTasks());"
ql/src/java/org/apache/hadoop/hive/ql/Driver.java,1044,"conf.setVar(HiveConf.ConfVars.HIVEQUERYSTRING, queryStr);"
ant/src/org/apache/hadoop/hive/ant/QTestGenTask.java,351,"ctx.put(""resultsDir"", resultsDir);"
ant/src/org/apache/hadoop/hive/ant/QTestGenTask.java,352,"ctx.put(""logDir"", logDir);"
contrib/src/test/org/apache/hadoop/hive/contrib/mr/TestGenericMR.java,65,"assertEquals(in + ""\n"", out.toString());"
contrib/src/test/org/apache/hadoop/hive/contrib/mr/TestGenericMR.java,82,"assertEquals(expected, out.toString());"
contrib/src/test/org/apache/hadoop/hive/contrib/mr/TestGenericMR.java,91,"assertEquals(in + ""\n"", out.toString());"
contrib/src/test/org/apache/hadoop/hive/contrib/mr/TestGenericMR.java,114,"assertEquals(expected, out.toString());"
ql/src/java/org/apache/hadoop/hive/ql/Context.java,108,"localScratchDir = System.getProperty(""java.io.tmpdir"")"
ql/src/java/org/apache/hadoop/hive/ql/Context.java,109,#NAME?
ql/src/java/org/apache/hadoop/hive/ql/Context.java,110,+ executionId;
ql/src/java/org/apache/hadoop/hive/ql/parse/LoadSemanticAnalyzer.java,83,"path = new Path(System.getProperty(""user.dir""), path).toString();"
ql/src/java/org/apache/hadoop/hive/ql/parse/LoadSemanticAnalyzer.java,21,import java.io.IOException;
ql/src/java/org/apache/hadoop/hive/ql/parse/LoadSemanticAnalyzer.java,22,import java.io.Serializable;
ql/src/java/org/apache/hadoop/hive/ql/parse/LoadSemanticAnalyzer.java,23,import java.net.URI;
ql/src/java/org/apache/hadoop/hive/ql/parse/LoadSemanticAnalyzer.java,24,import java.net.URISyntaxException;
ql/src/java/org/apache/hadoop/hive/ql/parse/LoadSemanticAnalyzer.java,25,import java.util.LinkedHashMap;
ql/src/java/org/apache/hadoop/hive/ql/parse/LoadSemanticAnalyzer.java,26,import java.util.List;
ql/src/java/org/apache/hadoop/hive/ql/parse/LoadSemanticAnalyzer.java,27,import java.util.Map;
ql/src/java/org/apache/hadoop/hive/ql/parse/LoadSemanticAnalyzer.java,194,if (ts.tableHandle.isOffline()){
ql/src/java/org/apache/hadoop/hive/ql/parse/LoadSemanticAnalyzer.java,195,throw new SemanticException(
ql/src/java/org/apache/hadoop/hive/ql/parse/LoadSemanticAnalyzer.java,196,"ErrorMsg.OFFLINE_TABLE_OR_PARTITION.getMsg("":Table "" + ts.tableName));"
ql/src/java/org/apache/hadoop/hive/ql/parse/LoadSemanticAnalyzer.java,199,if (ts.tableHandle.isView()) {
ql/src/java/org/apache/hadoop/hive/ql/parse/LoadSemanticAnalyzer.java,113,"private void applyConstraints(URI fromURI, URI toURI, Tree ast,"
ql/src/java/org/apache/hadoop/hive/ql/parse/LoadSemanticAnalyzer.java,215,"applyConstraints(fromURI, toURI, fromTree, isLocal);"
ql/src/test/org/apache/hadoop/hive/ql/QTestUtil.java,210,"conf.setVar(HiveConf.ConfVars.HADOOPFS, dfs.getFileSystem().getUri().toString());"
ql/src/test/org/apache/hadoop/hive/ql/QTestUtil.java,213,"(new Path(dfs.getFileSystem().getUri().toString(),"
ql/src/test/org/apache/hadoop/hive/ql/QTestUtil.java,232,"mr = new MiniMRCluster(4, fs.getUri().toString(), 1);"
ql/src/test/org/apache/hadoop/hive/ql/QTestUtil.java,243,"testFiles = dataDir.replace('\\', '/')"
ql/src/test/org/apache/hadoop/hive/ql/QTestUtil.java,244,".replace(""c:"", """");"
ql/src/test/org/apache/hadoop/hive/ql/QTestUtil.java,452,"runLoadCmd(""LOAD DATA LOCAL INPATH '"" + fpath.toString()"
ql/src/test/org/apache/hadoop/hive/ql/QTestUtil.java,464,"runLoadCmd(""LOAD DATA LOCAL INPATH '"" + fpath.toString()"
ql/src/test/org/apache/hadoop/hive/ql/QTestUtil.java,475,"runLoadCmd(""LOAD DATA LOCAL INPATH '"" + fpath.toString()"
ql/src/test/org/apache/hadoop/hive/ql/QTestUtil.java,503,"runLoadCmd(""LOAD DATA LOCAL INPATH '"" + fpath.toString() + ""' INTO TABLE src"");"
ql/src/test/org/apache/hadoop/hive/ql/QTestUtil.java,507,"runLoadCmd(""LOAD DATA LOCAL INPATH '"" + fpath.toString() + ""' INTO TABLE src1"");"
ql/src/test/org/apache/hadoop/hive/ql/QTestUtil.java,511,"runLoadCmd(""LOAD DATA LOCAL INPATH '"" + fpath.toString()"
ql/src/test/org/apache/hadoop/hive/ql/QTestUtil.java,516,"runLoadCmd(""LOAD DATA LOCAL INPATH '"" + fpath.toString()"
ql/src/test/org/apache/hadoop/hive/ql/QTestUtil.java,521,"runLoadCmd(""LOAD DATA LOCAL INPATH '"" + fpath.toString()"
ql/src/test/org/apache/hadoop/hive/ql/QTestUtil.java,695,"String cmdLine = ""diff "" + outf.getPath() + "" "" + expf;"
ql/src/test/org/apache/hadoop/hive/ql/QTestUtil.java,696,System.out.println(cmdLine);
ql/src/test/org/apache/hadoop/hive/ql/QTestUtil.java,698,Process executor = Runtime.getRuntime().exec(cmdLine);
ql/src/test/org/apache/hadoop/hive/ql/QTestUtil.java,700,StreamPrinter outPrinter = new StreamPrinter(
ql/src/test/org/apache/hadoop/hive/ql/QTestUtil.java,701,"executor.getInputStream(), null, SessionState.getConsole().getChildOutStream());"
ql/src/test/org/apache/hadoop/hive/ql/QTestUtil.java,702,StreamPrinter errPrinter = new StreamPrinter(
ql/src/test/org/apache/hadoop/hive/ql/QTestUtil.java,703,"executor.getErrorStream(), null, SessionState.getConsole().getChildErrStream());"
ql/src/test/org/apache/hadoop/hive/ql/QTestUtil.java,705,outPrinter.start();
ql/src/test/org/apache/hadoop/hive/ql/QTestUtil.java,706,errPrinter.start();
ql/src/test/org/apache/hadoop/hive/ql/QTestUtil.java,708,int exitVal = executor.waitFor();
ql/src/test/org/apache/hadoop/hive/ql/QTestUtil.java,711,"System.out.println(""Overwriting results"");"
ql/src/test/org/apache/hadoop/hive/ql/QTestUtil.java,712,"cmdLine = ""cp "" + outf.getPath() + "" "" + expf;"
ql/src/test/org/apache/hadoop/hive/ql/QTestUtil.java,713,executor = Runtime.getRuntime().exec(cmdLine);
ql/src/test/org/apache/hadoop/hive/ql/QTestUtil.java,714,exitVal = executor.waitFor();
ql/src/test/org/apache/hadoop/hive/ql/QTestUtil.java,734,"String cmdLine = ""diff "" + outf.getPath() + "" "" + expf;"
ql/src/test/org/apache/hadoop/hive/ql/QTestUtil.java,735,System.out.println(cmdLine);
ql/src/test/org/apache/hadoop/hive/ql/QTestUtil.java,737,Process executor = Runtime.getRuntime().exec(cmdLine);
ql/src/test/org/apache/hadoop/hive/ql/QTestUtil.java,739,StreamPrinter outPrinter = new StreamPrinter(
ql/src/test/org/apache/hadoop/hive/ql/QTestUtil.java,740,"executor.getInputStream(), null, SessionState.getConsole().getChildOutStream());"
ql/src/test/org/apache/hadoop/hive/ql/QTestUtil.java,741,StreamPrinter errPrinter = new StreamPrinter(
ql/src/test/org/apache/hadoop/hive/ql/QTestUtil.java,742,"executor.getErrorStream(), null, SessionState.getConsole().getChildErrStream());"
ql/src/test/org/apache/hadoop/hive/ql/QTestUtil.java,744,outPrinter.start();
ql/src/test/org/apache/hadoop/hive/ql/QTestUtil.java,745,errPrinter.start();
ql/src/test/org/apache/hadoop/hive/ql/QTestUtil.java,747,int exitVal = executor.waitFor();
ql/src/test/org/apache/hadoop/hive/ql/QTestUtil.java,750,"System.out.println(""Overwriting results"");"
ql/src/test/org/apache/hadoop/hive/ql/QTestUtil.java,751,"cmdLine = ""cp "" + outf.getPath() + "" "" + expf;"
ql/src/test/org/apache/hadoop/hive/ql/QTestUtil.java,752,executor = Runtime.getRuntime().exec(cmdLine);
ql/src/test/org/apache/hadoop/hive/ql/QTestUtil.java,753,exitVal = executor.waitFor();
ql/src/test/org/apache/hadoop/hive/ql/QTestUtil.java,787,String[] cmdArray = new String[] {
ql/src/test/org/apache/hadoop/hive/ql/QTestUtil.java,788,"""diff"","
ql/src/test/org/apache/hadoop/hive/ql/QTestUtil.java,789,"""-b"","
ql/src/test/org/apache/hadoop/hive/ql/QTestUtil.java,790,"outf.getPath(),"
ql/src/test/org/apache/hadoop/hive/ql/QTestUtil.java,791,planFile
ql/src/test/org/apache/hadoop/hive/ql/QTestUtil.java,793,"System.out.println(org.apache.commons.lang.StringUtils.join(cmdArray, ' '));"
ql/src/test/org/apache/hadoop/hive/ql/QTestUtil.java,795,Process executor = Runtime.getRuntime().exec(cmdArray);
ql/src/test/org/apache/hadoop/hive/ql/QTestUtil.java,797,StreamPrinter outPrinter = new StreamPrinter(
ql/src/test/org/apache/hadoop/hive/ql/QTestUtil.java,798,"executor.getInputStream(), null, SessionState.getConsole().getChildOutStream());"
ql/src/test/org/apache/hadoop/hive/ql/QTestUtil.java,799,StreamPrinter errPrinter = new StreamPrinter(
ql/src/test/org/apache/hadoop/hive/ql/QTestUtil.java,800,"executor.getErrorStream(), null, SessionState.getConsole().getChildErrStream());"
ql/src/test/org/apache/hadoop/hive/ql/QTestUtil.java,802,outPrinter.start();
ql/src/test/org/apache/hadoop/hive/ql/QTestUtil.java,803,errPrinter.start();
ql/src/test/org/apache/hadoop/hive/ql/QTestUtil.java,805,int exitVal = executor.waitFor();
ql/src/test/org/apache/hadoop/hive/ql/QTestUtil.java,808,"System.out.println(""Overwriting results"");"
ql/src/test/org/apache/hadoop/hive/ql/QTestUtil.java,809,"String cmdLine = ""cp "" + outf.getPath() + "" "" + planFile;"
ql/src/test/org/apache/hadoop/hive/ql/QTestUtil.java,810,executor = Runtime.getRuntime().exec(cmdLine);
ql/src/test/org/apache/hadoop/hive/ql/QTestUtil.java,811,exitVal = executor.waitFor();
ql/src/test/org/apache/hadoop/hive/ql/QTestUtil.java,938,cmdArray = new String[] {
ql/src/test/org/apache/hadoop/hive/ql/QTestUtil.java,939,"""diff"", ""-a"","
ql/src/test/org/apache/hadoop/hive/ql/QTestUtil.java,940,"(new File(logDir, tname + "".out"")).getPath(),"
ql/src/test/org/apache/hadoop/hive/ql/QTestUtil.java,941,outFileName
ql/src/test/org/apache/hadoop/hive/ql/QTestUtil.java,956,int exitVal = executor.waitFor();
ql/src/test/org/apache/hadoop/hive/ql/QTestUtil.java,958,if (exitVal != 0 && overWrite) {
ql/src/test/org/apache/hadoop/hive/ql/QTestUtil.java,959,"System.out.println(""Overwriting results"");"
ql/src/test/org/apache/hadoop/hive/ql/QTestUtil.java,960,cmdArray = new String[3];
ql/src/test/org/apache/hadoop/hive/ql/QTestUtil.java,961,"cmdArray[0] = ""cp"";"
ql/src/test/org/apache/hadoop/hive/ql/QTestUtil.java,962,"cmdArray[1] = (new File(logDir, tname + "".out"")).getPath();"
ql/src/test/org/apache/hadoop/hive/ql/QTestUtil.java,963,cmdArray[2] = outFileName;
ql/src/test/org/apache/hadoop/hive/ql/QTestUtil.java,964,executor = Runtime.getRuntime().exec(cmdArray);
ql/src/test/org/apache/hadoop/hive/ql/QTestUtil.java,965,exitVal = executor.waitFor();
ql/src/test/org/apache/hadoop/hive/ql/QTestUtil.java,968,return exitVal;
ql/src/test/org/apache/hadoop/hive/ql/QTestUtil.java,74,import org.apache.hadoop.hive.serde.Constants;
ql/src/test/org/apache/hadoop/hive/ql/QTestUtil.java,490,"srcThrift.setSerdeParam(Constants.SERIALIZATION_CLASS, Complex.class"
ql/src/test/org/apache/hadoop/hive/ql/QTestUtil.java,492,"srcThrift.setSerdeParam(Constants.SERIALIZATION_FORMAT,"
shims/src/common/java/org/apache/hadoop/fs/ProxyFileSystem.java,48,"return new Path (realScheme, realAuthority, p.toUri().getPath());"
shims/src/common/java/org/apache/hadoop/fs/ProxyFileSystem.java,52,"return new Path (myScheme, myAuthority, p.toUri().getPath());"
shims/src/common/java/org/apache/hadoop/fs/ProxyFileSystem.java,122,protected void checkPath(Path path) {
shims/src/common/java/org/apache/hadoop/fs/ProxyLocalFileSystem.java,21,import java.io.*;
shims/src/common/java/org/apache/hadoop/fs/ProxyLocalFileSystem.java,26,import org.apache.hadoop.fs.permission.FsPermission;
shims/src/common/java/org/apache/hadoop/fs/ProxyLocalFileSystem.java,27,import org.apache.hadoop.util.Progressable;
shims/src/common/java/org/apache/hadoop/fs/ProxyLocalFileSystem.java,56,"String proxyUriString = name + ""://"" + authority + ""/"";"
ql/src/java/org/apache/hadoop/hive/ql/parse/DDLSemanticAnalyzer.java,861,try {
ql/src/java/org/apache/hadoop/hive/ql/parse/DDLSemanticAnalyzer.java,938,"Table tab = db.getTable(db.getCurrentDatabase(), tableName, false);"
ql/src/java/org/apache/hadoop/hive/ql/parse/DDLSemanticAnalyzer.java,939,if (tab != null) {
ql/src/java/org/apache/hadoop/hive/ql/parse/DDLSemanticAnalyzer.java,940,inputs.add(new ReadEntity(tab));
ql/src/java/org/apache/hadoop/hive/ql/parse/DDLSemanticAnalyzer.java,941,outputs.add(new WriteEntity(tab));
ql/src/java/org/apache/hadoop/hive/ql/parse/DDLSemanticAnalyzer.java,943,} catch (HiveException e) {
ql/src/java/org/apache/hadoop/hive/ql/parse/DDLSemanticAnalyzer.java,944,throw new SemanticException(ErrorMsg.INVALID_TABLE.getMsg(tableName));
ql/src/java/org/apache/hadoop/hive/ql/parse/DDLSemanticAnalyzer.java,962,"addInputsOutputsAlterTable(tableName, partSpec);"
ql/src/java/org/apache/hadoop/hive/ql/parse/DDLSemanticAnalyzer.java,982,"addInputsOutputsAlterTable(tableName, partSpec);"
ql/src/java/org/apache/hadoop/hive/ql/parse/DDLSemanticAnalyzer.java,1040,"addInputsOutputsAlterTable(tableName, partSpec);"
ql/src/java/org/apache/hadoop/hive/ql/parse/DDLSemanticAnalyzer.java,1046,throws SemanticException {
ql/src/java/org/apache/hadoop/hive/ql/parse/DDLSemanticAnalyzer.java,1048,"Table tab = db.getTable(db.getCurrentDatabase(), tableName, false);"
ql/src/java/org/apache/hadoop/hive/ql/parse/DDLSemanticAnalyzer.java,1049,if (tab != null) {
ql/src/java/org/apache/hadoop/hive/ql/parse/DDLSemanticAnalyzer.java,1050,inputs.add(new ReadEntity(tab));
ql/src/java/org/apache/hadoop/hive/ql/parse/DDLSemanticAnalyzer.java,1052,if ((partSpec == null) || (partSpec.isEmpty())) {
ql/src/java/org/apache/hadoop/hive/ql/parse/DDLSemanticAnalyzer.java,1053,outputs.add(new WriteEntity(tab));
ql/src/java/org/apache/hadoop/hive/ql/parse/DDLSemanticAnalyzer.java,1055,else {
ql/src/java/org/apache/hadoop/hive/ql/parse/DDLSemanticAnalyzer.java,1056,"Partition part = db.getPartition(tab, partSpec, false);"
ql/src/java/org/apache/hadoop/hive/ql/parse/DDLSemanticAnalyzer.java,1057,if (part != null) {
ql/src/java/org/apache/hadoop/hive/ql/parse/DDLSemanticAnalyzer.java,1058,outputs.add(new WriteEntity(part));
ql/src/java/org/apache/hadoop/hive/ql/parse/DDLSemanticAnalyzer.java,1074,"addInputsOutputsAlterTable(tableName, partSpec);"
ql/src/java/org/apache/hadoop/hive/ql/parse/DDLSemanticAnalyzer.java,1124,"addInputsOutputsAlterTable(tableName, partSpec);"
ql/src/java/org/apache/hadoop/hive/ql/parse/DDLSemanticAnalyzer.java,1705,try {
ql/src/java/org/apache/hadoop/hive/ql/parse/DDLSemanticAnalyzer.java,1706,"Table tab = db.getTable(db.getCurrentDatabase(), tblName, false);"
ql/src/java/org/apache/hadoop/hive/ql/parse/DDLSemanticAnalyzer.java,1707,if (tab != null) {
ql/src/java/org/apache/hadoop/hive/ql/parse/DDLSemanticAnalyzer.java,1708,inputs.add(new ReadEntity(tab));
ql/src/java/org/apache/hadoop/hive/ql/parse/DDLSemanticAnalyzer.java,1709,outputs.add(new WriteEntity(tab));
ql/src/java/org/apache/hadoop/hive/ql/parse/DDLSemanticAnalyzer.java,1711,} catch (HiveException e) {
ql/src/java/org/apache/hadoop/hive/ql/parse/DDLSemanticAnalyzer.java,1712,throw new SemanticException(ErrorMsg.INVALID_TABLE.getMsg(tblName));
ql/src/java/org/apache/hadoop/hive/ql/parse/DDLSemanticAnalyzer.java,1753,"Table tab = db.getTable(db.getCurrentDatabase(), tblName, false);"
ql/src/java/org/apache/hadoop/hive/ql/parse/DDLSemanticAnalyzer.java,1775,try {
ql/src/java/org/apache/hadoop/hive/ql/parse/DDLSemanticAnalyzer.java,1776,"Table tab = db.getTable(db.getCurrentDatabase(), tblName, false);"
ql/src/java/org/apache/hadoop/hive/ql/parse/DDLSemanticAnalyzer.java,1777,if (tab != null) {
ql/src/java/org/apache/hadoop/hive/ql/parse/DDLSemanticAnalyzer.java,1778,inputs.add(new ReadEntity(tab));
ql/src/java/org/apache/hadoop/hive/ql/parse/DDLSemanticAnalyzer.java,1756,outputs.add(new WriteEntity(tab));
ql/src/java/org/apache/hadoop/hive/ql/parse/DDLSemanticAnalyzer.java,1780,} catch (HiveException e) {
ql/src/java/org/apache/hadoop/hive/ql/parse/DDLSemanticAnalyzer.java,1781,throw new SemanticException(ErrorMsg.INVALID_TABLE.getMsg(tblName));
ql/src/java/org/apache/hadoop/hive/ql/parse/DDLSemanticAnalyzer.java,1815,Table tab;
ql/src/java/org/apache/hadoop/hive/ql/parse/DDLSemanticAnalyzer.java,115,import org.apache.hadoop.hive.serde.Constants;
ql/src/java/org/apache/hadoop/hive/ql/parse/DDLSemanticAnalyzer.java,130,"TokenToTypeName.put(HiveParser.TOK_BOOLEAN, Constants.BOOLEAN_TYPE_NAME);"
ql/src/java/org/apache/hadoop/hive/ql/parse/DDLSemanticAnalyzer.java,131,"TokenToTypeName.put(HiveParser.TOK_TINYINT, Constants.TINYINT_TYPE_NAME);"
ql/src/java/org/apache/hadoop/hive/ql/parse/DDLSemanticAnalyzer.java,132,"TokenToTypeName.put(HiveParser.TOK_SMALLINT, Constants.SMALLINT_TYPE_NAME);"
ql/src/java/org/apache/hadoop/hive/ql/parse/DDLSemanticAnalyzer.java,133,"TokenToTypeName.put(HiveParser.TOK_INT, Constants.INT_TYPE_NAME);"
ql/src/java/org/apache/hadoop/hive/ql/parse/DDLSemanticAnalyzer.java,134,"TokenToTypeName.put(HiveParser.TOK_BIGINT, Constants.BIGINT_TYPE_NAME);"
ql/src/java/org/apache/hadoop/hive/ql/parse/DDLSemanticAnalyzer.java,135,"TokenToTypeName.put(HiveParser.TOK_FLOAT, Constants.FLOAT_TYPE_NAME);"
ql/src/java/org/apache/hadoop/hive/ql/parse/DDLSemanticAnalyzer.java,136,"TokenToTypeName.put(HiveParser.TOK_DOUBLE, Constants.DOUBLE_TYPE_NAME);"
ql/src/java/org/apache/hadoop/hive/ql/parse/DDLSemanticAnalyzer.java,137,"TokenToTypeName.put(HiveParser.TOK_STRING, Constants.STRING_TYPE_NAME);"
ql/src/java/org/apache/hadoop/hive/ql/parse/DDLSemanticAnalyzer.java,138,"TokenToTypeName.put(HiveParser.TOK_BINARY, Constants.BINARY_TYPE_NAME);"
ql/src/java/org/apache/hadoop/hive/ql/parse/DDLSemanticAnalyzer.java,139,"TokenToTypeName.put(HiveParser.TOK_DATE, Constants.DATE_TYPE_NAME);"
ql/src/java/org/apache/hadoop/hive/ql/parse/DDLSemanticAnalyzer.java,140,"TokenToTypeName.put(HiveParser.TOK_DATETIME, Constants.DATETIME_TYPE_NAME);"
ql/src/java/org/apache/hadoop/hive/ql/parse/DDLSemanticAnalyzer.java,141,"TokenToTypeName.put(HiveParser.TOK_TIMESTAMP, Constants.TIMESTAMP_TYPE_NAME);"
ql/src/java/org/apache/hadoop/hive/ql/parse/DDLSemanticAnalyzer.java,1320,"prop.setProperty(Constants.SERIALIZATION_FORMAT, ""9"");"
ql/src/java/org/apache/hadoop/hive/ql/parse/DDLSemanticAnalyzer.java,1321,"prop.setProperty(Constants.SERIALIZATION_NULL_FORMAT, "" "");"
ql/src/java/org/apache/hadoop/hive/ql/parse/DDLSemanticAnalyzer.java,804,if (throwException) {
ql/src/java/org/apache/hadoop/hive/ql/parse/DDLSemanticAnalyzer.java,805,try {
ql/src/java/org/apache/hadoop/hive/ql/parse/DDLSemanticAnalyzer.java,806,"Index idx = db.getIndex(tableName, indexName);"
ql/src/java/org/apache/hadoop/hive/ql/parse/DDLSemanticAnalyzer.java,807,} catch (HiveException e) {
ql/src/java/org/apache/hadoop/hive/ql/parse/DDLSemanticAnalyzer.java,812,"DropIndexDesc dropIdxDesc = new DropIndexDesc(indexName, tableName);"
ql/src/java/org/apache/hadoop/hive/ql/parse/DDLSemanticAnalyzer.java,367,"throw new SemanticException(""Unsupported command."");"
ql/src/java/org/apache/hadoop/hive/ql/exec/ArchiveUtils.java,146,harHost = archive.getScheme();
ql/src/java/org/apache/hadoop/hive/ql/exec/ArchiveUtils.java,185,public URI getHarUri(URI original) throws HiveException {
ql/src/java/org/apache/hadoop/hive/ql/exec/ArchiveUtils.java,186,URI relative = null;
ql/src/java/org/apache/hadoop/hive/ql/exec/ArchiveUtils.java,187,if (!parentSettable) {
ql/src/java/org/apache/hadoop/hive/ql/exec/ArchiveUtils.java,188,String dirInArchive = original.getPath();
ql/src/java/org/apache/hadoop/hive/ql/exec/ArchiveUtils.java,189,if(dirInArchive.length() > 1 && dirInArchive.charAt(0)=='/') {
ql/src/java/org/apache/hadoop/hive/ql/exec/ArchiveUtils.java,190,dirInArchive = dirInArchive.substring(1);
ql/src/java/org/apache/hadoop/hive/ql/exec/ArchiveUtils.java,192,try {
ql/src/java/org/apache/hadoop/hive/ql/exec/ArchiveUtils.java,193,"relative = new URI(null, null, dirInArchive, null);"
ql/src/java/org/apache/hadoop/hive/ql/exec/ArchiveUtils.java,194,} catch (URISyntaxException e) {
ql/src/java/org/apache/hadoop/hive/ql/exec/ArchiveUtils.java,195,"throw new HiveException(""Couldn't create har URI for location"");"
ql/src/java/org/apache/hadoop/hive/ql/exec/ArchiveUtils.java,196,} // relative URI with path only
ql/src/java/org/apache/hadoop/hive/ql/exec/ArchiveUtils.java,198,else {
ql/src/java/org/apache/hadoop/hive/ql/exec/ArchiveUtils.java,199,relative = originalBase.relativize(original);
ql/src/java/org/apache/hadoop/hive/ql/exec/ArchiveUtils.java,200,if(relative.isAbsolute()) {
ql/src/java/org/apache/hadoop/hive/ql/exec/ArchiveUtils.java,201,"throw new HiveException(""Unable to relativize URI"");"
ql/src/java/org/apache/hadoop/hive/ql/exec/ArchiveUtils.java,204,return base.resolve(relative);
ql/src/java/org/apache/hadoop/hive/ql/exec/ArchiveUtils.java,237,org.apache.hadoop.hive.metastore.api.Constants.IS_ARCHIVED))) {
ql/src/java/org/apache/hadoop/hive/ql/exec/DDLTask.java,1406,URI harPartitionDir = harHelper.getHarUri(originalPartitionUri);
ql/src/java/org/apache/hadoop/hive/ql/exec/DDLTask.java,1509,URI sourceUri = harHelper.getHarUri(originalUri);
ql/src/java/org/apache/hadoop/hive/ql/exec/DDLTask.java,143,import org.apache.hadoop.hive.serde.Constants;
ql/src/java/org/apache/hadoop/hive/ql/exec/DDLTask.java,1095,"params.put(org.apache.hadoop.hive.metastore.api.Constants.IS_ARCHIVED,"
ql/src/java/org/apache/hadoop/hive/ql/exec/DDLTask.java,1100,params.remove(org.apache.hadoop.hive.metastore.api.Constants.IS_ARCHIVED);
ql/src/java/org/apache/hadoop/hive/ql/exec/DDLTask.java,1111,org.apache.hadoop.hive.metastore.api.Constants.ORIGINAL_LOCATION);
ql/src/java/org/apache/hadoop/hive/ql/exec/DDLTask.java,1120,params.remove(org.apache.hadoop.hive.metastore.api.Constants.ORIGINAL_LOCATION);
ql/src/java/org/apache/hadoop/hive/ql/exec/DDLTask.java,1122,"params.put(org.apache.hadoop.hive.metastore.api.Constants.ORIGINAL_LOCATION, loc);"
ql/src/java/org/apache/hadoop/hive/ql/exec/DDLTask.java,2059,sortedFuncs.removeAll(Constants.PrimitiveTypes);
ql/src/java/org/apache/hadoop/hive/ql/exec/DDLTask.java,3183,"org.apache.hadoop.hive.metastore.api.Constants.META_TABLE_STORAGE,"
ql/src/java/org/apache/hadoop/hive/ql/exec/DDLTask.java,3211,"tbl.setSerdeParam(Constants.FIELD_DELIM, crtTbl.getFieldDelim());"
ql/src/java/org/apache/hadoop/hive/ql/exec/DDLTask.java,3212,"tbl.setSerdeParam(Constants.SERIALIZATION_FORMAT, crtTbl.getFieldDelim());"
ql/src/java/org/apache/hadoop/hive/ql/exec/DDLTask.java,3215,"tbl.setSerdeParam(Constants.ESCAPE_CHAR, crtTbl.getFieldEscape());"
ql/src/java/org/apache/hadoop/hive/ql/exec/DDLTask.java,3219,"tbl.setSerdeParam(Constants.COLLECTION_DELIM, crtTbl.getCollItemDelim());"
ql/src/java/org/apache/hadoop/hive/ql/exec/DDLTask.java,3222,"tbl.setSerdeParam(Constants.MAPKEY_DELIM, crtTbl.getMapKeyDelim());"
ql/src/java/org/apache/hadoop/hive/ql/exec/DDLTask.java,3225,"tbl.setSerdeParam(Constants.LINE_DELIM, crtTbl.getLineDelim());"
ql/src/java/org/apache/hadoop/hive/ql/exec/DDLTask.java,2112,"locks = lockMgr.getLocks(getHiveObject(showLocks.getTableName(),"
ql/src/java/org/apache/hadoop/hive/ql/exec/DDLTask.java,2113,"showLocks.getPartSpec()),"
ql/src/java/org/apache/hadoop/hive/ql/exec/DDLTask.java,1845,DataOutputStream outStream = null;
ql/src/java/org/apache/hadoop/hive/ql/exec/DDLTask.java,2005,DataOutputStream outStream = null;
ql/src/java/org/apache/hadoop/hive/ql/exec/DDLTask.java,1951,DataOutputStream outStream = null;
ql/src/java/org/apache/hadoop/hive/ql/exec/DDLTask.java,2427,DataOutputStream outStream = null;
ql/src/java/org/apache/hadoop/hive/ql/exec/DDLTask.java,2472,DataOutputStream outStream = null;
ql/src/java/org/apache/hadoop/hive/ql/exec/DDLTask.java,2345,DataOutputStream outStream = null;
ql/src/java/org/apache/hadoop/hive/ql/exec/DDLTask.java,2886,tbl.checkValidity();
ql/src/java/org/apache/hadoop/hive/ql/exec/DDLTask.java,3445,oldview.checkValidity();
ql/src/java/org/apache/hadoop/hive/ql/exec/DDLTask.java,3077,private void validateSerDe(String serdeName) throws HiveException {
shims/src/0.20/java/org/apache/hadoop/hive/shims/Hadoop20Shims.java,436,"if (conf.get(""hive.archive.har.parentdir.settable"") == null) {"
shims/src/0.20/java/org/apache/hadoop/hive/shims/Hadoop20Shims.java,437,"throw new RuntimeException(""hive.archive.har.parentdir.settable is not set"");"
shims/src/0.20/java/org/apache/hadoop/hive/shims/Hadoop20Shims.java,439,boolean parentSettable =
shims/src/0.20/java/org/apache/hadoop/hive/shims/Hadoop20Shims.java,440,"conf.getBoolean(""hive.archive.har.parentdir.settable"", false);"
shims/src/0.20/java/org/apache/hadoop/hive/shims/Hadoop20Shims.java,442,if (parentSettable) {
shims/src/0.20/java/org/apache/hadoop/hive/shims/Hadoop20Shims.java,443,"args.add(""-archiveName"");"
shims/src/0.20/java/org/apache/hadoop/hive/shims/Hadoop20Shims.java,444,args.add(archiveName);
shims/src/0.20/java/org/apache/hadoop/hive/shims/Hadoop20Shims.java,445,"args.add(""-p"");"
shims/src/0.20/java/org/apache/hadoop/hive/shims/Hadoop20Shims.java,446,args.add(sourceDir.toString());
shims/src/0.20/java/org/apache/hadoop/hive/shims/Hadoop20Shims.java,447,args.add(destDir.toString());
shims/src/0.20/java/org/apache/hadoop/hive/shims/Hadoop20Shims.java,448,} else {
shims/src/0.20/java/org/apache/hadoop/hive/shims/Hadoop20Shims.java,449,"args.add(""-archiveName"");"
shims/src/0.20/java/org/apache/hadoop/hive/shims/Hadoop20Shims.java,450,args.add(archiveName);
shims/src/0.20/java/org/apache/hadoop/hive/shims/Hadoop20Shims.java,451,args.add(sourceDir.toString());
shims/src/0.20/java/org/apache/hadoop/hive/shims/Hadoop20Shims.java,452,args.add(destDir.toString());
shims/src/common-secure/java/org/apache/hadoop/hive/shims/HadoopShimsSecure.java,435,"if (conf.get(""hive.archive.har.parentdir.settable"") == null) {"
shims/src/common-secure/java/org/apache/hadoop/hive/shims/HadoopShimsSecure.java,436,"throw new RuntimeException(""hive.archive.har.parentdir.settable is not set"");"
shims/src/common-secure/java/org/apache/hadoop/hive/shims/HadoopShimsSecure.java,438,boolean parentSettable =
shims/src/common-secure/java/org/apache/hadoop/hive/shims/HadoopShimsSecure.java,439,"conf.getBoolean(""hive.archive.har.parentdir.settable"", false);"
shims/src/common-secure/java/org/apache/hadoop/hive/shims/HadoopShimsSecure.java,441,if (parentSettable) {
shims/src/common-secure/java/org/apache/hadoop/hive/shims/HadoopShimsSecure.java,442,"args.add(""-archiveName"");"
shims/src/common-secure/java/org/apache/hadoop/hive/shims/HadoopShimsSecure.java,443,args.add(archiveName);
shims/src/common-secure/java/org/apache/hadoop/hive/shims/HadoopShimsSecure.java,444,"args.add(""-p"");"
shims/src/common-secure/java/org/apache/hadoop/hive/shims/HadoopShimsSecure.java,445,args.add(sourceDir.toString());
shims/src/common-secure/java/org/apache/hadoop/hive/shims/HadoopShimsSecure.java,446,args.add(destDir.toString());
shims/src/common-secure/java/org/apache/hadoop/hive/shims/HadoopShimsSecure.java,447,} else {
shims/src/common-secure/java/org/apache/hadoop/hive/shims/HadoopShimsSecure.java,448,"args.add(""-archiveName"");"
shims/src/common-secure/java/org/apache/hadoop/hive/shims/HadoopShimsSecure.java,449,args.add(archiveName);
shims/src/common-secure/java/org/apache/hadoop/hive/shims/HadoopShimsSecure.java,450,args.add(sourceDir.toString());
shims/src/common-secure/java/org/apache/hadoop/hive/shims/HadoopShimsSecure.java,451,args.add(destDir.toString());
shims/src/common-secure/java/org/apache/hadoop/hive/thrift/HadoopThriftAuthBridge20S.java,514,UserGroupInformation clientUgi = UserGroupInformation.createProxyUser(
jdbc/src/java/org/apache/hadoop/hive/jdbc/HiveBaseResultSet.java,470,"throw new SQLException(""Method not supported"");"
jdbc/src/java/org/apache/hadoop/hive/jdbc/HiveBaseResultSet.java,474,"throw new SQLException(""Method not supported"");"
jdbc/src/java/org/apache/hadoop/hive/jdbc/HivePreparedStatement.java,764,"throw new SQLException(""Method not supported"");"
jdbc/src/test/org/apache/hadoop/hive/jdbc/TestJdbcDriver.java,150,#VALUE!
jdbc/src/test/org/apache/hadoop/hive/jdbc/TestJdbcDriver.java,797,"""c1*2, sentences(null, null, null) as b from "" + dataTypeTableName + "" limit 1"");"
jdbc/src/test/org/apache/hadoop/hive/jdbc/TestJdbcDriver.java,803,"assertEquals(14, meta.getColumnCount());"
ql/src/java/org/apache/hadoop/hive/ql/io/CombineHiveInputFormat.java,369,f = new CombineFilter(filterPath);
ql/src/java/org/apache/hadoop/hive/ql/io/CombineHiveInputFormat.java,396,"combine.createPool(job, new CombineFilter(filterPath));"
ql/src/java/org/apache/hadoop/hive/ql/io/CombineHiveInputFormat.java,547,private final Set<String> pStrings = new HashSet<String>();
ql/src/java/org/apache/hadoop/hive/ql/io/CombineHiveInputFormat.java,551,public CombineFilter(Path p) {
ql/src/java/org/apache/hadoop/hive/ql/io/CombineHiveInputFormat.java,560,pStrings.add(pString);
ql/src/java/org/apache/hadoop/hive/ql/io/CombineHiveInputFormat.java,581,for (String pString : pStrings) {
ql/src/java/org/apache/hadoop/hive/ql/io/CombineHiveInputFormat.java,582,"s.append(pString + "" "");"
ql/src/java/org/apache/hadoop/hive/ql/io/CombineHiveInputFormat.java,559,String pString = p.toUri().getPath().toString();
ql/src/java/org/apache/hadoop/hive/ql/io/CombineHiveInputFormat.java,568,if(pStrings.contains(path.toString())) {
ql/src/java/org/apache/hadoop/hive/ql/lockmgr/zookeeper/ZooKeeperHiveLockManager.java,220,"lock = lock(lockObject.getObj(), lockObject.getMode(), false, true);"
metastore/src/java/org/apache/hadoop/hive/metastore/HiveMetaStoreClient.java,536,NoSuchObjectException {
contrib/src/java/org/apache/hadoop/hive/contrib/genericudf/example/GenericUDFDBOutput.java,33,import org.apache.hadoop.hive.serde.Constants;
contrib/src/java/org/apache/hadoop/hive/contrib/genericudf/example/GenericUDFDBOutput.java,97,"+ Constants.STRING_TYPE_NAME + ""\"", but \"""""
contrib/src/java/org/apache/hadoop/hive/contrib/serde2/RegexSerDe.java,31,import org.apache.hadoop.hive.serde.Constants;
contrib/src/java/org/apache/hadoop/hive/contrib/serde2/RegexSerDe.java,95,String columnNameProperty = tbl.getProperty(Constants.LIST_COLUMNS);
contrib/src/java/org/apache/hadoop/hive/contrib/serde2/RegexSerDe.java,96,String columnTypeProperty = tbl.getProperty(Constants.LIST_COLUMN_TYPES);
contrib/src/java/org/apache/hadoop/hive/contrib/serde2/TypedBytesSerDe.java,34,import org.apache.hadoop.hive.serde.Constants;
contrib/src/java/org/apache/hadoop/hive/contrib/serde2/TypedBytesSerDe.java,108,String columnNameProperty = tbl.getProperty(Constants.LIST_COLUMNS);
contrib/src/java/org/apache/hadoop/hive/contrib/serde2/TypedBytesSerDe.java,109,String columnTypeProperty = tbl.getProperty(Constants.LIST_COLUMN_TYPES);
contrib/src/java/org/apache/hadoop/hive/contrib/util/typedbytes/TypedBytesRecordReader.java,34,import org.apache.hadoop.hive.serde.Constants;
contrib/src/java/org/apache/hadoop/hive/contrib/util/typedbytes/TypedBytesRecordReader.java,74,"typedBytesToTypeName.put(getType(1), Constants.TINYINT_TYPE_NAME);"
contrib/src/java/org/apache/hadoop/hive/contrib/util/typedbytes/TypedBytesRecordReader.java,75,"typedBytesToTypeName.put(getType(2), Constants.BOOLEAN_TYPE_NAME);"
contrib/src/java/org/apache/hadoop/hive/contrib/util/typedbytes/TypedBytesRecordReader.java,76,"typedBytesToTypeName.put(getType(3), Constants.INT_TYPE_NAME);"
contrib/src/java/org/apache/hadoop/hive/contrib/util/typedbytes/TypedBytesRecordReader.java,77,"typedBytesToTypeName.put(getType(4), Constants.BIGINT_TYPE_NAME);"
contrib/src/java/org/apache/hadoop/hive/contrib/util/typedbytes/TypedBytesRecordReader.java,78,"typedBytesToTypeName.put(getType(5), Constants.FLOAT_TYPE_NAME);"
contrib/src/java/org/apache/hadoop/hive/contrib/util/typedbytes/TypedBytesRecordReader.java,79,"typedBytesToTypeName.put(getType(6), Constants.DOUBLE_TYPE_NAME);"
contrib/src/java/org/apache/hadoop/hive/contrib/util/typedbytes/TypedBytesRecordReader.java,80,"typedBytesToTypeName.put(getType(7), Constants.STRING_TYPE_NAME);"
contrib/src/java/org/apache/hadoop/hive/contrib/util/typedbytes/TypedBytesRecordReader.java,81,"typedBytesToTypeName.put(getType(11), Constants.SMALLINT_TYPE_NAME);"
contrib/src/java/org/apache/hadoop/hive/contrib/util/typedbytes/TypedBytesRecordReader.java,88,String columnTypeProperty = tbl.getProperty(Constants.LIST_COLUMN_TYPES);
contrib/src/java/org/apache/hadoop/hive/contrib/util/typedbytes/TypedBytesRecordReader.java,208,if (typ.equalsIgnoreCase(Constants.BOOLEAN_TYPE_NAME)) {
contrib/src/java/org/apache/hadoop/hive/contrib/util/typedbytes/TypedBytesRecordReader.java,210,} else if (typ.equalsIgnoreCase(Constants.TINYINT_TYPE_NAME)) {
contrib/src/java/org/apache/hadoop/hive/contrib/util/typedbytes/TypedBytesRecordReader.java,212,} else if (typ.equalsIgnoreCase(Constants.SMALLINT_TYPE_NAME)) {
contrib/src/java/org/apache/hadoop/hive/contrib/util/typedbytes/TypedBytesRecordReader.java,214,} else if (typ.equalsIgnoreCase(Constants.INT_TYPE_NAME)) {
contrib/src/java/org/apache/hadoop/hive/contrib/util/typedbytes/TypedBytesRecordReader.java,216,} else if (typ.equalsIgnoreCase(Constants.BIGINT_TYPE_NAME)) {
contrib/src/java/org/apache/hadoop/hive/contrib/util/typedbytes/TypedBytesRecordReader.java,218,} else if (typ.equalsIgnoreCase(Constants.FLOAT_TYPE_NAME)) {
contrib/src/java/org/apache/hadoop/hive/contrib/util/typedbytes/TypedBytesRecordReader.java,220,} else if (typ.equalsIgnoreCase(Constants.DOUBLE_TYPE_NAME)) {
contrib/src/java/org/apache/hadoop/hive/contrib/util/typedbytes/TypedBytesRecordReader.java,222,} else if (typ.equalsIgnoreCase(Constants.STRING_TYPE_NAME)) {
contrib/src/test/org/apache/hadoop/hive/contrib/serde2/TestRegexSerDe.java,25,import org.apache.hadoop.hive.serde.Constants;
contrib/src/test/org/apache/hadoop/hive/contrib/serde2/TestRegexSerDe.java,41,"schema.setProperty(Constants.LIST_COLUMNS, fieldNames);"
contrib/src/test/org/apache/hadoop/hive/contrib/serde2/TestRegexSerDe.java,42,"schema.setProperty(Constants.LIST_COLUMN_TYPES, fieldTypes);"
hbase-handler/src/java/org/apache/hadoop/hive/hbase/HBaseSerDe.java,33,import org.apache.hadoop.hive.serde.Constants;
hbase-handler/src/java/org/apache/hadoop/hive/hbase/HBaseSerDe.java,274,if (!colType.getTypeName().equals(Constants.STRING_TYPE_NAME)) {
hbase-handler/src/java/org/apache/hadoop/hive/hbase/HBaseSerDe.java,284,!keyTypeInfo.getTypeName().equals(Constants.STRING_TYPE_NAME)) {
hbase-handler/src/java/org/apache/hadoop/hive/hbase/HBaseSerDe.java,291,!valueTypeInfo.getTypeName().equals(Constants.STRING_TYPE_NAME)) {
hbase-handler/src/java/org/apache/hadoop/hive/hbase/HBaseSerDe.java,314,!colType.getTypeName().equals(Constants.STRING_TYPE_NAME)) {
hbase-handler/src/java/org/apache/hadoop/hive/hbase/HBaseSerDe.java,352,!keyTypeInfo.getTypeName().equals(Constants.STRING_TYPE_NAME)) {
hbase-handler/src/java/org/apache/hadoop/hive/hbase/HBaseSerDe.java,366,!valueTypeInfo.getTypeName().equals(Constants.STRING_TYPE_NAME)) {
hbase-handler/src/java/org/apache/hadoop/hive/hbase/HBaseSerDe.java,419,String columnTypeProperty = tbl.getProperty(Constants.LIST_COLUMN_TYPES);
hbase-handler/src/java/org/apache/hadoop/hive/hbase/HBaseSerDe.java,438,sb.append(Constants.STRING_TYPE_NAME);
hbase-handler/src/java/org/apache/hadoop/hive/hbase/HBaseSerDe.java,441,"sb.append(Constants.MAP_TYPE_NAME + ""<"" + Constants.STRING_TYPE_NAME + "","""
hbase-handler/src/java/org/apache/hadoop/hive/hbase/HBaseSerDe.java,442,"+ Constants.STRING_TYPE_NAME + "">"");"
hbase-handler/src/java/org/apache/hadoop/hive/hbase/HBaseSerDe.java,445,sb.append(Constants.STRING_TYPE_NAME);
hbase-handler/src/java/org/apache/hadoop/hive/hbase/HBaseSerDe.java,448,"tbl.setProperty(Constants.LIST_COLUMN_TYPES, sb.toString());"
hbase-handler/src/java/org/apache/hadoop/hive/hbase/HBaseSerDe.java,162,String mappingSpec = columnSpecs[i];
hbase-handler/src/java/org/apache/hadoop/hive/hbase/HBaseStorageHandler.java,41,import org.apache.hadoop.hive.metastore.api.Constants;
hbase-handler/src/java/org/apache/hadoop/hive/hbase/HBaseStorageHandler.java,287,tableProperties.getProperty(Constants.META_TABLE_NAME);
hbase-handler/src/java/org/apache/hadoop/hive/hbase/HBaseStorageHandler.java,302,org.apache.hadoop.hive.serde.Constants.LIST_COLUMNS);
hbase-handler/src/java/org/apache/hadoop/hive/hbase/HBaseStorageHandler.java,308,String keyColType = jobConf.get(org.apache.hadoop.hive.serde.Constants.LIST_COLUMN_TYPES).
hbase-handler/src/java/org/apache/hadoop/hive/hbase/HiveHBaseTableInputFormat.java,47,import org.apache.hadoop.hive.serde.Constants;
hbase-handler/src/java/org/apache/hadoop/hive/hbase/HiveHBaseTableInputFormat.java,260,"String colName = jobConf.get(Constants.LIST_COLUMNS).split("","")[iKey];"
hbase-handler/src/java/org/apache/hadoop/hive/hbase/HiveHBaseTableInputFormat.java,261,"String colType = jobConf.get(Constants.LIST_COLUMN_TYPES).split("","")[iKey];"
hbase-handler/src/test/org/apache/hadoop/hive/hbase/TestHBaseSerDe.java,33,import org.apache.hadoop.hive.serde.Constants;
hbase-handler/src/test/org/apache/hadoop/hive/hbase/TestHBaseSerDe.java,237,"tbl.setProperty(Constants.SERIALIZATION_FORMAT, ""9"");"
hbase-handler/src/test/org/apache/hadoop/hive/hbase/TestHBaseSerDe.java,252,"tbl.setProperty(Constants.SERIALIZATION_FORMAT, ""9"");"
hbase-handler/src/test/org/apache/hadoop/hive/hbase/TestHBaseSerDe.java,267,"tbl.setProperty(Constants.SERIALIZATION_FORMAT, ""9"");"
hbase-handler/src/test/org/apache/hadoop/hive/hbase/TestHBaseSerDe.java,284,"tbl.setProperty(Constants.SERIALIZATION_FORMAT, ""9"");"
hbase-handler/src/test/org/apache/hadoop/hive/hbase/TestHBaseSerDe.java,378,"tbl.setProperty(Constants.SERIALIZATION_FORMAT, ""9"");"
hbase-handler/src/test/org/apache/hadoop/hive/hbase/TestHBaseSerDe.java,393,"tbl.setProperty(Constants.SERIALIZATION_FORMAT, ""9"");"
hbase-handler/src/test/org/apache/hadoop/hive/hbase/TestHBaseSerDe.java,408,"tbl.setProperty(Constants.SERIALIZATION_FORMAT, ""9"");"
hbase-handler/src/test/org/apache/hadoop/hive/hbase/TestHBaseSerDe.java,545,"tbl.setProperty(Constants.SERIALIZATION_FORMAT, ""9"");"
hbase-handler/src/test/org/apache/hadoop/hive/hbase/TestHBaseSerDe.java,546,"tbl.setProperty(Constants.LIST_COLUMNS,"
hbase-handler/src/test/org/apache/hadoop/hive/hbase/TestHBaseSerDe.java,548,"tbl.setProperty(Constants.LIST_COLUMN_TYPES,"
hbase-handler/src/test/org/apache/hadoop/hive/hbase/TestHBaseSerDe.java,559,"tbl.setProperty(Constants.SERIALIZATION_FORMAT, ""9"");"
hbase-handler/src/test/org/apache/hadoop/hive/hbase/TestHBaseSerDe.java,560,"tbl.setProperty(Constants.LIST_COLUMNS,"
hbase-handler/src/test/org/apache/hadoop/hive/hbase/TestHBaseSerDe.java,562,"tbl.setProperty(Constants.LIST_COLUMN_TYPES,"
hbase-handler/src/test/org/apache/hadoop/hive/hbase/TestHBaseSerDe.java,630,"tbl.setProperty(Constants.SERIALIZATION_FORMAT, ""9"");"
hbase-handler/src/test/org/apache/hadoop/hive/hbase/TestHBaseSerDe.java,631,"tbl.setProperty(Constants.LIST_COLUMNS,"
hbase-handler/src/test/org/apache/hadoop/hive/hbase/TestHBaseSerDe.java,633,"tbl.setProperty(Constants.LIST_COLUMN_TYPES,"
hbase-handler/src/test/org/apache/hadoop/hive/hbase/TestHBaseSerDe.java,644,"tbl.setProperty(Constants.SERIALIZATION_FORMAT, ""9"");"
hbase-handler/src/test/org/apache/hadoop/hive/hbase/TestHBaseSerDe.java,645,"tbl.setProperty(Constants.LIST_COLUMNS,"
hbase-handler/src/test/org/apache/hadoop/hive/hbase/TestHBaseSerDe.java,647,"tbl.setProperty(Constants.LIST_COLUMN_TYPES,"
jdbc/src/java/org/apache/hadoop/hive/jdbc/HiveQueryResultSet.java,33,import org.apache.hadoop.hive.serde.Constants;
jdbc/src/java/org/apache/hadoop/hive/jdbc/HiveQueryResultSet.java,105,"props.setProperty(Constants.LIST_COLUMNS, names);"
jdbc/src/java/org/apache/hadoop/hive/jdbc/HiveQueryResultSet.java,109,"props.setProperty(Constants.LIST_COLUMN_TYPES, types);"
jdbc/src/java/org/apache/hadoop/hive/jdbc/HiveResultSetMetaData.java,26,import org.apache.hadoop.hive.serde.Constants;
jdbc/src/java/org/apache/hadoop/hive/jdbc/HiveResultSetMetaData.java,99,return Constants.STRING_TYPE_NAME;
jdbc/src/java/org/apache/hadoop/hive/jdbc/HiveResultSetMetaData.java,101,return Constants.FLOAT_TYPE_NAME;
jdbc/src/java/org/apache/hadoop/hive/jdbc/HiveResultSetMetaData.java,103,return Constants.DOUBLE_TYPE_NAME;
jdbc/src/java/org/apache/hadoop/hive/jdbc/HiveResultSetMetaData.java,105,return Constants.BOOLEAN_TYPE_NAME;
jdbc/src/java/org/apache/hadoop/hive/jdbc/HiveResultSetMetaData.java,107,return Constants.TINYINT_TYPE_NAME;
jdbc/src/java/org/apache/hadoop/hive/jdbc/HiveResultSetMetaData.java,109,return Constants.SMALLINT_TYPE_NAME;
jdbc/src/java/org/apache/hadoop/hive/jdbc/HiveResultSetMetaData.java,111,return Constants.INT_TYPE_NAME;
jdbc/src/java/org/apache/hadoop/hive/jdbc/HiveResultSetMetaData.java,113,return Constants.BIGINT_TYPE_NAME;
jdbc/src/java/org/apache/hadoop/hive/jdbc/HiveResultSetMetaData.java,115,return Constants.STRING_TYPE_NAME;
jdbc/src/java/org/apache/hadoop/hive/jdbc/HiveResultSetMetaData.java,117,return Constants.STRING_TYPE_NAME;
jdbc/src/java/org/apache/hadoop/hive/jdbc/HiveResultSetMetaData.java,119,return Constants.STRING_TYPE_NAME;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/AlreadyExistsException.java,23,"public class AlreadyExistsException extends Exception implements org.apache.thrift.TBase<AlreadyExistsException, AlreadyExistsException._Fields>, java.io.Serializable, Cloneable {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/AlreadyExistsException.java,241,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/AlreadyExistsException.java,242,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/AlreadyExistsException.java,243,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/AlreadyExistsException.java,245,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/AlreadyExistsException.java,246,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/AlreadyExistsException.java,247,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/AlreadyExistsException.java,249,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/AlreadyExistsException.java,250,case 1: // MESSAGE
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/AlreadyExistsException.java,251,if (field.type == org.apache.thrift.protocol.TType.STRING) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/AlreadyExistsException.java,252,this.message = iprot.readString();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/AlreadyExistsException.java,253,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/AlreadyExistsException.java,254,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/AlreadyExistsException.java,256,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/AlreadyExistsException.java,257,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/AlreadyExistsException.java,258,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/AlreadyExistsException.java,260,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/AlreadyExistsException.java,262,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/AlreadyExistsException.java,263,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/AlreadyExistsException.java,267,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/AlreadyExistsException.java,269,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/AlreadyExistsException.java,270,if (this.message != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/AlreadyExistsException.java,271,oprot.writeFieldBegin(MESSAGE_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/AlreadyExistsException.java,272,oprot.writeString(this.message);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/AlreadyExistsException.java,273,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/AlreadyExistsException.java,275,oprot.writeFieldStop();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/AlreadyExistsException.java,276,oprot.writeStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ConfigValSecurityException.java,23,"public class ConfigValSecurityException extends Exception implements org.apache.thrift.TBase<ConfigValSecurityException, ConfigValSecurityException._Fields>, java.io.Serializable, Cloneable {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ConfigValSecurityException.java,241,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ConfigValSecurityException.java,242,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ConfigValSecurityException.java,243,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ConfigValSecurityException.java,245,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ConfigValSecurityException.java,246,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ConfigValSecurityException.java,247,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ConfigValSecurityException.java,249,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ConfigValSecurityException.java,250,case 1: // MESSAGE
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ConfigValSecurityException.java,251,if (field.type == org.apache.thrift.protocol.TType.STRING) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ConfigValSecurityException.java,252,this.message = iprot.readString();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ConfigValSecurityException.java,253,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ConfigValSecurityException.java,254,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ConfigValSecurityException.java,256,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ConfigValSecurityException.java,257,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ConfigValSecurityException.java,258,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ConfigValSecurityException.java,260,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ConfigValSecurityException.java,262,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ConfigValSecurityException.java,263,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ConfigValSecurityException.java,267,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ConfigValSecurityException.java,269,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ConfigValSecurityException.java,270,if (this.message != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ConfigValSecurityException.java,271,oprot.writeFieldBegin(MESSAGE_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ConfigValSecurityException.java,272,oprot.writeString(this.message);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ConfigValSecurityException.java,273,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ConfigValSecurityException.java,275,oprot.writeFieldStop();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ConfigValSecurityException.java,276,oprot.writeStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Database.java,36,private PrincipalPrivilegeSet privileges; // required
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Database.java,536,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Database.java,537,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Database.java,538,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Database.java,540,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Database.java,541,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Database.java,542,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Database.java,544,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Database.java,545,case 1: // NAME
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Database.java,546,if (field.type == org.apache.thrift.protocol.TType.STRING) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Database.java,547,this.name = iprot.readString();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Database.java,548,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Database.java,549,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Database.java,551,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Database.java,552,case 2: // DESCRIPTION
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Database.java,553,if (field.type == org.apache.thrift.protocol.TType.STRING) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Database.java,554,this.description = iprot.readString();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Database.java,555,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Database.java,556,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Database.java,558,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Database.java,559,case 3: // LOCATION_URI
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Database.java,560,if (field.type == org.apache.thrift.protocol.TType.STRING) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Database.java,561,this.locationUri = iprot.readString();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Database.java,562,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Database.java,563,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Database.java,565,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Database.java,566,case 4: // PARAMETERS
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Database.java,567,if (field.type == org.apache.thrift.protocol.TType.MAP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Database.java,569,org.apache.thrift.protocol.TMap _map39 = iprot.readMapBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Database.java,570,"this.parameters = new HashMap<String,String>(2*_map39.size);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Database.java,571,for (int _i40 = 0; _i40 < _map39.size; ++_i40)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Database.java,573,String _key41; // required
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Database.java,574,String _val42; // required
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Database.java,575,_key41 = iprot.readString();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Database.java,576,_val42 = iprot.readString();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Database.java,577,"this.parameters.put(_key41, _val42);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Database.java,579,iprot.readMapEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Database.java,581,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Database.java,582,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Database.java,584,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Database.java,585,case 5: // PRIVILEGES
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Database.java,586,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Database.java,587,this.privileges = new PrincipalPrivilegeSet();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Database.java,588,this.privileges.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Database.java,589,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Database.java,590,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Database.java,592,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Database.java,593,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Database.java,594,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Database.java,596,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Database.java,598,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Database.java,599,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Database.java,603,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Database.java,605,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Database.java,606,if (this.name != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Database.java,607,oprot.writeFieldBegin(NAME_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Database.java,608,oprot.writeString(this.name);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Database.java,609,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Database.java,611,if (this.description != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Database.java,612,oprot.writeFieldBegin(DESCRIPTION_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Database.java,613,oprot.writeString(this.description);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Database.java,614,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Database.java,616,if (this.locationUri != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Database.java,617,oprot.writeFieldBegin(LOCATION_URI_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Database.java,618,oprot.writeString(this.locationUri);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Database.java,619,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Database.java,621,if (this.parameters != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Database.java,622,oprot.writeFieldBegin(PARAMETERS_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Database.java,624,"oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRING, this.parameters.size()));"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Database.java,625,"for (Map.Entry<String, String> _iter43 : this.parameters.entrySet())"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Database.java,627,oprot.writeString(_iter43.getKey());
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Database.java,628,oprot.writeString(_iter43.getValue());
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Database.java,630,oprot.writeMapEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Database.java,632,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Database.java,634,if (this.privileges != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Database.java,635,if (isSetPrivileges()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Database.java,636,oprot.writeFieldBegin(PRIVILEGES_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Database.java,637,this.privileges.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Database.java,638,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Database.java,641,oprot.writeFieldStop();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Database.java,642,oprot.writeStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/FieldSchema.java,377,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/FieldSchema.java,378,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/FieldSchema.java,379,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/FieldSchema.java,381,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/FieldSchema.java,382,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/FieldSchema.java,383,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/FieldSchema.java,385,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/FieldSchema.java,386,case 1: // NAME
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/FieldSchema.java,387,if (field.type == org.apache.thrift.protocol.TType.STRING) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/FieldSchema.java,388,this.name = iprot.readString();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/FieldSchema.java,389,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/FieldSchema.java,390,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/FieldSchema.java,392,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/FieldSchema.java,393,case 2: // TYPE
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/FieldSchema.java,394,if (field.type == org.apache.thrift.protocol.TType.STRING) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/FieldSchema.java,395,this.type = iprot.readString();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/FieldSchema.java,396,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/FieldSchema.java,397,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/FieldSchema.java,399,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/FieldSchema.java,400,case 3: // COMMENT
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/FieldSchema.java,401,if (field.type == org.apache.thrift.protocol.TType.STRING) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/FieldSchema.java,402,this.comment = iprot.readString();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/FieldSchema.java,403,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/FieldSchema.java,404,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/FieldSchema.java,406,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/FieldSchema.java,407,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/FieldSchema.java,408,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/FieldSchema.java,410,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/FieldSchema.java,412,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/FieldSchema.java,413,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/FieldSchema.java,417,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/FieldSchema.java,419,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/FieldSchema.java,420,if (this.name != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/FieldSchema.java,421,oprot.writeFieldBegin(NAME_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/FieldSchema.java,422,oprot.writeString(this.name);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/FieldSchema.java,423,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/FieldSchema.java,425,if (this.type != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/FieldSchema.java,426,oprot.writeFieldBegin(TYPE_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/FieldSchema.java,427,oprot.writeString(this.type);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/FieldSchema.java,428,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/FieldSchema.java,430,if (this.comment != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/FieldSchema.java,431,oprot.writeFieldBegin(COMMENT_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/FieldSchema.java,432,oprot.writeString(this.comment);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/FieldSchema.java,433,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/FieldSchema.java,435,oprot.writeFieldStop();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/FieldSchema.java,436,oprot.writeStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectPrivilege.java,457,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectPrivilege.java,458,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectPrivilege.java,459,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectPrivilege.java,461,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectPrivilege.java,462,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectPrivilege.java,463,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectPrivilege.java,465,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectPrivilege.java,466,case 1: // HIVE_OBJECT
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectPrivilege.java,467,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectPrivilege.java,468,this.hiveObject = new HiveObjectRef();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectPrivilege.java,469,this.hiveObject.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectPrivilege.java,470,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectPrivilege.java,471,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectPrivilege.java,473,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectPrivilege.java,474,case 2: // PRINCIPAL_NAME
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectPrivilege.java,475,if (field.type == org.apache.thrift.protocol.TType.STRING) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectPrivilege.java,476,this.principalName = iprot.readString();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectPrivilege.java,477,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectPrivilege.java,478,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectPrivilege.java,480,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectPrivilege.java,481,case 3: // PRINCIPAL_TYPE
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectPrivilege.java,482,if (field.type == org.apache.thrift.protocol.TType.I32) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectPrivilege.java,483,this.principalType = PrincipalType.findByValue(iprot.readI32());
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectPrivilege.java,484,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectPrivilege.java,485,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectPrivilege.java,487,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectPrivilege.java,488,case 4: // GRANT_INFO
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectPrivilege.java,489,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectPrivilege.java,490,this.grantInfo = new PrivilegeGrantInfo();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectPrivilege.java,491,this.grantInfo.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectPrivilege.java,492,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectPrivilege.java,493,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectPrivilege.java,495,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectPrivilege.java,496,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectPrivilege.java,497,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectPrivilege.java,499,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectPrivilege.java,501,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectPrivilege.java,502,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectPrivilege.java,506,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectPrivilege.java,508,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectPrivilege.java,509,if (this.hiveObject != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectPrivilege.java,510,oprot.writeFieldBegin(HIVE_OBJECT_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectPrivilege.java,511,this.hiveObject.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectPrivilege.java,512,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectPrivilege.java,514,if (this.principalName != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectPrivilege.java,515,oprot.writeFieldBegin(PRINCIPAL_NAME_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectPrivilege.java,516,oprot.writeString(this.principalName);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectPrivilege.java,517,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectPrivilege.java,519,if (this.principalType != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectPrivilege.java,520,oprot.writeFieldBegin(PRINCIPAL_TYPE_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectPrivilege.java,521,oprot.writeI32(this.principalType.getValue());
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectPrivilege.java,522,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectPrivilege.java,524,if (this.grantInfo != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectPrivilege.java,525,oprot.writeFieldBegin(GRANT_INFO_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectPrivilege.java,526,this.grantInfo.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectPrivilege.java,527,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectPrivilege.java,529,oprot.writeFieldStop();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectPrivilege.java,530,oprot.writeStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectRef.java,545,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectRef.java,546,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectRef.java,547,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectRef.java,549,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectRef.java,550,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectRef.java,551,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectRef.java,553,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectRef.java,554,case 1: // OBJECT_TYPE
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectRef.java,555,if (field.type == org.apache.thrift.protocol.TType.I32) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectRef.java,556,this.objectType = HiveObjectType.findByValue(iprot.readI32());
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectRef.java,557,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectRef.java,558,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectRef.java,560,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectRef.java,561,case 2: // DB_NAME
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectRef.java,562,if (field.type == org.apache.thrift.protocol.TType.STRING) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectRef.java,563,this.dbName = iprot.readString();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectRef.java,564,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectRef.java,565,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectRef.java,567,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectRef.java,568,case 3: // OBJECT_NAME
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectRef.java,569,if (field.type == org.apache.thrift.protocol.TType.STRING) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectRef.java,570,this.objectName = iprot.readString();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectRef.java,571,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectRef.java,572,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectRef.java,574,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectRef.java,575,case 4: // PART_VALUES
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectRef.java,576,if (field.type == org.apache.thrift.protocol.TType.LIST) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectRef.java,578,org.apache.thrift.protocol.TList _list4 = iprot.readListBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectRef.java,579,this.partValues = new ArrayList<String>(_list4.size);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectRef.java,580,for (int _i5 = 0; _i5 < _list4.size; ++_i5)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectRef.java,582,String _elem6; // required
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectRef.java,583,_elem6 = iprot.readString();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectRef.java,584,this.partValues.add(_elem6);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectRef.java,586,iprot.readListEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectRef.java,588,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectRef.java,589,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectRef.java,591,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectRef.java,592,case 5: // COLUMN_NAME
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectRef.java,593,if (field.type == org.apache.thrift.protocol.TType.STRING) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectRef.java,594,this.columnName = iprot.readString();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectRef.java,595,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectRef.java,596,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectRef.java,598,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectRef.java,599,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectRef.java,600,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectRef.java,602,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectRef.java,604,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectRef.java,605,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectRef.java,609,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectRef.java,611,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectRef.java,612,if (this.objectType != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectRef.java,613,oprot.writeFieldBegin(OBJECT_TYPE_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectRef.java,614,oprot.writeI32(this.objectType.getValue());
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectRef.java,615,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectRef.java,617,if (this.dbName != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectRef.java,618,oprot.writeFieldBegin(DB_NAME_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectRef.java,619,oprot.writeString(this.dbName);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectRef.java,620,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectRef.java,622,if (this.objectName != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectRef.java,623,oprot.writeFieldBegin(OBJECT_NAME_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectRef.java,624,oprot.writeString(this.objectName);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectRef.java,625,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectRef.java,627,if (this.partValues != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectRef.java,628,oprot.writeFieldBegin(PART_VALUES_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectRef.java,630,"oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, this.partValues.size()));"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectRef.java,631,for (String _iter7 : this.partValues)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectRef.java,633,oprot.writeString(_iter7);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectRef.java,635,oprot.writeListEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectRef.java,637,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectRef.java,639,if (this.columnName != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectRef.java,640,oprot.writeFieldBegin(COLUMN_NAME_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectRef.java,641,oprot.writeString(this.columnName);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectRef.java,642,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectRef.java,644,oprot.writeFieldStop();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/HiveObjectRef.java,645,oprot.writeStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Index.java,137,private BitSet __isset_bit_vector = new BitSet(3);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Index.java,203,__isset_bit_vector.clear();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Index.java,204,__isset_bit_vector.or(other.__isset_bit_vector);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Index.java,366,__isset_bit_vector.clear(__CREATETIME_ISSET_ID);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Index.java,371,return __isset_bit_vector.get(__CREATETIME_ISSET_ID);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Index.java,375,"__isset_bit_vector.set(__CREATETIME_ISSET_ID, value);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Index.java,388,__isset_bit_vector.clear(__LASTACCESSTIME_ISSET_ID);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Index.java,393,return __isset_bit_vector.get(__LASTACCESSTIME_ISSET_ID);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Index.java,397,"__isset_bit_vector.set(__LASTACCESSTIME_ISSET_ID, value);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Index.java,490,__isset_bit_vector.clear(__DEFERREDREBUILD_ISSET_ID);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Index.java,495,return __isset_bit_vector.get(__DEFERREDREBUILD_ISSET_ID);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Index.java,499,"__isset_bit_vector.set(__DEFERREDREBUILD_ISSET_ID, value);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Index.java,1136,__isset_bit_vector = new BitSet(1);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Index.java,602,return Integer.valueOf(getCreateTime());
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Index.java,605,return Integer.valueOf(getLastAccessTime());
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Index.java,617,return Boolean.valueOf(isDeferredRebuild());
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/IndexAlreadyExistsException.java,23,"public class IndexAlreadyExistsException extends Exception implements org.apache.thrift.TBase<IndexAlreadyExistsException, IndexAlreadyExistsException._Fields>, java.io.Serializable, Cloneable {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/IndexAlreadyExistsException.java,241,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/IndexAlreadyExistsException.java,242,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/IndexAlreadyExistsException.java,243,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/IndexAlreadyExistsException.java,245,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/IndexAlreadyExistsException.java,246,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/IndexAlreadyExistsException.java,247,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/IndexAlreadyExistsException.java,249,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/IndexAlreadyExistsException.java,250,case 1: // MESSAGE
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/IndexAlreadyExistsException.java,251,if (field.type == org.apache.thrift.protocol.TType.STRING) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/IndexAlreadyExistsException.java,252,this.message = iprot.readString();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/IndexAlreadyExistsException.java,253,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/IndexAlreadyExistsException.java,254,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/IndexAlreadyExistsException.java,256,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/IndexAlreadyExistsException.java,257,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/IndexAlreadyExistsException.java,258,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/IndexAlreadyExistsException.java,260,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/IndexAlreadyExistsException.java,262,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/IndexAlreadyExistsException.java,263,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/IndexAlreadyExistsException.java,267,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/IndexAlreadyExistsException.java,269,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/IndexAlreadyExistsException.java,270,if (this.message != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/IndexAlreadyExistsException.java,271,oprot.writeFieldBegin(MESSAGE_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/IndexAlreadyExistsException.java,272,oprot.writeString(this.message);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/IndexAlreadyExistsException.java,273,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/IndexAlreadyExistsException.java,275,oprot.writeFieldStop();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/IndexAlreadyExistsException.java,276,oprot.writeStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/InvalidObjectException.java,23,"public class InvalidObjectException extends Exception implements org.apache.thrift.TBase<InvalidObjectException, InvalidObjectException._Fields>, java.io.Serializable, Cloneable {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/InvalidObjectException.java,241,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/InvalidObjectException.java,242,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/InvalidObjectException.java,243,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/InvalidObjectException.java,245,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/InvalidObjectException.java,246,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/InvalidObjectException.java,247,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/InvalidObjectException.java,249,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/InvalidObjectException.java,250,case 1: // MESSAGE
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/InvalidObjectException.java,251,if (field.type == org.apache.thrift.protocol.TType.STRING) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/InvalidObjectException.java,252,this.message = iprot.readString();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/InvalidObjectException.java,253,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/InvalidObjectException.java,254,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/InvalidObjectException.java,256,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/InvalidObjectException.java,257,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/InvalidObjectException.java,258,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/InvalidObjectException.java,260,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/InvalidObjectException.java,262,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/InvalidObjectException.java,263,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/InvalidObjectException.java,267,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/InvalidObjectException.java,269,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/InvalidObjectException.java,270,if (this.message != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/InvalidObjectException.java,271,oprot.writeFieldBegin(MESSAGE_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/InvalidObjectException.java,272,oprot.writeString(this.message);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/InvalidObjectException.java,273,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/InvalidObjectException.java,275,oprot.writeFieldStop();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/InvalidObjectException.java,276,oprot.writeStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/InvalidOperationException.java,23,"public class InvalidOperationException extends Exception implements org.apache.thrift.TBase<InvalidOperationException, InvalidOperationException._Fields>, java.io.Serializable, Cloneable {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/InvalidOperationException.java,241,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/InvalidOperationException.java,242,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/InvalidOperationException.java,243,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/InvalidOperationException.java,245,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/InvalidOperationException.java,246,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/InvalidOperationException.java,247,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/InvalidOperationException.java,249,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/InvalidOperationException.java,250,case 1: // MESSAGE
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/InvalidOperationException.java,251,if (field.type == org.apache.thrift.protocol.TType.STRING) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/InvalidOperationException.java,252,this.message = iprot.readString();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/InvalidOperationException.java,253,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/InvalidOperationException.java,254,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/InvalidOperationException.java,256,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/InvalidOperationException.java,257,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/InvalidOperationException.java,258,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/InvalidOperationException.java,260,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/InvalidOperationException.java,262,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/InvalidOperationException.java,263,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/InvalidOperationException.java,267,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/InvalidOperationException.java,269,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/InvalidOperationException.java,270,if (this.message != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/InvalidOperationException.java,271,oprot.writeFieldBegin(MESSAGE_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/InvalidOperationException.java,272,oprot.writeString(this.message);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/InvalidOperationException.java,273,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/InvalidOperationException.java,275,oprot.writeFieldStop();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/InvalidOperationException.java,276,oprot.writeStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/InvalidPartitionException.java,23,"public class InvalidPartitionException extends Exception implements org.apache.thrift.TBase<InvalidPartitionException, InvalidPartitionException._Fields>, java.io.Serializable, Cloneable {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/InvalidPartitionException.java,241,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/InvalidPartitionException.java,242,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/InvalidPartitionException.java,243,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/InvalidPartitionException.java,245,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/InvalidPartitionException.java,246,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/InvalidPartitionException.java,247,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/InvalidPartitionException.java,249,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/InvalidPartitionException.java,250,case 1: // MESSAGE
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/InvalidPartitionException.java,251,if (field.type == org.apache.thrift.protocol.TType.STRING) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/InvalidPartitionException.java,252,this.message = iprot.readString();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/InvalidPartitionException.java,253,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/InvalidPartitionException.java,254,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/InvalidPartitionException.java,256,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/InvalidPartitionException.java,257,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/InvalidPartitionException.java,258,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/InvalidPartitionException.java,260,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/InvalidPartitionException.java,262,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/InvalidPartitionException.java,263,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/InvalidPartitionException.java,267,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/InvalidPartitionException.java,269,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/InvalidPartitionException.java,270,if (this.message != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/InvalidPartitionException.java,271,oprot.writeFieldBegin(MESSAGE_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/InvalidPartitionException.java,272,oprot.writeString(this.message);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/InvalidPartitionException.java,273,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/InvalidPartitionException.java,275,oprot.writeFieldStop();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/InvalidPartitionException.java,276,oprot.writeStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/MetaException.java,23,"public class MetaException extends Exception implements org.apache.thrift.TBase<MetaException, MetaException._Fields>, java.io.Serializable, Cloneable {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/MetaException.java,241,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/MetaException.java,242,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/MetaException.java,243,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/MetaException.java,245,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/MetaException.java,246,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/MetaException.java,247,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/MetaException.java,249,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/MetaException.java,250,case 1: // MESSAGE
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/MetaException.java,251,if (field.type == org.apache.thrift.protocol.TType.STRING) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/MetaException.java,252,this.message = iprot.readString();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/MetaException.java,253,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/MetaException.java,254,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/MetaException.java,256,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/MetaException.java,257,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/MetaException.java,258,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/MetaException.java,260,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/MetaException.java,262,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/MetaException.java,263,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/MetaException.java,267,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/MetaException.java,269,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/MetaException.java,270,if (this.message != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/MetaException.java,271,oprot.writeFieldBegin(MESSAGE_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/MetaException.java,272,oprot.writeString(this.message);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/MetaException.java,273,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/MetaException.java,275,oprot.writeFieldStop();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/MetaException.java,276,oprot.writeStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/NoSuchObjectException.java,23,"public class NoSuchObjectException extends Exception implements org.apache.thrift.TBase<NoSuchObjectException, NoSuchObjectException._Fields>, java.io.Serializable, Cloneable {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/NoSuchObjectException.java,241,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/NoSuchObjectException.java,242,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/NoSuchObjectException.java,243,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/NoSuchObjectException.java,245,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/NoSuchObjectException.java,246,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/NoSuchObjectException.java,247,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/NoSuchObjectException.java,249,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/NoSuchObjectException.java,250,case 1: // MESSAGE
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/NoSuchObjectException.java,251,if (field.type == org.apache.thrift.protocol.TType.STRING) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/NoSuchObjectException.java,252,this.message = iprot.readString();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/NoSuchObjectException.java,253,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/NoSuchObjectException.java,254,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/NoSuchObjectException.java,256,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/NoSuchObjectException.java,257,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/NoSuchObjectException.java,258,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/NoSuchObjectException.java,260,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/NoSuchObjectException.java,262,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/NoSuchObjectException.java,263,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/NoSuchObjectException.java,267,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/NoSuchObjectException.java,269,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/NoSuchObjectException.java,270,if (this.message != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/NoSuchObjectException.java,271,oprot.writeFieldBegin(MESSAGE_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/NoSuchObjectException.java,272,oprot.writeString(this.message);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/NoSuchObjectException.java,273,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/NoSuchObjectException.java,275,oprot.writeFieldStop();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/NoSuchObjectException.java,276,oprot.writeStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Order.java,95,private BitSet __isset_bit_vector = new BitSet(1);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Order.java,125,__isset_bit_vector.clear();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Order.java,126,__isset_bit_vector.or(other.__isset_bit_vector);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Order.java,177,__isset_bit_vector.clear(__ORDER_ISSET_ID);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Order.java,182,return __isset_bit_vector.get(__ORDER_ISSET_ID);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Order.java,186,"__isset_bit_vector.set(__ORDER_ISSET_ID, value);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Order.java,312,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Order.java,313,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Order.java,314,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Order.java,316,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Order.java,317,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Order.java,318,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Order.java,320,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Order.java,321,case 1: // COL
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Order.java,322,if (field.type == org.apache.thrift.protocol.TType.STRING) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Order.java,323,this.col = iprot.readString();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Order.java,324,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Order.java,325,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Order.java,327,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Order.java,328,case 2: // ORDER
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Order.java,329,if (field.type == org.apache.thrift.protocol.TType.I32) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Order.java,330,this.order = iprot.readI32();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Order.java,331,setOrderIsSet(true);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Order.java,332,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Order.java,333,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Order.java,335,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Order.java,336,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Order.java,337,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Order.java,339,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Order.java,341,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Order.java,342,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Order.java,346,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Order.java,348,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Order.java,349,if (this.col != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Order.java,350,oprot.writeFieldBegin(COL_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Order.java,351,oprot.writeString(this.col);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Order.java,352,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Order.java,354,oprot.writeFieldBegin(ORDER_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Order.java,355,oprot.writeI32(this.order);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Order.java,356,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Order.java,357,oprot.writeFieldStop();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Order.java,358,oprot.writeStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Order.java,396,__isset_bit_vector = new BitSet(1);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Order.java,216,return Integer.valueOf(getOrder());
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Partition.java,42,private PrincipalPrivilegeSet privileges; // required
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Partition.java,126,private BitSet __isset_bit_vector = new BitSet(2);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Partition.java,182,__isset_bit_vector.clear();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Partition.java,183,__isset_bit_vector.or(other.__isset_bit_vector);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Partition.java,334,__isset_bit_vector.clear(__CREATETIME_ISSET_ID);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Partition.java,339,return __isset_bit_vector.get(__CREATETIME_ISSET_ID);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Partition.java,343,"__isset_bit_vector.set(__CREATETIME_ISSET_ID, value);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Partition.java,356,__isset_bit_vector.clear(__LASTACCESSTIME_ISSET_ID);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Partition.java,361,return __isset_bit_vector.get(__LASTACCESSTIME_ISSET_ID);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Partition.java,365,"__isset_bit_vector.set(__LASTACCESSTIME_ISSET_ID, value);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Partition.java,1005,__isset_bit_vector = new BitSet(1);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Partition.java,529,return Integer.valueOf(getCreateTime());
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Partition.java,532,return Integer.valueOf(getLastAccessTime());
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,464,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,465,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,466,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,468,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,469,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,470,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,472,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,473,case 1: // USER_PRIVILEGES
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,474,if (field.type == org.apache.thrift.protocol.TType.MAP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,476,org.apache.thrift.protocol.TMap _map12 = iprot.readMapBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,477,"this.userPrivileges = new HashMap<String,List<PrivilegeGrantInfo>>(2*_map12.size);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,478,for (int _i13 = 0; _i13 < _map12.size; ++_i13)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,480,String _key14; // required
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,481,List<PrivilegeGrantInfo> _val15; // required
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,482,_key14 = iprot.readString();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,484,org.apache.thrift.protocol.TList _list16 = iprot.readListBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,485,_val15 = new ArrayList<PrivilegeGrantInfo>(_list16.size);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,486,for (int _i17 = 0; _i17 < _list16.size; ++_i17)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,488,PrivilegeGrantInfo _elem18; // required
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,489,_elem18 = new PrivilegeGrantInfo();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,490,_elem18.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,491,_val15.add(_elem18);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,493,iprot.readListEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,495,"this.userPrivileges.put(_key14, _val15);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,497,iprot.readMapEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,499,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,500,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,502,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,503,case 2: // GROUP_PRIVILEGES
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,504,if (field.type == org.apache.thrift.protocol.TType.MAP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,506,org.apache.thrift.protocol.TMap _map19 = iprot.readMapBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,507,"this.groupPrivileges = new HashMap<String,List<PrivilegeGrantInfo>>(2*_map19.size);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,508,for (int _i20 = 0; _i20 < _map19.size; ++_i20)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,510,String _key21; // required
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,511,List<PrivilegeGrantInfo> _val22; // required
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,512,_key21 = iprot.readString();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,514,org.apache.thrift.protocol.TList _list23 = iprot.readListBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,515,_val22 = new ArrayList<PrivilegeGrantInfo>(_list23.size);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,516,for (int _i24 = 0; _i24 < _list23.size; ++_i24)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,518,PrivilegeGrantInfo _elem25; // required
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,519,_elem25 = new PrivilegeGrantInfo();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,520,_elem25.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,521,_val22.add(_elem25);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,523,iprot.readListEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,525,"this.groupPrivileges.put(_key21, _val22);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,527,iprot.readMapEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,529,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,530,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,532,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,533,case 3: // ROLE_PRIVILEGES
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,534,if (field.type == org.apache.thrift.protocol.TType.MAP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,536,org.apache.thrift.protocol.TMap _map26 = iprot.readMapBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,537,"this.rolePrivileges = new HashMap<String,List<PrivilegeGrantInfo>>(2*_map26.size);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,538,for (int _i27 = 0; _i27 < _map26.size; ++_i27)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,540,String _key28; // required
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,541,List<PrivilegeGrantInfo> _val29; // required
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,542,_key28 = iprot.readString();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,544,org.apache.thrift.protocol.TList _list30 = iprot.readListBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,545,_val29 = new ArrayList<PrivilegeGrantInfo>(_list30.size);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,546,for (int _i31 = 0; _i31 < _list30.size; ++_i31)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,548,PrivilegeGrantInfo _elem32; // required
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,549,_elem32 = new PrivilegeGrantInfo();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,550,_elem32.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,551,_val29.add(_elem32);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,553,iprot.readListEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,555,"this.rolePrivileges.put(_key28, _val29);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,557,iprot.readMapEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,559,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,560,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,562,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,563,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,564,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,566,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,572,public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,573,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,575,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,576,if (this.userPrivileges != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,577,oprot.writeFieldBegin(USER_PRIVILEGES_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,579,"oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.LIST, this.userPrivileges.size()));"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,580,"for (Map.Entry<String, List<PrivilegeGrantInfo>> _iter33 : this.userPrivileges.entrySet())"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,582,oprot.writeString(_iter33.getKey());
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,584,"oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, _iter33.getValue().size()));"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,585,for (PrivilegeGrantInfo _iter34 : _iter33.getValue())
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,587,_iter34.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,592,oprot.writeMapEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,594,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,596,if (this.groupPrivileges != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,597,oprot.writeFieldBegin(GROUP_PRIVILEGES_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,599,"oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.LIST, this.groupPrivileges.size()));"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,600,"for (Map.Entry<String, List<PrivilegeGrantInfo>> _iter35 : this.groupPrivileges.entrySet())"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,602,oprot.writeString(_iter35.getKey());
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,604,"oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, _iter35.getValue().size()));"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,605,for (PrivilegeGrantInfo _iter36 : _iter35.getValue())
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,607,_iter36.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,612,oprot.writeMapEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,614,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,616,if (this.rolePrivileges != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,617,oprot.writeFieldBegin(ROLE_PRIVILEGES_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,619,"oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.LIST, this.rolePrivileges.size()));"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,620,"for (Map.Entry<String, List<PrivilegeGrantInfo>> _iter37 : this.rolePrivileges.entrySet())"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,622,oprot.writeString(_iter37.getKey());
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,624,"oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, _iter37.getValue().size()));"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,625,for (PrivilegeGrantInfo _iter38 : _iter37.getValue())
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,627,_iter38.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,632,oprot.writeMapEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,634,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,640,@Override
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,641,public String toString() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,642,"StringBuilder sb = new StringBuilder(""PrincipalPrivilegeSet("");"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,643,boolean first = true;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,645,"sb.append(""userPrivileges:"");"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,646,if (this.userPrivileges == null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,647,"sb.append(""null"");"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,648,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,649,sb.append(this.userPrivileges);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,672,public void validate() throws org.apache.thrift.TException {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,676,private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,677,try {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,678,write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,679,} catch (org.apache.thrift.TException te) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,680,throw new java.io.IOException(te);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,684,"private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,685,try {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,686,read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,687,} catch (org.apache.thrift.TException te) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrincipalPrivilegeSet.java,688,throw new java.io.IOException(te);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeBag.java,261,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeBag.java,262,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeBag.java,263,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeBag.java,265,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeBag.java,266,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeBag.java,267,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeBag.java,269,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeBag.java,270,case 1: // PRIVILEGES
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeBag.java,271,if (field.type == org.apache.thrift.protocol.TType.LIST) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeBag.java,273,org.apache.thrift.protocol.TList _list8 = iprot.readListBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeBag.java,274,this.privileges = new ArrayList<HiveObjectPrivilege>(_list8.size);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeBag.java,275,for (int _i9 = 0; _i9 < _list8.size; ++_i9)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeBag.java,277,HiveObjectPrivilege _elem10; // required
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeBag.java,278,_elem10 = new HiveObjectPrivilege();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeBag.java,279,_elem10.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeBag.java,280,this.privileges.add(_elem10);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeBag.java,282,iprot.readListEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeBag.java,284,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeBag.java,285,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeBag.java,287,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeBag.java,288,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeBag.java,289,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeBag.java,291,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeBag.java,293,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeBag.java,294,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeBag.java,298,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeBag.java,300,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeBag.java,301,if (this.privileges != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeBag.java,302,oprot.writeFieldBegin(PRIVILEGES_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeBag.java,304,"oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, this.privileges.size()));"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeBag.java,305,for (HiveObjectPrivilege _iter11 : this.privileges)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeBag.java,307,_iter11.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeBag.java,309,oprot.writeListEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeBag.java,311,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeBag.java,313,oprot.writeFieldStop();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeBag.java,314,oprot.writeStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeGrantInfo.java,115,private BitSet __isset_bit_vector = new BitSet(2);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeGrantInfo.java,158,__isset_bit_vector.clear();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeGrantInfo.java,159,__isset_bit_vector.or(other.__isset_bit_vector);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeGrantInfo.java,221,__isset_bit_vector.clear(__CREATETIME_ISSET_ID);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeGrantInfo.java,226,return __isset_bit_vector.get(__CREATETIME_ISSET_ID);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeGrantInfo.java,230,"__isset_bit_vector.set(__CREATETIME_ISSET_ID, value);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeGrantInfo.java,297,__isset_bit_vector.clear(__GRANTOPTION_ISSET_ID);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeGrantInfo.java,302,return __isset_bit_vector.get(__GRANTOPTION_ISSET_ID);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeGrantInfo.java,306,"__isset_bit_vector.set(__GRANTOPTION_ISSET_ID, value);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeGrantInfo.java,528,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeGrantInfo.java,529,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeGrantInfo.java,530,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeGrantInfo.java,532,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeGrantInfo.java,533,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeGrantInfo.java,534,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeGrantInfo.java,536,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeGrantInfo.java,537,case 1: // PRIVILEGE
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeGrantInfo.java,538,if (field.type == org.apache.thrift.protocol.TType.STRING) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeGrantInfo.java,539,this.privilege = iprot.readString();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeGrantInfo.java,540,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeGrantInfo.java,541,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeGrantInfo.java,543,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeGrantInfo.java,544,case 2: // CREATE_TIME
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeGrantInfo.java,545,if (field.type == org.apache.thrift.protocol.TType.I32) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeGrantInfo.java,546,this.createTime = iprot.readI32();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeGrantInfo.java,547,setCreateTimeIsSet(true);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeGrantInfo.java,548,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeGrantInfo.java,549,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeGrantInfo.java,551,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeGrantInfo.java,552,case 3: // GRANTOR
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeGrantInfo.java,553,if (field.type == org.apache.thrift.protocol.TType.STRING) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeGrantInfo.java,554,this.grantor = iprot.readString();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeGrantInfo.java,555,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeGrantInfo.java,556,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeGrantInfo.java,558,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeGrantInfo.java,559,case 4: // GRANTOR_TYPE
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeGrantInfo.java,560,if (field.type == org.apache.thrift.protocol.TType.I32) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeGrantInfo.java,561,this.grantorType = PrincipalType.findByValue(iprot.readI32());
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeGrantInfo.java,562,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeGrantInfo.java,563,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeGrantInfo.java,565,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeGrantInfo.java,566,case 5: // GRANT_OPTION
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeGrantInfo.java,567,if (field.type == org.apache.thrift.protocol.TType.BOOL) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeGrantInfo.java,568,this.grantOption = iprot.readBool();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeGrantInfo.java,569,setGrantOptionIsSet(true);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeGrantInfo.java,570,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeGrantInfo.java,571,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeGrantInfo.java,573,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeGrantInfo.java,574,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeGrantInfo.java,575,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeGrantInfo.java,577,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeGrantInfo.java,579,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeGrantInfo.java,580,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeGrantInfo.java,584,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeGrantInfo.java,586,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeGrantInfo.java,587,if (this.privilege != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeGrantInfo.java,588,oprot.writeFieldBegin(PRIVILEGE_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeGrantInfo.java,589,oprot.writeString(this.privilege);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeGrantInfo.java,590,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeGrantInfo.java,592,oprot.writeFieldBegin(CREATE_TIME_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeGrantInfo.java,593,oprot.writeI32(this.createTime);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeGrantInfo.java,594,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeGrantInfo.java,595,if (this.grantor != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeGrantInfo.java,596,oprot.writeFieldBegin(GRANTOR_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeGrantInfo.java,597,oprot.writeString(this.grantor);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeGrantInfo.java,598,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeGrantInfo.java,600,if (this.grantorType != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeGrantInfo.java,601,oprot.writeFieldBegin(GRANTOR_TYPE_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeGrantInfo.java,602,oprot.writeI32(this.grantorType.getValue());
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeGrantInfo.java,603,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeGrantInfo.java,605,oprot.writeFieldBegin(GRANT_OPTION_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeGrantInfo.java,606,oprot.writeBool(this.grantOption);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeGrantInfo.java,607,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeGrantInfo.java,608,oprot.writeFieldStop();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeGrantInfo.java,609,oprot.writeStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeGrantInfo.java,667,__isset_bit_vector = new BitSet(1);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeGrantInfo.java,360,return Integer.valueOf(getCreateTime());
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/PrivilegeGrantInfo.java,369,return Boolean.valueOf(isGrantOption());
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Role.java,100,private BitSet __isset_bit_vector = new BitSet(1);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Role.java,134,__isset_bit_vector.clear();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Role.java,135,__isset_bit_vector.or(other.__isset_bit_vector);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Role.java,190,__isset_bit_vector.clear(__CREATETIME_ISSET_ID);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Role.java,195,return __isset_bit_vector.get(__CREATETIME_ISSET_ID);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Role.java,199,"__isset_bit_vector.set(__CREATETIME_ISSET_ID, value);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Role.java,380,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Role.java,381,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Role.java,382,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Role.java,384,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Role.java,385,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Role.java,386,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Role.java,388,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Role.java,389,case 1: // ROLE_NAME
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Role.java,390,if (field.type == org.apache.thrift.protocol.TType.STRING) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Role.java,391,this.roleName = iprot.readString();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Role.java,392,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Role.java,393,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Role.java,395,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Role.java,396,case 2: // CREATE_TIME
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Role.java,397,if (field.type == org.apache.thrift.protocol.TType.I32) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Role.java,398,this.createTime = iprot.readI32();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Role.java,399,setCreateTimeIsSet(true);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Role.java,400,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Role.java,401,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Role.java,403,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Role.java,404,case 3: // OWNER_NAME
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Role.java,405,if (field.type == org.apache.thrift.protocol.TType.STRING) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Role.java,406,this.ownerName = iprot.readString();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Role.java,407,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Role.java,408,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Role.java,410,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Role.java,411,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Role.java,412,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Role.java,414,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Role.java,416,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Role.java,417,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Role.java,421,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Role.java,423,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Role.java,424,if (this.roleName != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Role.java,425,oprot.writeFieldBegin(ROLE_NAME_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Role.java,426,oprot.writeString(this.roleName);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Role.java,427,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Role.java,429,oprot.writeFieldBegin(CREATE_TIME_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Role.java,430,oprot.writeI32(this.createTime);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Role.java,431,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Role.java,432,if (this.ownerName != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Role.java,433,oprot.writeFieldBegin(OWNER_NAME_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Role.java,434,oprot.writeString(this.ownerName);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Role.java,435,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Role.java,437,oprot.writeFieldStop();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Role.java,438,oprot.writeStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Role.java,484,__isset_bit_vector = new BitSet(1);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Role.java,260,return Integer.valueOf(getCreateTime());
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/SerDeInfo.java,402,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/SerDeInfo.java,403,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/SerDeInfo.java,404,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/SerDeInfo.java,406,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/SerDeInfo.java,407,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/SerDeInfo.java,408,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/SerDeInfo.java,410,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/SerDeInfo.java,411,case 1: // NAME
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/SerDeInfo.java,412,if (field.type == org.apache.thrift.protocol.TType.STRING) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/SerDeInfo.java,413,this.name = iprot.readString();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/SerDeInfo.java,414,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/SerDeInfo.java,415,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/SerDeInfo.java,417,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/SerDeInfo.java,418,case 2: // SERIALIZATION_LIB
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/SerDeInfo.java,419,if (field.type == org.apache.thrift.protocol.TType.STRING) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/SerDeInfo.java,420,this.serializationLib = iprot.readString();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/SerDeInfo.java,421,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/SerDeInfo.java,422,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/SerDeInfo.java,424,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/SerDeInfo.java,425,case 3: // PARAMETERS
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/SerDeInfo.java,426,if (field.type == org.apache.thrift.protocol.TType.MAP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/SerDeInfo.java,428,org.apache.thrift.protocol.TMap _map44 = iprot.readMapBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/SerDeInfo.java,429,"this.parameters = new HashMap<String,String>(2*_map44.size);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/SerDeInfo.java,430,for (int _i45 = 0; _i45 < _map44.size; ++_i45)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/SerDeInfo.java,432,String _key46; // required
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/SerDeInfo.java,433,String _val47; // required
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/SerDeInfo.java,434,_key46 = iprot.readString();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/SerDeInfo.java,435,_val47 = iprot.readString();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/SerDeInfo.java,436,"this.parameters.put(_key46, _val47);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/SerDeInfo.java,438,iprot.readMapEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/SerDeInfo.java,440,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/SerDeInfo.java,441,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/SerDeInfo.java,443,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/SerDeInfo.java,444,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/SerDeInfo.java,445,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/SerDeInfo.java,447,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/SerDeInfo.java,449,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/SerDeInfo.java,450,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/SerDeInfo.java,454,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/SerDeInfo.java,456,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/SerDeInfo.java,457,if (this.name != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/SerDeInfo.java,458,oprot.writeFieldBegin(NAME_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/SerDeInfo.java,459,oprot.writeString(this.name);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/SerDeInfo.java,460,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/SerDeInfo.java,462,if (this.serializationLib != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/SerDeInfo.java,463,oprot.writeFieldBegin(SERIALIZATION_LIB_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/SerDeInfo.java,464,oprot.writeString(this.serializationLib);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/SerDeInfo.java,465,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/SerDeInfo.java,467,if (this.parameters != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/SerDeInfo.java,468,oprot.writeFieldBegin(PARAMETERS_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/SerDeInfo.java,470,"oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRING, this.parameters.size()));"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/SerDeInfo.java,471,"for (Map.Entry<String, String> _iter48 : this.parameters.entrySet())"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/SerDeInfo.java,473,oprot.writeString(_iter48.getKey());
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/SerDeInfo.java,474,oprot.writeString(_iter48.getValue());
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/SerDeInfo.java,476,oprot.writeMapEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/SerDeInfo.java,478,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/SerDeInfo.java,480,oprot.writeFieldStop();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/SerDeInfo.java,481,oprot.writeStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/StorageDescriptor.java,136,private BitSet __isset_bit_vector = new BitSet(2);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/StorageDescriptor.java,204,__isset_bit_vector.clear();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/StorageDescriptor.java,205,__isset_bit_vector.or(other.__isset_bit_vector);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/StorageDescriptor.java,395,__isset_bit_vector.clear(__COMPRESSED_ISSET_ID);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/StorageDescriptor.java,400,return __isset_bit_vector.get(__COMPRESSED_ISSET_ID);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/StorageDescriptor.java,404,"__isset_bit_vector.set(__COMPRESSED_ISSET_ID, value);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/StorageDescriptor.java,417,__isset_bit_vector.clear(__NUMBUCKETS_ISSET_ID);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/StorageDescriptor.java,422,return __isset_bit_vector.get(__NUMBUCKETS_ISSET_ID);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/StorageDescriptor.java,426,"__isset_bit_vector.set(__NUMBUCKETS_ISSET_ID, value);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/StorageDescriptor.java,1254,__isset_bit_vector = new BitSet(1);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/StorageDescriptor.java,662,return Boolean.valueOf(isCompressed());
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/StorageDescriptor.java,665,return Integer.valueOf(getNumBuckets());
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Table.java,52,private PrincipalPrivilegeSet privileges; // required
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Table.java,152,private BitSet __isset_bit_vector = new BitSet(3);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Table.java,229,__isset_bit_vector.clear();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Table.java,230,__isset_bit_vector.or(other.__isset_bit_vector);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Table.java,385,__isset_bit_vector.clear(__CREATETIME_ISSET_ID);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Table.java,390,return __isset_bit_vector.get(__CREATETIME_ISSET_ID);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Table.java,394,"__isset_bit_vector.set(__CREATETIME_ISSET_ID, value);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Table.java,407,__isset_bit_vector.clear(__LASTACCESSTIME_ISSET_ID);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Table.java,412,return __isset_bit_vector.get(__LASTACCESSTIME_ISSET_ID);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Table.java,416,"__isset_bit_vector.set(__LASTACCESSTIME_ISSET_ID, value);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Table.java,429,__isset_bit_vector.clear(__RETENTION_ISSET_ID);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Table.java,434,return __isset_bit_vector.get(__RETENTION_ISSET_ID);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Table.java,438,"__isset_bit_vector.set(__RETENTION_ISSET_ID, value);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Table.java,1441,__isset_bit_vector = new BitSet(1);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Table.java,749,return Integer.valueOf(getCreateTime());
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Table.java,752,return Integer.valueOf(getLastAccessTime());
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Table.java,755,return Integer.valueOf(getRetention());
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,4569,public static class Processor<I extends Iface> extends com.facebook.fb303.FacebookService.Processor implements org.apache.thrift.TProcessor {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,4647,"private static class create_database<I extends Iface> extends org.apache.thrift.ProcessFunction<I, create_database_args> {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,4652,protected create_database_args getEmptyArgsInstance() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,4656,"protected create_database_result getResult(I iface, create_database_args args) throws org.apache.thrift.TException {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,4671,"private static class get_database<I extends Iface> extends org.apache.thrift.ProcessFunction<I, get_database_args> {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,4676,protected get_database_args getEmptyArgsInstance() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,4680,"protected get_database_result getResult(I iface, get_database_args args) throws org.apache.thrift.TException {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,4693,"private static class drop_database<I extends Iface> extends org.apache.thrift.ProcessFunction<I, drop_database_args> {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,4698,protected drop_database_args getEmptyArgsInstance() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,4702,"protected drop_database_result getResult(I iface, drop_database_args args) throws org.apache.thrift.TException {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,4717,"private static class get_databases<I extends Iface> extends org.apache.thrift.ProcessFunction<I, get_databases_args> {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,4722,protected get_databases_args getEmptyArgsInstance() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,4726,"protected get_databases_result getResult(I iface, get_databases_args args) throws org.apache.thrift.TException {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,4737,"private static class get_all_databases<I extends Iface> extends org.apache.thrift.ProcessFunction<I, get_all_databases_args> {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,4742,protected get_all_databases_args getEmptyArgsInstance() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,4746,"protected get_all_databases_result getResult(I iface, get_all_databases_args args) throws org.apache.thrift.TException {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,4757,"private static class alter_database<I extends Iface> extends org.apache.thrift.ProcessFunction<I, alter_database_args> {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,4762,protected alter_database_args getEmptyArgsInstance() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,4766,"protected alter_database_result getResult(I iface, alter_database_args args) throws org.apache.thrift.TException {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,4779,"private static class get_type<I extends Iface> extends org.apache.thrift.ProcessFunction<I, get_type_args> {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,4784,protected get_type_args getEmptyArgsInstance() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,4788,"protected get_type_result getResult(I iface, get_type_args args) throws org.apache.thrift.TException {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,4801,"private static class create_type<I extends Iface> extends org.apache.thrift.ProcessFunction<I, create_type_args> {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,4806,protected create_type_args getEmptyArgsInstance() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,4810,"protected create_type_result getResult(I iface, create_type_args args) throws org.apache.thrift.TException {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,4826,"private static class drop_type<I extends Iface> extends org.apache.thrift.ProcessFunction<I, drop_type_args> {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,4831,protected drop_type_args getEmptyArgsInstance() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,4835,"protected drop_type_result getResult(I iface, drop_type_args args) throws org.apache.thrift.TException {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,4849,"private static class get_type_all<I extends Iface> extends org.apache.thrift.ProcessFunction<I, get_type_all_args> {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,4854,protected get_type_all_args getEmptyArgsInstance() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,4858,"protected get_type_all_result getResult(I iface, get_type_all_args args) throws org.apache.thrift.TException {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,4869,"private static class get_fields<I extends Iface> extends org.apache.thrift.ProcessFunction<I, get_fields_args> {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,4874,protected get_fields_args getEmptyArgsInstance() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,4878,"protected get_fields_result getResult(I iface, get_fields_args args) throws org.apache.thrift.TException {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,4893,"private static class get_schema<I extends Iface> extends org.apache.thrift.ProcessFunction<I, get_schema_args> {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,4898,protected get_schema_args getEmptyArgsInstance() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,4902,"protected get_schema_result getResult(I iface, get_schema_args args) throws org.apache.thrift.TException {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,4917,"private static class create_table<I extends Iface> extends org.apache.thrift.ProcessFunction<I, create_table_args> {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,4922,protected create_table_args getEmptyArgsInstance() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,4926,"protected create_table_result getResult(I iface, create_table_args args) throws org.apache.thrift.TException {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,4943,"private static class drop_table<I extends Iface> extends org.apache.thrift.ProcessFunction<I, drop_table_args> {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,4948,protected drop_table_args getEmptyArgsInstance() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,4952,"protected drop_table_result getResult(I iface, drop_table_args args) throws org.apache.thrift.TException {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,4965,"private static class get_tables<I extends Iface> extends org.apache.thrift.ProcessFunction<I, get_tables_args> {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,4970,protected get_tables_args getEmptyArgsInstance() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,4974,"protected get_tables_result getResult(I iface, get_tables_args args) throws org.apache.thrift.TException {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,4985,"private static class get_all_tables<I extends Iface> extends org.apache.thrift.ProcessFunction<I, get_all_tables_args> {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,4990,protected get_all_tables_args getEmptyArgsInstance() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,4994,"protected get_all_tables_result getResult(I iface, get_all_tables_args args) throws org.apache.thrift.TException {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5005,"private static class get_table<I extends Iface> extends org.apache.thrift.ProcessFunction<I, get_table_args> {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5010,protected get_table_args getEmptyArgsInstance() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5014,"protected get_table_result getResult(I iface, get_table_args args) throws org.apache.thrift.TException {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5027,"private static class get_table_objects_by_name<I extends Iface> extends org.apache.thrift.ProcessFunction<I, get_table_objects_by_name_args> {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5032,protected get_table_objects_by_name_args getEmptyArgsInstance() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5036,"protected get_table_objects_by_name_result getResult(I iface, get_table_objects_by_name_args args) throws org.apache.thrift.TException {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5051,"private static class get_table_names_by_filter<I extends Iface> extends org.apache.thrift.ProcessFunction<I, get_table_names_by_filter_args> {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5056,protected get_table_names_by_filter_args getEmptyArgsInstance() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5060,"protected get_table_names_by_filter_result getResult(I iface, get_table_names_by_filter_args args) throws org.apache.thrift.TException {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5075,"private static class alter_table<I extends Iface> extends org.apache.thrift.ProcessFunction<I, alter_table_args> {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5080,protected alter_table_args getEmptyArgsInstance() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5084,"protected alter_table_result getResult(I iface, alter_table_args args) throws org.apache.thrift.TException {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5097,"private static class add_partition<I extends Iface> extends org.apache.thrift.ProcessFunction<I, add_partition_args> {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5102,protected add_partition_args getEmptyArgsInstance() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5106,"protected add_partition_result getResult(I iface, add_partition_args args) throws org.apache.thrift.TException {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5121,"private static class add_partitions<I extends Iface> extends org.apache.thrift.ProcessFunction<I, add_partitions_args> {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5126,protected add_partitions_args getEmptyArgsInstance() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5130,"protected add_partitions_result getResult(I iface, add_partitions_args args) throws org.apache.thrift.TException {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5146,"private static class append_partition<I extends Iface> extends org.apache.thrift.ProcessFunction<I, append_partition_args> {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5151,protected append_partition_args getEmptyArgsInstance() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5155,"protected append_partition_result getResult(I iface, append_partition_args args) throws org.apache.thrift.TException {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5170,"private static class append_partition_by_name<I extends Iface> extends org.apache.thrift.ProcessFunction<I, append_partition_by_name_args> {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5175,protected append_partition_by_name_args getEmptyArgsInstance() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5179,"protected append_partition_by_name_result getResult(I iface, append_partition_by_name_args args) throws org.apache.thrift.TException {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5194,"private static class drop_partition<I extends Iface> extends org.apache.thrift.ProcessFunction<I, drop_partition_args> {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5199,protected drop_partition_args getEmptyArgsInstance() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5203,"protected drop_partition_result getResult(I iface, drop_partition_args args) throws org.apache.thrift.TException {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5217,"private static class drop_partition_by_name<I extends Iface> extends org.apache.thrift.ProcessFunction<I, drop_partition_by_name_args> {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5222,protected drop_partition_by_name_args getEmptyArgsInstance() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5226,"protected drop_partition_by_name_result getResult(I iface, drop_partition_by_name_args args) throws org.apache.thrift.TException {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5240,"private static class get_partition<I extends Iface> extends org.apache.thrift.ProcessFunction<I, get_partition_args> {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5245,protected get_partition_args getEmptyArgsInstance() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5249,"protected get_partition_result getResult(I iface, get_partition_args args) throws org.apache.thrift.TException {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5262,"private static class get_partition_with_auth<I extends Iface> extends org.apache.thrift.ProcessFunction<I, get_partition_with_auth_args> {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5267,protected get_partition_with_auth_args getEmptyArgsInstance() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5271,"protected get_partition_with_auth_result getResult(I iface, get_partition_with_auth_args args) throws org.apache.thrift.TException {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5284,"private static class get_partition_by_name<I extends Iface> extends org.apache.thrift.ProcessFunction<I, get_partition_by_name_args> {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5289,protected get_partition_by_name_args getEmptyArgsInstance() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5293,"protected get_partition_by_name_result getResult(I iface, get_partition_by_name_args args) throws org.apache.thrift.TException {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5306,"private static class get_partitions<I extends Iface> extends org.apache.thrift.ProcessFunction<I, get_partitions_args> {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5311,protected get_partitions_args getEmptyArgsInstance() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5315,"protected get_partitions_result getResult(I iface, get_partitions_args args) throws org.apache.thrift.TException {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5328,"private static class get_partitions_with_auth<I extends Iface> extends org.apache.thrift.ProcessFunction<I, get_partitions_with_auth_args> {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5333,protected get_partitions_with_auth_args getEmptyArgsInstance() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5337,"protected get_partitions_with_auth_result getResult(I iface, get_partitions_with_auth_args args) throws org.apache.thrift.TException {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5350,"private static class get_partition_names<I extends Iface> extends org.apache.thrift.ProcessFunction<I, get_partition_names_args> {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5355,protected get_partition_names_args getEmptyArgsInstance() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5359,"protected get_partition_names_result getResult(I iface, get_partition_names_args args) throws org.apache.thrift.TException {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5370,"private static class get_partitions_ps<I extends Iface> extends org.apache.thrift.ProcessFunction<I, get_partitions_ps_args> {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5375,protected get_partitions_ps_args getEmptyArgsInstance() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5379,"protected get_partitions_ps_result getResult(I iface, get_partitions_ps_args args) throws org.apache.thrift.TException {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5392,"private static class get_partitions_ps_with_auth<I extends Iface> extends org.apache.thrift.ProcessFunction<I, get_partitions_ps_with_auth_args> {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5397,protected get_partitions_ps_with_auth_args getEmptyArgsInstance() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5401,"protected get_partitions_ps_with_auth_result getResult(I iface, get_partitions_ps_with_auth_args args) throws org.apache.thrift.TException {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5414,"private static class get_partition_names_ps<I extends Iface> extends org.apache.thrift.ProcessFunction<I, get_partition_names_ps_args> {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5419,protected get_partition_names_ps_args getEmptyArgsInstance() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5423,"protected get_partition_names_ps_result getResult(I iface, get_partition_names_ps_args args) throws org.apache.thrift.TException {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5436,"private static class get_partitions_by_filter<I extends Iface> extends org.apache.thrift.ProcessFunction<I, get_partitions_by_filter_args> {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5441,protected get_partitions_by_filter_args getEmptyArgsInstance() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5445,"protected get_partitions_by_filter_result getResult(I iface, get_partitions_by_filter_args args) throws org.apache.thrift.TException {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5458,"private static class get_partitions_by_names<I extends Iface> extends org.apache.thrift.ProcessFunction<I, get_partitions_by_names_args> {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5463,protected get_partitions_by_names_args getEmptyArgsInstance() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5467,"protected get_partitions_by_names_result getResult(I iface, get_partitions_by_names_args args) throws org.apache.thrift.TException {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5480,"private static class alter_partition<I extends Iface> extends org.apache.thrift.ProcessFunction<I, alter_partition_args> {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5485,protected alter_partition_args getEmptyArgsInstance() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5489,"protected alter_partition_result getResult(I iface, alter_partition_args args) throws org.apache.thrift.TException {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5502,"private static class rename_partition<I extends Iface> extends org.apache.thrift.ProcessFunction<I, rename_partition_args> {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5507,protected rename_partition_args getEmptyArgsInstance() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5511,"protected rename_partition_result getResult(I iface, rename_partition_args args) throws org.apache.thrift.TException {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5524,"private static class get_config_value<I extends Iface> extends org.apache.thrift.ProcessFunction<I, get_config_value_args> {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5529,protected get_config_value_args getEmptyArgsInstance() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5533,"protected get_config_value_result getResult(I iface, get_config_value_args args) throws org.apache.thrift.TException {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5544,"private static class partition_name_to_vals<I extends Iface> extends org.apache.thrift.ProcessFunction<I, partition_name_to_vals_args> {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5549,protected partition_name_to_vals_args getEmptyArgsInstance() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5553,"protected partition_name_to_vals_result getResult(I iface, partition_name_to_vals_args args) throws org.apache.thrift.TException {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5564,"private static class partition_name_to_spec<I extends Iface> extends org.apache.thrift.ProcessFunction<I, partition_name_to_spec_args> {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5569,protected partition_name_to_spec_args getEmptyArgsInstance() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5573,"protected partition_name_to_spec_result getResult(I iface, partition_name_to_spec_args args) throws org.apache.thrift.TException {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5584,"private static class markPartitionForEvent<I extends Iface> extends org.apache.thrift.ProcessFunction<I, markPartitionForEvent_args> {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5589,protected markPartitionForEvent_args getEmptyArgsInstance() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5593,"protected markPartitionForEvent_result getResult(I iface, markPartitionForEvent_args args) throws org.apache.thrift.TException {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5614,"private static class isPartitionMarkedForEvent<I extends Iface> extends org.apache.thrift.ProcessFunction<I, isPartitionMarkedForEvent_args> {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5619,protected isPartitionMarkedForEvent_args getEmptyArgsInstance() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5623,"protected isPartitionMarkedForEvent_result getResult(I iface, isPartitionMarkedForEvent_args args) throws org.apache.thrift.TException {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5645,"private static class add_index<I extends Iface> extends org.apache.thrift.ProcessFunction<I, add_index_args> {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5650,protected add_index_args getEmptyArgsInstance() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5654,"protected add_index_result getResult(I iface, add_index_args args) throws org.apache.thrift.TException {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5669,"private static class alter_index<I extends Iface> extends org.apache.thrift.ProcessFunction<I, alter_index_args> {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5674,protected alter_index_args getEmptyArgsInstance() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5678,"protected alter_index_result getResult(I iface, alter_index_args args) throws org.apache.thrift.TException {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5691,"private static class drop_index_by_name<I extends Iface> extends org.apache.thrift.ProcessFunction<I, drop_index_by_name_args> {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5696,protected drop_index_by_name_args getEmptyArgsInstance() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5700,"protected drop_index_by_name_result getResult(I iface, drop_index_by_name_args args) throws org.apache.thrift.TException {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5714,"private static class get_index_by_name<I extends Iface> extends org.apache.thrift.ProcessFunction<I, get_index_by_name_args> {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5719,protected get_index_by_name_args getEmptyArgsInstance() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5723,"protected get_index_by_name_result getResult(I iface, get_index_by_name_args args) throws org.apache.thrift.TException {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5736,"private static class get_indexes<I extends Iface> extends org.apache.thrift.ProcessFunction<I, get_indexes_args> {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5741,protected get_indexes_args getEmptyArgsInstance() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5745,"protected get_indexes_result getResult(I iface, get_indexes_args args) throws org.apache.thrift.TException {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5758,"private static class get_index_names<I extends Iface> extends org.apache.thrift.ProcessFunction<I, get_index_names_args> {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5763,protected get_index_names_args getEmptyArgsInstance() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5767,"protected get_index_names_result getResult(I iface, get_index_names_args args) throws org.apache.thrift.TException {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5778,"private static class create_role<I extends Iface> extends org.apache.thrift.ProcessFunction<I, create_role_args> {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5783,protected create_role_args getEmptyArgsInstance() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5787,"protected create_role_result getResult(I iface, create_role_args args) throws org.apache.thrift.TException {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5799,"private static class drop_role<I extends Iface> extends org.apache.thrift.ProcessFunction<I, drop_role_args> {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5804,protected drop_role_args getEmptyArgsInstance() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5808,"protected drop_role_result getResult(I iface, drop_role_args args) throws org.apache.thrift.TException {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5820,"private static class get_role_names<I extends Iface> extends org.apache.thrift.ProcessFunction<I, get_role_names_args> {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5825,protected get_role_names_args getEmptyArgsInstance() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5829,"protected get_role_names_result getResult(I iface, get_role_names_args args) throws org.apache.thrift.TException {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5840,"private static class grant_role<I extends Iface> extends org.apache.thrift.ProcessFunction<I, grant_role_args> {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5845,protected grant_role_args getEmptyArgsInstance() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5849,"protected grant_role_result getResult(I iface, grant_role_args args) throws org.apache.thrift.TException {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5861,"private static class revoke_role<I extends Iface> extends org.apache.thrift.ProcessFunction<I, revoke_role_args> {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5866,protected revoke_role_args getEmptyArgsInstance() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5870,"protected revoke_role_result getResult(I iface, revoke_role_args args) throws org.apache.thrift.TException {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5882,"private static class list_roles<I extends Iface> extends org.apache.thrift.ProcessFunction<I, list_roles_args> {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5887,protected list_roles_args getEmptyArgsInstance() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5891,"protected list_roles_result getResult(I iface, list_roles_args args) throws org.apache.thrift.TException {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5902,"private static class get_privilege_set<I extends Iface> extends org.apache.thrift.ProcessFunction<I, get_privilege_set_args> {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5907,protected get_privilege_set_args getEmptyArgsInstance() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5911,"protected get_privilege_set_result getResult(I iface, get_privilege_set_args args) throws org.apache.thrift.TException {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5922,"private static class list_privileges<I extends Iface> extends org.apache.thrift.ProcessFunction<I, list_privileges_args> {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5927,protected list_privileges_args getEmptyArgsInstance() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5931,"protected list_privileges_result getResult(I iface, list_privileges_args args) throws org.apache.thrift.TException {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5942,"private static class grant_privileges<I extends Iface> extends org.apache.thrift.ProcessFunction<I, grant_privileges_args> {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5947,protected grant_privileges_args getEmptyArgsInstance() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5951,"protected grant_privileges_result getResult(I iface, grant_privileges_args args) throws org.apache.thrift.TException {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5963,"private static class revoke_privileges<I extends Iface> extends org.apache.thrift.ProcessFunction<I, revoke_privileges_args> {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5968,protected revoke_privileges_args getEmptyArgsInstance() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5972,"protected revoke_privileges_result getResult(I iface, revoke_privileges_args args) throws org.apache.thrift.TException {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5984,"private static class set_ugi<I extends Iface> extends org.apache.thrift.ProcessFunction<I, set_ugi_args> {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5989,protected set_ugi_args getEmptyArgsInstance() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,5993,"protected set_ugi_result getResult(I iface, set_ugi_args args) throws org.apache.thrift.TException {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6004,"private static class get_delegation_token<I extends Iface> extends org.apache.thrift.ProcessFunction<I, get_delegation_token_args> {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6009,protected get_delegation_token_args getEmptyArgsInstance() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6013,"protected get_delegation_token_result getResult(I iface, get_delegation_token_args args) throws org.apache.thrift.TException {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6024,"private static class renew_delegation_token<I extends Iface> extends org.apache.thrift.ProcessFunction<I, renew_delegation_token_args> {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6029,protected renew_delegation_token_args getEmptyArgsInstance() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6033,"protected renew_delegation_token_result getResult(I iface, renew_delegation_token_args args) throws org.apache.thrift.TException {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6045,"private static class cancel_delegation_token<I extends Iface> extends org.apache.thrift.ProcessFunction<I, cancel_delegation_token_args> {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6050,protected cancel_delegation_token_args getEmptyArgsInstance() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6054,"protected cancel_delegation_token_result getResult(I iface, cancel_delegation_token_args args) throws org.apache.thrift.TException {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6285,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6286,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6287,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6289,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6290,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6202,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6293,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6294,case 1: // DATABASE
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6295,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6296,this.database = new Database();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6297,this.database.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6199,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6299,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6722,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6093,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6730,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6305,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6307,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6308,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6755,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6314,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6315,if (this.database != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6316,oprot.writeFieldBegin(DATABASE_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6317,this.database.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6318,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6320,oprot.writeFieldStop();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6321,oprot.writeStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7050,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7051,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7052,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7054,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6721,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7056,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7058,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7158,case 1: // O1
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6726,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6727,this.o1 = new AlreadyExistsException();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6728,this.o1.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7096,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7063,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6291,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7160,case 2: // O2
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6734,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6735,this.o2 = new InvalidObjectException();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6736,this.o2.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6298,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6303,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6301,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6396,case 3: // O3
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7490,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6743,this.o3 = new MetaException();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6744,this.o3.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6332,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6738,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6569,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7066,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6746,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7069,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7071,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7072,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7078,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6761,if (this.isSetO1()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6762,oprot.writeFieldBegin(O1_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6763,this.o1.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7082,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6765,} else if (this.isSetO2()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6766,oprot.writeFieldBegin(O2_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6767,this.o2.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6764,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6769,} else if (this.isSetO3()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6770,oprot.writeFieldBegin(O3_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6771,this.o3.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6768,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7480,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7481,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7482,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7484,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7055,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6577,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7488,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7626,case 1: // NAME
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7060,if (field.type == org.apache.thrift.protocol.TType.STRING) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7061,this.name = iprot.readString();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6566,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6750,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7486,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6302,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7494,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7516,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7518,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6312,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7519,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7523,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7079,if (this.name != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7080,oprot.writeFieldBegin(NAME_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7081,oprot.writeString(this.name);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7528,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7538,oprot.writeFieldStop();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7539,oprot.writeStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7953,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7954,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7955,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7957,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7485,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7814,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7961,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7156,case 0: // SUCCESS
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6742,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7491,this.success = new Database();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7492,this.success.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7811,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7067,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6585,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8091,case 1: // O1
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7498,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7499,this.o1 = new NoSuchObjectException();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7500,this.o1.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6574,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7502,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6732,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8093,case 2: // O2
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7506,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7507,this.o2 = new MetaException();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7508,this.o2.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6582,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7510,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7959,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6398,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7966,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7988,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7990,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7991,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7997,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7525,if (this.isSetSuccess()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7526,oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7527,this.success.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6772,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7529,} else if (this.isSetO1()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7530,oprot.writeFieldBegin(O1_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7531,this.o1.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7532,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7533,} else if (this.isSetO2()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7534,oprot.writeFieldBegin(O2_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7535,this.o2.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8001,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7674,private BitSet __isset_bit_vector = new BitSet(2);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7709,__isset_bit_vector.clear();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7710,__isset_bit_vector.or(other.__isset_bit_vector);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7764,__isset_bit_vector.clear(__DELETEDATA_ISSET_ID);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7769,return __isset_bit_vector.get(__DELETEDATA_ISSET_ID);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7773,"__isset_bit_vector.set(__DELETEDATA_ISSET_ID, value);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7786,__isset_bit_vector.clear(__CASCADE_ISSET_ID);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7791,return __isset_bit_vector.get(__CASCADE_ISSET_ID);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7795,"__isset_bit_vector.set(__CASCADE_ISSET_ID, value);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8415,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8416,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8417,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8419,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7958,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8284,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8423,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6856,case 1: // NAME
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7963,if (field.type == org.apache.thrift.protocol.TType.STRING) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7964,this.name = iprot.readString();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6729,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7514,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6740,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7969,case 2: // DELETE_DATA
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7970,if (field.type == org.apache.thrift.protocol.TType.BOOL) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7971,this.deleteData = iprot.readBool();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7700,setDeleteDataIsSet(true);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6737,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7974,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6748,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7977,case 3: // CASCADE
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7978,if (field.type == org.apache.thrift.protocol.TType.BOOL) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7979,this.cascade = iprot.readBool();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7980,setCascadeIsSet(true);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6745,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7982,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8421,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6749,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8429,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8451,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8453,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7076,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8454,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8458,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7998,if (this.name != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7999,oprot.writeFieldBegin(NAME_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8000,oprot.writeString(this.name);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7536,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8003,oprot.writeFieldBegin(DELETE_DATA_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8004,oprot.writeBool(this.deleteData);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8008,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8006,oprot.writeFieldBegin(CASCADE_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8007,oprot.writeBool(this.cascade);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8463,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8473,oprot.writeFieldStop();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8474,oprot.writeStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8052,__isset_bit_vector = new BitSet(1);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8749,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8750,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8751,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8753,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8420,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8755,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8757,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8854,case 1: // O1
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8425,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8426,this.o1 = new NoSuchObjectException();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8427,this.o1.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8795,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8762,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6967,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6394,case 2: // O2
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8433,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8434,this.o2 = new InvalidOperationException();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8435,this.o2.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6786,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7986,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7065,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6741,case 3: // O3
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,9158,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8442,this.o3 = new MetaException();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8443,this.o3.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6794,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8437,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7333,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8765,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,9396,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8768,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8770,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8771,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8777,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8460,if (this.isSetO1()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8461,oprot.writeFieldBegin(O1_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8462,this.o1.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8781,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8464,} else if (this.isSetO2()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8465,oprot.writeFieldBegin(O2_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8466,this.o2.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8005,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8468,} else if (this.isSetO3()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8469,oprot.writeFieldBegin(O3_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8470,this.o3.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,9191,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,9749,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,9750,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,9751,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,9753,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8754,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7341,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,9757,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8758,case 1: // PATTERN
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8759,if (field.type == org.apache.thrift.protocol.TType.STRING) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8760,this.pattern = iprot.readString();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6802,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8445,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,9755,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,9783,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,9772,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,9786,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,9788,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7995,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,9789,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,9793,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8778,if (this.pattern != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8779,oprot.writeFieldBegin(PATTERN_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8780,oprot.writeString(this.pattern);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8467,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,9811,oprot.writeFieldStop();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,9812,oprot.writeStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6716,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6717,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6718,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6720,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,9136,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7349,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6724,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6858,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8449,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6752,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6754,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8775,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,9171,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6759,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6774,oprot.writeFieldStop();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6775,oprot.writeStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10530,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10531,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10532,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10534,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,9391,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10536,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10538,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,9888,case 1: // DBNAME
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10157,if (field.type == org.apache.thrift.protocol.TType.STRING) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10158,this.dbname = iprot.readString();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6964,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10544,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10554,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10163,case 2: // DB
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10540,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10165,this.db = new Database();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10166,this.db.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7062,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10556,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10761,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10555,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8766,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10558,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10560,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10561,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,9401,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10565,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10184,if (this.dbname != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10185,oprot.writeFieldBegin(DBNAME_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10186,oprot.writeString(this.dbname);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10192,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10189,if (this.db != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10190,oprot.writeFieldBegin(DB_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10191,this.db.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8471,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10576,oprot.writeFieldStop();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10577,oprot.writeStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10844,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10845,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10846,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10848,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,9754,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7496,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10852,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10952,case 1: // O1
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8441,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,11293,this.o1 = new MetaException();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,11294,this.o1.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10890,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10857,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7504,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10954,case 2: // O2
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,11284,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10549,this.o2 = new NoSuchObjectException();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10550,this.o2.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7330,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,9154,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,11127,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10860,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,9162,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10863,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10865,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10866,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10872,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10567,if (this.isSetO1()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,11324,oprot.writeFieldBegin(O1_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,11325,this.o1.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10876,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10571,} else if (this.isSetO2()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10572,oprot.writeFieldBegin(O2_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10573,this.o2.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,9187,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,11274,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,11275,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,11276,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,11278,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10152,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7512,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,11282,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7059,case 1: // NAME
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10854,if (field.type == org.apache.thrift.protocol.TType.STRING) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10855,this.name = iprot.readString();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7338,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,9166,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,11280,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7162,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,11288,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,11310,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,11312,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,9405,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,11313,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,11317,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10873,if (this.name != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10874,oprot.writeFieldBegin(NAME_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10875,oprot.writeString(this.name);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,11322,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,11332,oprot.writeFieldStop();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,11333,oprot.writeStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,11608,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,11609,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,11610,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,11612,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10535,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,11614,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,11616,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,11718,case 0: // SUCCESS
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,11618,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,11285,this.success = new Type();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,11286,this.success.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,11655,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,11622,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7806,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,11720,case 1: // O1
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,9776,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,9159,this.o1 = new MetaException();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,9160,this.o1.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7346,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,9780,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7822,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,11722,case 2: // O2
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10164,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,11301,this.o2 = new NoSuchObjectException();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,11302,this.o2.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7493,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,9784,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,11931,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,11625,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10160,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,11628,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,11630,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,11631,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,11637,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,11319,if (this.isSetSuccess()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,11320,oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,11321,this.success.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,11641,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,11323,} else if (this.isSetO1()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,9189,oprot.writeFieldBegin(O1_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,9190,this.o1.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,9805,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,11327,} else if (this.isSetO2()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,11328,oprot.writeFieldBegin(O2_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,11329,this.o2.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,9809,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12110,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12111,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12112,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12114,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10849,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7968,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12118,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12266,case 1: // TYPE
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12128,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,11619,this.type = new Type();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,11620,this.type.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7501,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,11626,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12116,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7513,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12124,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12154,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12156,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,11635,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12157,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12161,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,11638,if (this.type != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,11639,oprot.writeFieldBegin(TYPE_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,11640,this.type.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12166,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12180,oprot.writeFieldStop();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12181,oprot.writeStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,11767,private BitSet __isset_bit_vector = new BitSet(1);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,11805,__isset_bit_vector.clear();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,11806,__isset_bit_vector.or(other.__isset_bit_vector);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,11842,__isset_bit_vector.clear(__SUCCESS_ISSET_ID);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,11847,return __isset_bit_vector.get(__SUCCESS_ISSET_ID);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,11851,"__isset_bit_vector.set(__SUCCESS_ISSET_ID, value);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12460,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12461,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12462,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12464,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,11279,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12466,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12468,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12566,case 0: // SUCCESS
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12120,if (field.type == org.apache.thrift.protocol.TType.BOOL) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12121,this.success = iprot.readBool();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12638,setSuccessIsSet(true);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12506,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12473,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7976,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12568,case 1: // O1
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12911,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12129,this.o1 = new AlreadyExistsException();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12130,this.o1.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7509,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10168,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7984,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12570,case 2: // O2
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10548,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12137,this.o2 = new InvalidObjectException();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12138,this.o2.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7550,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10172,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8268,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8095,case 3: // O3
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,11292,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12145,this.o3 = new MetaException();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12146,this.o3.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7558,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10552,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8276,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12476,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10861,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12479,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12481,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12482,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12488,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12163,if (this.isSetSuccess()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12164,oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12165,oprot.writeBool(this.success);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12492,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12167,} else if (this.isSetO1()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12168,oprot.writeFieldBegin(O1_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12169,this.o1.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10187,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12171,} else if (this.isSetO2()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12172,oprot.writeFieldBegin(O2_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12173,this.o2.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10570,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12175,} else if (this.isSetO3()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12176,oprot.writeFieldBegin(O3_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12177,this.o3.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10574,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16994,__isset_bit_vector = new BitSet(1);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12893,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12894,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12895,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12897,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,11613,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8431,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12901,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12469,case 1: // TYPE
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12470,if (field.type == org.apache.thrift.protocol.TType.STRING) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12471,this.type = iprot.readString();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7566,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,11296,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12899,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7632,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12907,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12929,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12931,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10177,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12932,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12936,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12489,if (this.type != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12490,oprot.writeFieldBegin(TYPE_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12491,oprot.writeString(this.type);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12941,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12951,oprot.writeFieldStop();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12952,oprot.writeStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12613,private BitSet __isset_bit_vector = new BitSet(1);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12647,__isset_bit_vector.clear();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12648,__isset_bit_vector.or(other.__isset_bit_vector);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12680,__isset_bit_vector.clear(__SUCCESS_ISSET_ID);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12685,return __isset_bit_vector.get(__SUCCESS_ISSET_ID);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12689,"__isset_bit_vector.set(__SUCCESS_ISSET_ID, value);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,13223,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,13224,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,13225,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,13227,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12115,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,13229,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,13231,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,13326,case 0: // SUCCESS
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12903,if (field.type == org.apache.thrift.protocol.TType.BOOL) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12904,this.success = iprot.readBool();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,11795,setSuccessIsSet(true);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7803,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,13236,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8439,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14143,case 1: // O1
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12919,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12912,this.o1 = new MetaException();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12913,this.o1.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7819,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,11304,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8447,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14145,case 2: // O2
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,11300,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12920,this.o2 = new NoSuchObjectException();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12921,this.o2.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7965,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,11308,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,13646,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,13239,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,13644,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,13242,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,13244,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,13245,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,13251,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,13659,if (this.isSetSuccess()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,13660,oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12940,oprot.writeBool(this.success);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,13255,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,9188,} else if (this.isSetO1()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,9807,oprot.writeFieldBegin(O1_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,9808,this.o1.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,11326,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,13671,} else if (this.isSetO2()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,13672,oprot.writeFieldBegin(O2_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,13673,this.o2.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,11330,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,21226,__isset_bit_vector = new BitSet(1);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14550,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14551,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14552,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14554,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12465,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8666,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14558,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7962,case 1: // NAME
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14022,if (field.type == org.apache.thrift.protocol.TType.STRING) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,13234,this.name = iprot.readString();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7973,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12132,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8764,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7985,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14574,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14604,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14606,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10181,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14607,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14611,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,13252,if (this.name != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,13253,oprot.writeFieldBegin(NAME_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,13254,oprot.writeString(this.name);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14056,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14637,oprot.writeFieldStop();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14638,oprot.writeStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14989,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14990,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14991,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14993,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12898,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14882,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14997,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,13753,case 1: // DB_NAME
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,13233,if (field.type == org.apache.thrift.protocol.TType.STRING) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14023,this.db_name = iprot.readString();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14879,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14602,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,9016,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,13755,case 2: // TABLE_NAME
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14999,if (field.type == org.apache.thrift.protocol.TType.STRING) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14030,this.table_name = iprot.readString();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7981,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12140,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,9024,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15012,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12148,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15015,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15017,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15018,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10870,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15024,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14048,if (this.db_name != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14049,oprot.writeFieldBegin(DB_NAME_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14050,oprot.writeString(this.db_name);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12170,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14053,if (this.table_name != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14054,oprot.writeFieldBegin(TABLE_NAME_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14055,oprot.writeString(this.table_name);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12174,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7084,oprot.writeFieldStop();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7085,oprot.writeStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15898,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15899,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15900,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15902,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,13228,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15561,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15906,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14021,case 1: // DB_NAME
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14029,if (field.type == org.apache.thrift.protocol.TType.STRING) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15000,this.db_name = iprot.readString();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15945,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15559,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,9137,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15005,case 2: // TABLE_NAME
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15006,if (field.type == org.apache.thrift.protocol.TType.STRING) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15007,this.table_name = iprot.readString();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8021,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12152,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,9156,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8097,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12477,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,9168,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,9170,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12486,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,13249,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,9175,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15025,if (this.db_name != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15026,oprot.writeFieldBegin(DB_NAME_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15027,oprot.writeString(this.db_name);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12178,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15030,if (this.table_name != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15031,oprot.writeFieldBegin(TABLE_NAME_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15032,oprot.writeString(this.table_name);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12945,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8009,oprot.writeFieldStop();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8010,oprot.writeStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16397,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16398,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16399,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16401,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,13615,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,9164,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16405,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15907,case 1: // TBL
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16407,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15909,this.tbl = new Table();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15910,this.tbl.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16479,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15916,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16403,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8448,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16411,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16441,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16443,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15925,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16444,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16448,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15928,if (this.tbl != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15929,oprot.writeFieldBegin(TBL_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15930,this.tbl.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16453,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16467,oprot.writeFieldStop();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16468,oprot.writeStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16890,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16891,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16892,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16894,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14017,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16751,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16898,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,17030,case 1: // O1
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12136,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16409,this.o1.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16748,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12915,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,9392,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6733,case 2: // O2
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12144,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16417,this.o2.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8265,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12923,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,9634,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8440,case 3: // O3
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,13640,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16424,this.o3 = new MetaException();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16425,this.o3.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8273,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12927,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,9642,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16014,case 4: // O4
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14578,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16433,this.o4.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8281,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,13240,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,9774,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16921,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16910,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16924,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,9400,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,13653,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,9407,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16450,if (this.isSetO1()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16451,oprot.writeFieldBegin(O1_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16452,this.o1.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12949,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16454,} else if (this.isSetO2()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16455,oprot.writeFieldBegin(O2_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16456,this.o2.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,13670,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16458,} else if (this.isSetO3()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16459,oprot.writeFieldBegin(O3_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16460,this.o3.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,13674,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16462,} else if (this.isSetO4()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16463,oprot.writeFieldBegin(O4_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16464,this.o4.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14051,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,17671,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,17672,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,17673,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,17675,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14555,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,17677,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,17679,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,17796,case 1: // O1
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14586,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16408,this.o1 = new AlreadyExistsException();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,17301,this.o1.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,17729,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,17684,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,9782,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7505,case 2: // O2
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14594,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16416,this.o2 = new InvalidObjectException();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,13642,this.o2.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8428,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,13636,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10032,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,11724,case 3: // O3
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15555,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,17308,this.o3 = new MetaException();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,17309,this.o3.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8436,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,13648,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10040,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16430,case 4: // O4
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,18100,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16432,this.o4 = new NoSuchObjectException();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8444,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14025,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,18320,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,17694,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,18096,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,17697,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,17699,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,17700,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,17706,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,17326,if (this.isSetO1()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,17327,oprot.writeFieldBegin(O1_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,17328,this.o1.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,17710,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12946,} else if (this.isSetO2()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12947,oprot.writeFieldBegin(O2_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12948,this.o2.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14623,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,17330,} else if (this.isSetO3()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,17331,oprot.writeFieldBegin(O3_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,17332,this.o3.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14627,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,18133,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16610,private BitSet __isset_bit_vector = new BitSet(1);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16644,__isset_bit_vector.clear();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16645,__isset_bit_vector.or(other.__isset_bit_vector);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16723,__isset_bit_vector.clear(__DELETEDATA_ISSET_ID);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16728,return __isset_bit_vector.get(__DELETEDATA_ISSET_ID);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16732,"__isset_bit_vector.set(__DELETEDATA_ISSET_ID, value);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,18785,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,18786,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,18787,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,18789,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14994,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10153,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,18793,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10156,case 1: // DBNAME
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,17681,if (field.type == org.apache.thrift.protocol.TType.STRING) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,19194,this.dbname = iprot.readString();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8485,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14032,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10162,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16906,case 2: // NAME
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,19193,if (field.type == org.apache.thrift.protocol.TType.STRING) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16908,this.name = iprot.readString();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8493,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14036,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10170,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16913,case 3: // DELETE_DATA
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16914,if (field.type == org.apache.thrift.protocol.TType.BOOL) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16915,this.deleteData = iprot.readBool();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7760,setDeleteDataIsSet(true);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,19241,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14582,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,18670,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,18510,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,18808,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,18822,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,18824,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14041,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,18825,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,18829,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,19219,if (this.dbname != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,19220,oprot.writeFieldBegin(DBNAME_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,19221,oprot.writeString(this.dbname);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14631,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16939,if (this.name != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16940,oprot.writeFieldBegin(NAME_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16941,oprot.writeString(this.name);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14635,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16944,oprot.writeFieldBegin(DELETE_DATA_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16945,oprot.writeBool(this.deleteData);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,18841,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,18847,oprot.writeFieldStop();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,18848,oprot.writeStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,28130,__isset_bit_vector = new BitSet(1);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,19183,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,19184,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,19185,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,19187,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15532,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,19068,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,19191,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,19311,case 1: // O1
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,18812,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,17300,this.o1 = new NoSuchObjectException();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,18814,this.o1.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8501,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,19196,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10415,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,17306,case 2: // O3
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,19651,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24327,this.o3 = new MetaException();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14596,this.o3.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8663,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14590,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,19639,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,18928,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,19655,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,19209,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,19211,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,19212,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,19218,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22623,if (this.isSetO1()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,18843,oprot.writeFieldBegin(O1_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,18844,this.o1.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,19222,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14632,} else if (this.isSetO3()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14633,oprot.writeFieldBegin(O3_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14634,this.o3.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15028,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,20055,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,20056,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,20057,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,20059,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15903,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10423,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,20063,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14730,case 1: // DB_NAME
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16900,if (field.type == org.apache.thrift.protocol.TType.STRING) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,18414,this.db_name = iprot.readString();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8761,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14598,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10546,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,17687,case 2: // PATTERN
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16907,if (field.type == org.apache.thrift.protocol.TType.STRING) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,17689,this.pattern = iprot.readString();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,19937,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15002,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,19940,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8557,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,20068,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,20091,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,20093,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14045,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,20094,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,20100,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,18432,if (this.db_name != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,18433,oprot.writeFieldBegin(DB_NAME_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,18434,oprot.writeString(this.db_name);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15033,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,17712,if (this.pattern != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,17713,oprot.writeFieldBegin(PATTERN_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,17714,oprot.writeString(this.pattern);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,20104,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,20118,oprot.writeFieldStop();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,20119,oprot.writeStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,9131,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,9132,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,9133,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,9135,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16402,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10850,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,9139,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14998,case 1: // DB_NAME
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,17688,if (field.type == org.apache.thrift.protocol.TType.STRING) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,17682,this.db_name = iprot.readString();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,9013,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15009,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10859,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8856,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15013,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,9398,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10176,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15022,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15584,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10183,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,17707,if (this.db_name != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,17708,oprot.writeFieldBegin(DB_NAME_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,17709,oprot.writeString(this.db_name);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15600,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8783,oprot.writeFieldStop();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8784,oprot.writeStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,21122,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,21123,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,21124,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,21126,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16895,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,11135,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,21130,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16563,case 1: // DBNAME
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,18413,if (field.type == org.apache.thrift.protocol.TType.STRING) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,20066,this.dbname = iprot.readString();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,21707,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15551,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,11143,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,18926,case 2: // TBL_NAME
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,19200,if (field.type == org.apache.thrift.protocol.TType.STRING) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,19201,this.tbl_name = iprot.readString();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,20988,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15567,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,20991,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,21727,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,21150,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,21156,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,21158,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15921,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,21159,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,21165,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,20101,if (this.dbname != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,20102,oprot.writeFieldBegin(DBNAME_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,20103,oprot.writeString(this.dbname);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15604,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,19224,if (this.tbl_name != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,19225,oprot.writeFieldBegin(TBL_NAME_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,19226,oprot.writeString(this.tbl_name);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,21174,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,21179,oprot.writeFieldStop();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,21180,oprot.writeStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,21677,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,21678,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,21679,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,21681,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,17294,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,11290,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,21685,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7489,case 0: // SUCCESS
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15563,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,19644,this.success = new Table();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,19645,this.success.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,9021,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,21700,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,11298,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6392,case 1: // O1
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15571,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,9777,this.o1 = new MetaException();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,21706,this.o1.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,21495,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15575,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,11306,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8432,case 2: // O2
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,21704,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,19660,this.o2 = new NoSuchObjectException();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,19661,this.o2.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,9153,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15579,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,11525,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,21865,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22196,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,21730,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,21732,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,21733,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,21737,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,21739,if (this.isSetSuccess()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,21740,oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,19680,this.success.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,21749,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,9806,} else if (this.isSetO1()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10568,oprot.writeFieldBegin(O1_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10569,this.o1.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15608,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,19686,} else if (this.isSetO2()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,19687,oprot.writeFieldBegin(O2_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,19688,this.o2.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15612,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,20840,private BitSet __isset_bit_vector = new BitSet(1);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,20876,__isset_bit_vector.clear();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,20877,__isset_bit_vector.or(other.__isset_bit_vector);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,20955,__isset_bit_vector.clear(__MAX_TABLES_ISSET_ID);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,20960,return __isset_bit_vector.get(__MAX_TABLES_ISSET_ID);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,20964,"__isset_bit_vector.set(__MAX_TABLES_ISSET_ID, value);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23399,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23400,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23401,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23403,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,17676,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,11624,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23407,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16899,case 1: // DBNAME
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,20065,if (field.type == org.apache.thrift.protocol.TType.STRING) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16901,this.dbname = iprot.readString();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23489,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23413,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,11939,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,21138,case 2: // FILTER
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,21132,if (field.type == org.apache.thrift.protocol.TType.STRING) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,21140,this.filter = iprot.readString();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,9161,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15912,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,19948,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,21145,case 3: // MAX_TABLES
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,21146,if (field.type == org.apache.thrift.protocol.TType.I16) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,21147,this.max_tables = iprot.readI16();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,21148,setMax_tablesIsSet(true);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,9205,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16419,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,11947,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23440,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16427,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23443,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23445,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23446,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16927,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23450,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16934,if (this.dbname != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16935,oprot.writeFieldBegin(DBNAME_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16936,oprot.writeString(this.dbname);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15931,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,21171,if (this.filter != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,21172,oprot.writeFieldBegin(FILTER_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,21173,oprot.writeString(this.filter);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16457,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,21176,oprot.writeFieldBegin(MAX_TABLES_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,21177,oprot.writeI16(this.max_tables);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16461,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,9193,oprot.writeFieldStop();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,9194,oprot.writeStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,32178,__isset_bit_vector = new BitSet(1);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23773,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23774,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23775,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23777,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,18078,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,11955,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23781,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,18924,case 1: // DBNAME
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,21139,if (field.type == org.apache.thrift.protocol.TType.STRING) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,21133,this.dbname = iprot.readString();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,9213,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23797,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12126,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,19199,case 2: // TBL_NAME
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24808,if (field.type == org.apache.thrift.protocol.TType.STRING) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24816,this.tbl_name = iprot.readString();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,9631,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16435,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12134,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22206,case 3: // NEW_TBL
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15908,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22208,this.new_tbl = new Table();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22209,this.new_tbl.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,9639,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16439,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12142,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23908,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16903,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23803,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23805,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23806,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16931,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23812,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,21166,if (this.dbname != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,21167,oprot.writeFieldBegin(DBNAME_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,21168,oprot.writeString(this.dbname);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23823,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24856,if (this.tbl_name != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24857,oprot.writeFieldBegin(TBL_NAME_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24858,oprot.writeString(this.tbl_name);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16465,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22237,if (this.new_tbl != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22238,oprot.writeFieldBegin(NEW_TBL_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22239,this.new_tbl.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16937,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23825,oprot.writeFieldStop();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23826,oprot.writeStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24292,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24293,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24294,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24296,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,18408,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12150,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24300,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24309,case 1: // O1
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24310,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22597,this.o1 = new InvalidOperationException();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,9778,this.o1.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24378,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24306,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12377,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24317,case 2: // O2
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16415,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,27496,this.o2 = new MetaException();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14588,this.o2.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,9771,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16918,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12475,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24333,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16922,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24336,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24338,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24339,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24343,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,42153,if (this.isSetO1()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12943,oprot.writeFieldBegin(O1_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12944,this.o1.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24348,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14628,} else if (this.isSetO2()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14629,oprot.writeFieldBegin(O2_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14630,this.o2.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16942,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,9386,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,9387,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,9388,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,9390,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,18790,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12746,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,9394,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6725,case 1: // O1
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16423,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,42127,this.o1 = new InvalidOperationException();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,25373,this.o1.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,9779,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,17303,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12754,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10273,case 2: // O2
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16431,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,13641,this.o2 = new MetaException();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,25381,this.o2.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,25435,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,17311,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,25359,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,9165,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,17315,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10174,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,13652,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,17320,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,13657,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,45649,if (this.isSetO1()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,25411,oprot.writeFieldBegin(O1_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,25412,this.o1.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16946,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,25414,} else if (this.isSetO2()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,25415,oprot.writeFieldBegin(O2_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,25416,this.o2.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,17329,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,25843,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,25844,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,25845,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,25847,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,19188,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12762,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,25851,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22909,case 1: // NEW_PART
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,17299,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41718,this.new_part = new Partition();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41719,this.new_part.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,9823,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,25856,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12909,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,25525,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,17691,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,25876,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,25878,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,25879,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,17704,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,25885,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41759,if (this.new_part != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41760,oprot.writeFieldBegin(NEW_PART_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41761,this.new_part.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,25889,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,25901,oprot.writeFieldStop();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,25902,oprot.writeStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10147,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10148,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10149,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10151,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,19638,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12917,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10155,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,25992,case 0: // SUCCESS
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,17307,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,25364,this.success = new Partition();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,25365,this.success.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,9831,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,17695,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12925,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,25994,case 1: // O1
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,19643,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23418,this.o1 = new InvalidObjectException();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,26401,this.o1.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10029,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,18104,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,13140,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,25996,case 2: // O2
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,19659,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23426,this.o2 = new AlreadyExistsException();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,26409,this.o2.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10037,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,18108,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,13238,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12143,case 3: // O3
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,20638,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23434,this.o3 = new MetaException();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,25389,this.o3.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10159,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,18416,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,26387,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,26422,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,18420,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,13650,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14040,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,18113,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14047,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,25406,if (this.isSetSuccess()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,25407,oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,25408,this.success.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,17333,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,25410,} else if (this.isSetO1()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,26439,oprot.writeFieldBegin(O1_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,26440,this.o1.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,17715,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,26442,} else if (this.isSetO2()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,26443,oprot.writeFieldBegin(O2_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,26444,this.o2.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,18129,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,25418,} else if (this.isSetO3()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,25419,oprot.writeFieldBegin(O3_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,25420,this.o3.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,18435,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,27469,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,27470,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,27471,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,27473,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,20060,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,13495,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,27477,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8852,case 0: // SUCCESS
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,20646,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23410,this.success = new Partition();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23411,this.success.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10167,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,27483,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,13503,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7497,case 1: // O1
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,20654,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24311,this.o1 = new InvalidObjectException();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,28516,this.o1.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,28032,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,18816,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,13616,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10547,case 2: // O2
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,21712,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24319,this.o2 = new AlreadyExistsException();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,28524,this.o2.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,28040,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,18820,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,13638,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14147,case 3: // O3
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,21720,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,25388,this.o3 = new MetaException();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15573,this.o3.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10206,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,19203,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,13897,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,9265,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,19207,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,27505,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,27507,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,27508,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,27512,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,28541,if (this.isSetSuccess()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,28542,oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23454,this.success.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,18845,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,28545,} else if (this.isSetO1()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,28546,oprot.writeFieldBegin(O1_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,28547,this.o1.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,19227,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,28549,} else if (this.isSetO2()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,28550,oprot.writeFieldBegin(O2_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,28551,this.o2.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,19681,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15609,} else if (this.isSetO3()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15610,oprot.writeFieldBegin(O3_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15611,this.o3.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,19685,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,26599,private BitSet __isset_bit_vector = new BitSet(1);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,26638,__isset_bit_vector.clear();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,26639,__isset_bit_vector.or(other.__isset_bit_vector);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,27256,__isset_bit_vector.clear(__SUCCESS_ISSET_ID);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,27261,return __isset_bit_vector.get(__SUCCESS_ISSET_ID);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,27265,"__isset_bit_vector.set(__SUCCESS_ISSET_ID, value);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,28496,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,28497,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,28498,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,28500,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,20615,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,28835,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,28504,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,9140,case 0: // SUCCESS
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24302,if (field.type == org.apache.thrift.protocol.TType.I32) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24303,this.success = iprot.readI32();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,11838,setSuccessIsSet(true);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10214,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,28510,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,13905,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8424,case 1: // O1
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22207,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,25372,this.o1 = new InvalidObjectException();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10542,this.o1.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10412,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,19647,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14018,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,11299,case 2: // O2
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,28514,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,25380,this.o2 = new AlreadyExistsException();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15565,this.o2.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10420,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,19663,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14027,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14593,case 3: // O3
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22596,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,26416,this.o3 = new MetaException();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,20656,this.o3.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10543,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,19667,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14034,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,28529,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,20085,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,28532,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,28534,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,28535,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,28539,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,9177,if (this.isSetSuccess()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,9178,oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24347,oprot.writeI32(this.success);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,28544,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12942,} else if (this.isSetO1()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14625,oprot.writeFieldBegin(O1_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14626,this.o1.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,19689,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15605,} else if (this.isSetO2()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15606,oprot.writeFieldBegin(O2_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15607,this.o2.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,20116,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,20692,} else if (this.isSetO3()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,20693,oprot.writeFieldBegin(O3_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,20694,this.o3.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,20683,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,33370,__isset_bit_vector = new BitSet(1);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,28982,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,28983,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,28984,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,28986,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,21127,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14371,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,28990,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,29145,case 0: // SUCCESS
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22604,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,29480,this.success = new Partition();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,29481,this.success.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10551,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,28995,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14379,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,29147,case 1: // O1
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22910,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,26400,this.o1 = new InvalidObjectException();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,29489,this.o1.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10588,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,20089,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14387,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,29149,case 2: // O2
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23409,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,26408,this.o2 = new AlreadyExistsException();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,29497,this.o2.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10596,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,20634,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14395,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15124,case 3: // O3
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,29479,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,21722,this.o3.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10758,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,20642,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,29322,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,9395,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,20650,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,29025,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,29027,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,29028,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,29034,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,29514,if (this.isSetSuccess()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,29515,oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,29516,this.success.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,29038,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,29518,} else if (this.isSetO1()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,29519,oprot.writeFieldBegin(O1_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,29520,this.o1.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,20687,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,29522,} else if (this.isSetO2()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,29523,oprot.writeFieldBegin(O2_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,29524,this.o2.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,20691,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,21758,} else if (this.isSetO3()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,21759,oprot.writeFieldBegin(O3_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,21760,this.o3.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,20695,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,29469,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,29470,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,29471,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,29473,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,21682,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,30512,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,29477,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,29621,case 1: // DB_NAME
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22193,if (field.type == org.apache.thrift.protocol.TType.STRING) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,30126,this.db_name = iprot.readString();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10856,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,29483,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14556,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,29623,case 2: // TBL_NAME
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22200,if (field.type == org.apache.thrift.protocol.TType.STRING) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,30133,this.tbl_name = iprot.readString();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,11124,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,20658,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14576,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,25523,case 3: // PART_NAME
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,30125,if (field.type == org.apache.thrift.protocol.TType.STRING) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,25868,this.part_name = iprot.readString();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,11132,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,20662,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,29904,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,30179,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,21135,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,29505,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,29507,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,29508,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,18425,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,29512,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,30192,if (this.db_name != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,30193,oprot.writeFieldBegin(DB_NAME_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,30194,oprot.writeString(this.db_name);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,29517,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,30197,if (this.tbl_name != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,30198,oprot.writeFieldBegin(TBL_NAME_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,30199,oprot.writeString(this.tbl_name);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,21169,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,25896,if (this.part_name != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,25897,oprot.writeFieldBegin(PART_NAME_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,25898,oprot.writeString(this.part_name);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,21178,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,29527,oprot.writeFieldStop();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,29528,oprot.writeStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,30659,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,30660,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,30661,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,30663,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22188,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14584,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,30667,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,9470,case 0: // SUCCESS
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23417,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,26392,this.success = new Partition();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,26393,this.success.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,30979,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,31142,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,30982,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,9157,case 1: // O1
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23425,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14580,this.o1.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,11140,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,21142,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14592,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12135,case 2: // O2
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23433,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,20648,this.o2.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,11287,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,21154,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14600,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15570,case 3: // O3
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24318,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23435,this.o3.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,11295,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,21708,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14874,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,30811,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,21716,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,31162,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,31164,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,31165,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,31171,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,9795,if (this.isSetSuccess()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,9796,oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,26436,this.success.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,21753,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14624,} else if (this.isSetO1()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15602,oprot.writeFieldBegin(O1_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15603,this.o1.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,30707,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,20688,} else if (this.isSetO2()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,20689,oprot.writeFieldBegin(O2_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,20690,this.o2.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,21757,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23464,} else if (this.isSetO3()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23465,oprot.writeFieldBegin(O3_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23466,this.o3.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,21761,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23949,private BitSet __isset_bit_vector = new BitSet(1);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23987,__isset_bit_vector.clear();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23988,__isset_bit_vector.or(other.__isset_bit_vector);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,26763,__isset_bit_vector.clear(__DELETEDATA_ISSET_ID);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,26768,return __isset_bit_vector.get(__DELETEDATA_ISSET_ID);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,26772,"__isset_bit_vector.set(__DELETEDATA_ISSET_ID, value);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,27103,__isset_bit_vector = new BitSet(1);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,31792,private BitSet __isset_bit_vector = new BitSet(1);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,31828,__isset_bit_vector.clear();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,31829,__isset_bit_vector.or(other.__isset_bit_vector);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24024,__isset_bit_vector.clear(__SUCCESS_ISSET_ID);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24029,return __isset_bit_vector.get(__SUCCESS_ISSET_ID);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24033,"__isset_bit_vector.set(__SUCCESS_ISSET_ID, value);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,31599,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,31600,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,31601,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,31603,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22591,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,31452,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,31607,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,31275,case 0: // SUCCESS
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,27003,if (field.type == org.apache.thrift.protocol.TType.BOOL) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,27480,this.success = iprot.readBool();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12122,setSuccessIsSet(true);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,31449,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,31613,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14995,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,31277,case 1: // O1
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,31617,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,27488,this.o1 = new NoSuchObjectException();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,31619,this.o1.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,11303,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,21724,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15004,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,31279,case 2: // O2
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,32589,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,32598,this.o2 = new MetaException();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,31627,this.o2.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,11344,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,21728,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15011,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,9474,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22203,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14038,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15583,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,31638,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,31642,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,31644,if (this.isSetSuccess()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,31645,oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,27516,oprot.writeBool(this.success);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,31647,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,31648,} else if (this.isSetO1()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,31649,oprot.writeFieldBegin(O1_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,31650,this.o1.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22230,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,31652,} else if (this.isSetO2()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,31653,oprot.writeFieldBegin(O2_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,31654,this.o2.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22235,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,35364,__isset_bit_vector = new BitSet(1);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,27189,private BitSet __isset_bit_vector = new BitSet(1);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,27223,__isset_bit_vector.clear();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,27224,__isset_bit_vector.or(other.__isset_bit_vector);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,27807,__isset_bit_vector.clear(__DELETEDATA_ISSET_ID);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,27812,return __isset_bit_vector.get(__DELETEDATA_ISSET_ID);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,27816,"__isset_bit_vector.set(__DELETEDATA_ISSET_ID, value);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,32074,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,32075,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,32076,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,32078,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22905,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,28502,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,32082,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,32083,case 1: // DB_NAME
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24815,if (field.type == org.apache.thrift.protocol.TType.STRING) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,32085,this.db_name = iprot.readString();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,31924,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,32585,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15348,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,32090,case 2: // TBL_NAME
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,25853,if (field.type == org.apache.thrift.protocol.TType.STRING) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,32092,this.tbl_name = iprot.readString();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,11352,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22211,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15356,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,25866,case 3: // PART_NAME
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,32084,if (field.type == org.apache.thrift.protocol.TType.STRING) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,28031,this.part_name = iprot.readString();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,11360,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22215,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15364,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,26556,case 4: // DELETE_DATA
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,27479,if (field.type == org.apache.thrift.protocol.TType.BOOL) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,27004,this.deleteData = iprot.readBool();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7972,setDeleteDataIsSet(true);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,11522,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22600,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15372,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,32604,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,32087,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,32108,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,32110,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,32610,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,32111,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,32117,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,32118,if (this.db_name != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,32119,oprot.writeFieldBegin(DB_NAME_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,32120,oprot.writeString(this.db_name);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,32626,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,32123,if (this.tbl_name != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,32124,oprot.writeFieldBegin(TBL_NAME_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,32125,oprot.writeString(this.tbl_name);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22240,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,28067,if (this.part_name != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,28068,oprot.writeFieldBegin(PART_NAME_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,28069,oprot.writeString(this.part_name);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22626,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,27045,oprot.writeFieldBegin(DELETE_DATA_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,27046,oprot.writeBool(this.deleteData);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,32121,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,32131,oprot.writeFieldStop();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,32132,oprot.writeStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,36681,__isset_bit_vector = new BitSet(1);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,27663,private BitSet __isset_bit_vector = new BitSet(1);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,27701,__isset_bit_vector.clear();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,27702,__isset_bit_vector.or(other.__isset_bit_vector);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,28283,__isset_bit_vector.clear(__SUCCESS_ISSET_ID);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,28288,return __isset_bit_vector.get(__SUCCESS_ISSET_ID);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,28292,"__isset_bit_vector.set(__SUCCESS_ISSET_ID, value);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,13610,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,13611,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,13612,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,13614,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23404,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15533,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,13618,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,9758,case 0: // SUCCESS
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,28037,if (field.type == org.apache.thrift.protocol.TType.BOOL) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,28507,this.success = iprot.readBool();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12676,setSuccessIsSet(true);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,11621,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,33222,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15553,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,9472,case 1: // O1
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24326,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,51917,this.o1 = new NoSuchObjectException();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15557,this.o1.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,11928,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22608,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15569,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12918,case 2: // O2
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,25363,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22605,this.o2 = new MetaException();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,21714,this.o2.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,11936,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22612,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15577,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,9892,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22914,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15581,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15920,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,18429,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15588,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12938,if (this.isSetSuccess()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12939,oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,28543,oprot.writeBool(this.success);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22630,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15601,} else if (this.isSetO1()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,18131,oprot.writeFieldBegin(O1_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,18132,this.o1.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22933,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,21754,} else if (this.isSetO2()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,21755,oprot.writeFieldBegin(O2_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,21756,this.o2.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23455,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,37785,__isset_bit_vector = new BitSet(1);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,33209,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,33210,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,33211,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,33213,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23778,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15815,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,33217,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,33409,case 0: // SUCCESS
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,25371,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,30670,this.success = new Partition();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,30671,this.success.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,11944,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22918,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15904,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,9775,case 1: // O1
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,25379,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,29488,this.o1 = new MetaException();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,18102,this.o1.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,11952,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23421,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15914,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14585,case 2: // O2
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,33789,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,29496,this.o2 = new NoSuchObjectException();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,33791,this.o2.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,34095,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23429,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,33614,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,34276,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,33785,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,33267,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,33269,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,33270,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,33276,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,33808,if (this.isSetSuccess()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,33809,oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,30706,this.success.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,33280,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,18130,} else if (this.isSetO1()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,19683,oprot.writeFieldBegin(O1_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,19684,this.o1.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23459,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,33823,} else if (this.isSetO2()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,33824,oprot.writeFieldBegin(O2_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,33825,this.o2.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,33818,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,34664,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,34665,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,34666,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,34668,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24297,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16218,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,34672,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,34673,case 0: // SUCCESS
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,34691,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,31611,this.success.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12123,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,34687,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16226,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10271,case 1: // O1
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,25387,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10541,this.o1 = new MetaException();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,19653,this.o1.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12131,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23437,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16234,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15122,case 2: // O2
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,26391,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,30686,this.o2 = new NoSuchObjectException();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,34693,this.o2.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12139,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23441,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16242,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,34698,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23801,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,34701,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,34703,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,34704,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,34708,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,34710,if (this.isSetSuccess()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,34711,oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,31646,this.success.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,34720,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,18842,} else if (this.isSetO1()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,20685,oprot.writeFieldBegin(O1_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,20686,this.o1.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23463,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,34721,} else if (this.isSetO2()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,34722,oprot.writeFieldBegin(O2_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,34723,this.o2.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23467,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,35223,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,35224,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,35225,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,35227,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24803,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,35229,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,35231,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,35232,case 1: // DB_NAME
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,35233,if (field.type == org.apache.thrift.protocol.TType.STRING) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,35234,this.db_name = iprot.readString();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,35321,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,35236,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16413,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,35239,case 2: // TBL_NAME
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,25860,if (field.type == org.apache.thrift.protocol.TType.STRING) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,35241,this.tbl_name = iprot.readString();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12147,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24314,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16421,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,31152,case 3: // PART_NAME
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,36493,if (field.type == org.apache.thrift.protocol.TType.STRING) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,31154,this.part_name = iprot.readString();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12196,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24322,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16429,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,35271,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24330,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,35274,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,35276,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,35277,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,19216,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,35283,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,35284,if (this.db_name != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,35285,oprot.writeFieldBegin(DB_NAME_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,35286,oprot.writeString(this.db_name);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,35287,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,35289,if (this.tbl_name != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,35290,oprot.writeFieldBegin(TBL_NAME_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,35291,oprot.writeString(this.tbl_name);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24352,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,31182,if (this.part_name != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,31183,oprot.writeFieldBegin(PART_NAME_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,31184,oprot.writeString(this.part_name);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24356,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,35309,oprot.writeFieldStop();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,35310,oprot.writeStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,35747,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,35748,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,35749,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,35751,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,25358,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,35753,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,35755,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,35756,case 0: // SUCCESS
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,26399,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,31610,this.success = new Partition();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,50938,this.success.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,36527,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,35771,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,36530,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,35774,case 1: // O1
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,35775,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14579,this.o1 = new MetaException();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,35777,this.o1.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12204,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24334,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16437,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,35782,case 2: // O2
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,37092,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,31626,this.o2 = new NoSuchObjectException();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,35785,this.o2.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,35834,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24811,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16743,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,35790,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24818,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,35793,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,35795,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,35796,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,35800,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,35802,if (this.isSetSuccess()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,35803,oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,50973,this.success.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24360,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,35813,} else if (this.isSetO1()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,35814,oprot.writeFieldBegin(O1_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,35815,this.o1.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,35812,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,35817,} else if (this.isSetO2()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,35818,oprot.writeFieldBegin(O2_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,35819,this.o2.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24854,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,33963,private BitSet __isset_bit_vector = new BitSet(1);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,33999,__isset_bit_vector.clear();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,34000,__isset_bit_vector.or(other.__isset_bit_vector);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,31907,__isset_bit_vector.clear(__MAX_PARTS_ISSET_ID);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,31912,return __isset_bit_vector.get(__MAX_PARTS_ISSET_ID);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,31916,"__isset_bit_vector.set(__MAX_PARTS_ISSET_ID, value);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,37064,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,37065,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,37066,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,37068,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,25848,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16759,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,37072,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,37230,case 1: // DB_NAME
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,25867,if (field.type == org.apache.thrift.protocol.TType.STRING) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,37655,this.db_name = iprot.readString();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,36914,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,37088,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16896,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,37232,case 2: // TBL_NAME
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,37654,if (field.type == org.apache.thrift.protocol.TType.STRING) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,37662,this.tbl_name = iprot.readString();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12212,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24835,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16905,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,31749,case 3: // MAX_PARTS
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,32098,if (field.type == org.apache.thrift.protocol.TType.I16) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,32099,this.max_parts = iprot.readI16();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,37313,setMax_partsIsSet(true);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12374,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24839,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16912,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,36726,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,25367,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,37110,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,37112,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,37113,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,19672,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,37117,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,37705,if (this.db_name != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,37706,oprot.writeFieldBegin(DB_NAME_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,37707,oprot.writeString(this.db_name);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,36571,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,37710,if (this.tbl_name != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,37711,oprot.writeFieldBegin(TBL_NAME_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,37712,oprot.writeString(this.tbl_name);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24859,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,32128,oprot.writeFieldBegin(MAX_PARTS_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,32129,oprot.writeI16(this.max_parts);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24871,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,37139,oprot.writeFieldStop();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,37140,oprot.writeStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,34349,__isset_bit_vector = new BitSet(1);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,28216,private BitSet __isset_bit_vector = new BitSet(1);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,28250,__isset_bit_vector.clear();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,28251,__isset_bit_vector.or(other.__isset_bit_vector);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,32917,__isset_bit_vector.clear(__MAX_PARTS_ISSET_ID);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,32922,return __isset_bit_vector.get(__MAX_PARTS_ISSET_ID);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,32926,"__isset_bit_vector.set(__MAX_PARTS_ISSET_ID, value);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,38851,__isset_bit_vector = new BitSet(1);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,32781,private BitSet __isset_bit_vector = new BitSet(1);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,32826,__isset_bit_vector.clear();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,32827,__isset_bit_vector.or(other.__isset_bit_vector);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,34078,__isset_bit_vector.clear(__MAX_PARTS_ISSET_ID);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,34083,return __isset_bit_vector.get(__MAX_PARTS_ISSET_ID);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,34087,"__isset_bit_vector.set(__MAX_PARTS_ISSET_ID, value);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,38727,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,38728,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,38729,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,38731,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,26386,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16920,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,38735,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39397,case 1: // DB_NAME
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,26972,if (field.type == org.apache.thrift.protocol.TType.STRING) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39752,this.db_name = iprot.readString();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12472,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,38740,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,17174,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39399,case 2: // TBL_NAME
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39751,if (field.type == org.apache.thrift.protocol.TType.STRING) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39759,this.tbl_name = iprot.readString();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12743,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,25375,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,17182,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,34268,case 3: // MAX_PARTS
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,33233,if (field.type == org.apache.thrift.protocol.TType.I16) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,33234,this.max_parts = iprot.readI16();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,31821,setMax_partsIsSet(true);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12751,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,25383,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,17295,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39277,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,25391,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,38768,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,38770,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,38771,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,20098,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,38777,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39794,if (this.db_name != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39795,oprot.writeFieldBegin(DB_NAME_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39796,oprot.writeString(this.db_name);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,38781,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39799,if (this.tbl_name != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39800,oprot.writeFieldBegin(TBL_NAME_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39801,oprot.writeString(this.tbl_name);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,25409,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,33287,oprot.writeFieldBegin(MAX_PARTS_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,33288,oprot.writeI16(this.max_parts);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,25413,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,38796,oprot.writeFieldStop();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,38797,oprot.writeStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,49624,__isset_bit_vector = new BitSet(1);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,34858,private BitSet __isset_bit_vector = new BitSet(1);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,34899,__isset_bit_vector.clear();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,34900,__isset_bit_vector.or(other.__isset_bit_vector);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,35024,__isset_bit_vector.clear(__MAX_PARTS_ISSET_ID);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,35029,return __isset_bit_vector.get(__MAX_PARTS_ISSET_ID);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,35033,"__isset_bit_vector.set(__MAX_PARTS_ISSET_ID, value);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,51505,__isset_bit_vector = new BitSet(1);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,35972,private BitSet __isset_bit_vector = new BitSet(1);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,36022,__isset_bit_vector.clear();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,36023,__isset_bit_vector.or(other.__isset_bit_vector);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,36159,__isset_bit_vector.clear(__MAX_PARTS_ISSET_ID);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,36164,return __isset_bit_vector.get(__MAX_PARTS_ISSET_ID);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,36168,"__isset_bit_vector.set(__MAX_PARTS_ISSET_ID, value);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,52484,__isset_bit_vector = new BitSet(1);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,37279,private BitSet __isset_bit_vector = new BitSet(1);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,37320,__isset_bit_vector.clear();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,37321,__isset_bit_vector.or(other.__isset_bit_vector);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,37445,__isset_bit_vector.clear(__MAX_PARTS_ISSET_ID);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,37450,return __isset_bit_vector.get(__MAX_PARTS_ISSET_ID);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,37454,"__isset_bit_vector.set(__MAX_PARTS_ISSET_ID, value);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,38382,private BitSet __isset_bit_vector = new BitSet(1);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,38422,__isset_bit_vector.clear();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,38423,__isset_bit_vector.or(other.__isset_bit_vector);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,38528,__isset_bit_vector.clear(__MAX_PARTS_ISSET_ID);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,38533,return __isset_bit_vector.get(__MAX_PARTS_ISSET_ID);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,38537,"__isset_bit_vector.set(__MAX_PARTS_ISSET_ID, value);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,43575,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,43576,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,43577,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,43579,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,26967,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,43822,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,43583,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,17412,case 1: // DB_NAME
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,26979,if (field.type == org.apache.thrift.protocol.TType.STRING) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24809,this.db_name = iprot.readString();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12759,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,43598,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,17305,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,21861,case 2: // TBL_NAME
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,28016,if (field.type == org.apache.thrift.protocol.TType.STRING) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22201,this.tbl_name = iprot.readString();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,43917,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,25395,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,17313,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,38337,case 3: // FILTER
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,43915,if (field.type == org.apache.thrift.protocol.TType.STRING) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,38752,this.filter = iprot.readString();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12906,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,25863,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,17556,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,38757,case 4: // MAX_PARTS
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,34269,if (field.type == org.apache.thrift.protocol.TType.I16) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,38759,this.max_parts = iprot.readI16();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,38760,setMax_partsIsSet(true);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12914,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,25870,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,17564,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,43609,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,25874,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,43612,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,43614,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,43615,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,20667,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,43619,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24851,if (this.db_name != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24852,oprot.writeFieldBegin(DB_NAME_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24853,oprot.writeString(this.db_name);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,43631,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22232,if (this.tbl_name != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22233,oprot.writeFieldBegin(TBL_NAME_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22234,oprot.writeString(this.tbl_name);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,25417,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,38788,if (this.filter != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,38789,oprot.writeFieldBegin(FILTER_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,38790,oprot.writeString(this.filter);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,25421,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,38793,oprot.writeFieldBegin(MAX_PARTS_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,38794,oprot.writeI16(this.max_parts);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,25894,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,43637,oprot.writeFieldStop();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,43638,oprot.writeStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,45580,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,45581,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,45582,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,45584,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,27474,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,17686,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,45588,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,45793,case 1: // DB_NAME
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,44876,if (field.type == org.apache.thrift.protocol.TType.STRING) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,44877,this.db_name = iprot.readString();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12922,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,45594,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,17693,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,45795,case 2: // TBL_NAME
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,46225,if (field.type == org.apache.thrift.protocol.TType.STRING) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,44884,this.tbl_name = iprot.readString();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12967,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,26395,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,17958,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40415,case 3: // NEW_PART
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,45590,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40760,this.new_part = new Partition();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40761,this.new_part.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12975,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,26403,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,45337,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10171,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,26411,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,45640,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,45642,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,45643,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,21163,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,45647,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,44928,if (this.db_name != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,44929,oprot.writeFieldBegin(DB_NAME_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,44930,oprot.writeString(this.db_name);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,45652,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,44933,if (this.tbl_name != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,44934,oprot.writeFieldBegin(TBL_NAME_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,44935,oprot.writeString(this.tbl_name);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,25899,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40789,if (this.new_part != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40790,oprot.writeFieldBegin(NEW_PART_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40791,this.new_part.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,26437,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,45674,oprot.writeFieldStop();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,45675,oprot.writeStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,46215,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,46216,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,46217,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,46219,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,28011,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,17966,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,46223,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10539,case 1: // O1
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,26407,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41149,this.o1 = new InvalidOperationException();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,20640,this.o1.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,13137,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,46228,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,18079,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15562,case 2: // O2
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,26415,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,28523,this.o2 = new MetaException();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22606,this.o2.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,13235,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,26419,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,18098,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,46264,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,26423,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,46267,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,46269,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,46270,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,46276,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41175,if (this.isSetO1()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,21751,oprot.writeFieldBegin(O1_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,21752,this.o1.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,46280,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22627,} else if (this.isSetO2()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22628,oprot.writeFieldBegin(O2_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22629,this.o2.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,26441,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14012,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14013,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14014,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14016,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,28501,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,18106,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14020,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,11291,case 1: // O1
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,27487,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,47020,this.o1.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,13269,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,26975,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,18409,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16010,case 2: // O2
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,27495,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,48998,this.o2 = new MetaException();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,47028,this.o2.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,13492,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,26982,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,46725,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10275,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,26999,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15918,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16926,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22220,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15927,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,47082,oprot.writeFieldBegin(O1_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,47083,this.o1.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,26445,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,47085,} else if (this.isSetO2()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,47086,oprot.writeFieldBegin(O2_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,47087,this.o2.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,26449,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15527,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15528,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15529,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15531,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,28987,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,18418,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15535,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12127,case 1: // O1
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,28522,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22598,this.o1.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,13500,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,27007,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,18678,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16414,case 2: // O2
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,29487,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,33790,this.o2 = new MetaException();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23427,this.o2.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,13635,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,27011,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,18791,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,48175,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,27491,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,48597,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,48599,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,48600,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,48606,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22624,oprot.writeFieldBegin(O1_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22625,this.o1.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,27026,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23460,} else if (this.isSetO2()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23461,oprot.writeFieldBegin(O2_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23462,this.o2.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,27031,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,48556,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,48557,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,48558,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,48560,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,29474,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,47494,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,48564,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,47611,case 1: // O1
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,48587,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,48018,this.o1.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,47538,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,48569,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,18810,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,19313,case 2: // O2
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,47488,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,34692,this.o2 = new MetaException();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24320,this.o2.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,13643,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,27499,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,47819,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,48594,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,27503,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,17317,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,17319,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22224,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16933,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,48056,oprot.writeFieldBegin(O1_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,48057,this.o1.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,27043,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24353,} else if (this.isSetO2()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24354,oprot.writeFieldBegin(O2_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24355,this.o2.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,27047,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,47998,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,47999,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,48000,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,48002,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,30120,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,48985,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,48006,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,42507,case 1: // NAME
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,48566,if (field.type == org.apache.thrift.protocol.TType.STRING) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,42509,this.name = iprot.readString();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,49037,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,28019,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,18818,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,42514,case 2: // DEFAULT_VALUE
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,28023,if (field.type == org.apache.thrift.protocol.TType.STRING) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,42516,this.defaultValue = iprot.readString();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,48080,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,28026,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,48030,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,48039,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,48012,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,48042,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,48044,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22617,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,48045,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,48049,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,42534,if (this.name != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,42535,oprot.writeFieldBegin(NAME_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,42536,oprot.writeString(this.name);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,27517,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,42539,if (this.defaultValue != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,42540,oprot.writeFieldBegin(DEFAULT_VALUE_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,42541,oprot.writeString(this.defaultValue);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,48054,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,48068,oprot.writeFieldStop();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,48069,oprot.writeStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,17289,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,17290,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,17291,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,17293,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,30664,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,19076,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,17297,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10950,case 0: // SUCCESS
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,28030,if (field.type == org.apache.thrift.protocol.TType.STRING) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,42891,this.success = iprot.readString();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,13688,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,47062,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,48562,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,49665,case 1: // O1
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,50008,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,42898,this.o1 = new ConfigValSecurityException();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,50010,this.o1.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,13696,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,28033,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,49321,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10652,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,28041,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,18110,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,18112,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22923,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,17324,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,47077,if (this.isSetSuccess()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,47078,oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,42918,oprot.writeString(this.success);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,27521,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,47081,} else if (this.isSetO1()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23457,oprot.writeFieldBegin(O1_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23458,this.o1.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,27525,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,50456,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,50457,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,50458,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,50460,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,31134,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,50309,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,50464,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,42999,case 1: // PART_NAME
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,50466,if (field.type == org.apache.thrift.protocol.TType.STRING) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,43204,this.part_name = iprot.readString();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,13894,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,28045,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,50462,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10956,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,50469,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,50489,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,50491,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22927,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,50492,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,50498,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,43222,if (this.part_name != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,43223,oprot.writeFieldBegin(PART_NAME_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,43224,oprot.writeString(this.part_name);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,50502,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,9408,oprot.writeFieldStop();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,9409,oprot.writeStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,18073,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,18074,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,18075,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,18077,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,31604,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,19189,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,18081,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,43914,case 1: // PART_NAME
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,52390,if (field.type == org.apache.thrift.protocol.TType.STRING) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,43916,this.part_name = iprot.readString();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,13902,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,28518,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,19198,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,50959,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,28526,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,18422,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,18424,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23810,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24844,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,18117,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,43934,if (this.part_name != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,43935,oprot.writeFieldBegin(PART_NAME_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,43936,oprot.writeString(this.part_name);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,28060,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10194,oprot.writeFieldStop();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10195,oprot.writeStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,51401,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,51402,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,51403,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,51405,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,32079,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,19205,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,51409,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,51546,case 1: // O1
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,51916,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15556,this.o1 = new MetaException();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,51918,this.o1.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14024,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,51912,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,19486,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,51548,case 2: // O2
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,29495,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,47027,this.o2 = new NoSuchObjectException();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,48999,this.o2.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14031,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,28530,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,19494,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16012,case 3: // O3
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,30669,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,45607,this.o3 = new UnknownDBException();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,45608,this.o3.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,52873,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,52822,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,19502,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,45067,case 4: // O4
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,30677,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,45615,this.o4 = new UnknownTableException();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,45616,this.o4.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14070,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,29002,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,19649,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,45069,case 5: // O5
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,30685,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,45623,this.o5 = new UnknownPartitionException();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,45624,this.o5.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14078,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,29019,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,19657,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,45071,case 6: // O6
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,31609,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,45631,this.o6 = new InvalidPartitionException();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,45632,this.o6.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14368,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,29023,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,19665,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,11307,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,29491,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,52836,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,52838,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,52839,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,52843,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,49016,if (this.isSetO1()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,51955,oprot.writeFieldBegin(O1_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,51956,this.o1.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,28065,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,49020,} else if (this.isSetO2()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,49021,oprot.writeFieldBegin(O2_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,49022,this.o2.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,28070,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,45657,} else if (this.isSetO3()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,45658,oprot.writeFieldBegin(O3_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,45659,this.o3.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,52855,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,45661,} else if (this.isSetO4()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,45662,oprot.writeFieldBegin(O4_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,45663,this.o4.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,28074,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,45665,} else if (this.isSetO5()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,45666,oprot.writeFieldBegin(O5_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,45667,this.o5.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,28548,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,45669,} else if (this.isSetO6()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,45670,oprot.writeFieldBegin(O6_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,45671,this.o6.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,28552,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,46468,private BitSet __isset_bit_vector = new BitSet(1);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,46518,__isset_bit_vector.clear();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,46519,__isset_bit_vector.or(other.__isset_bit_vector);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,46567,__isset_bit_vector.clear(__SUCCESS_ISSET_ID);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,46572,return __isset_bit_vector.get(__SUCCESS_ISSET_ID);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,46576,"__isset_bit_vector.set(__SUCCESS_ISSET_ID, value);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,18403,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,18404,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,18405,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,18407,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,32566,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,20061,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,18411,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,11283,case 0: // SUCCESS
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,47010,if (field.type == org.apache.thrift.protocol.TType.BOOL) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,47011,this.success = iprot.readBool();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12905,setSuccessIsSet(true);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14376,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,29499,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,20070,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12910,case 1: // O1
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,31625,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,18101,this.o1 = new MetaException();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23419,this.o1.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14384,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,29503,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,20087,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,19658,case 2: // O2
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,32597,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,35784,this.o2 = new NoSuchObjectException();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,27497,this.o2.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14392,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,30128,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,20431,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16422,case 3: // O3
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,33781,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,47035,this.o3 = new UnknownDBException();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24328,this.o3.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14573,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,30135,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,20439,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,47041,case 4: // O4
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,35783,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,47043,this.o4 = new UnknownTableException();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,47044,this.o4.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14581,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,30152,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,20447,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,47049,case 5: // O5
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,37100,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,47051,this.o5 = new UnknownPartitionException();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,47052,this.o5.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14589,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,30159,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,20455,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,47057,case 6: // O6
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,38195,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,47059,this.o6 = new InvalidPartitionException();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,47060,this.o6.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14597,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,30176,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,20616,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,11416,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,30180,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,19669,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,19671,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24848,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,18431,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,51943,if (this.isSetSuccess()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,51944,oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,47079,oprot.writeBool(this.success);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,29043,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,51954,} else if (this.isSetO1()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24350,oprot.writeFieldBegin(O1_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24351,this.o1.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,29055,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,27522,} else if (this.isSetO2()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,27523,oprot.writeFieldBegin(O2_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,27524,this.o2.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,29521,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24357,} else if (this.isSetO3()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24358,oprot.writeFieldBegin(O3_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24359,this.o3.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,29525,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,30195,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,47097,} else if (this.isSetO5()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,47098,oprot.writeFieldBegin(O5_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,47099,this.o5.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,30200,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,47101,} else if (this.isSetO6()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,47102,oprot.writeFieldBegin(O6_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,47103,this.o6.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,30212,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,53129,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,53130,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,53131,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,53133,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,33214,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,20636,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,53137,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,47487,case 1: // NEW_INDEX
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,53139,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,47489,this.new_index = new Index();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,47490,this.new_index.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,53176,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,53143,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,20644,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,47495,case 2: // INDEX_TABLE
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,38203,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,47497,this.index_table = new Table();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,47498,this.index_table.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14649,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,30673,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,20652,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,53146,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,30681,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,53149,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,53151,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,53152,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,25400,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,53158,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,47516,if (this.new_index != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,47517,oprot.writeFieldBegin(NEW_INDEX_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,47518,this.new_index.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,53162,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,47521,if (this.index_table != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,47522,oprot.writeFieldBegin(INDEX_TABLE_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,47523,this.index_table.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,30217,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,53164,oprot.writeFieldStop();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,53165,oprot.writeStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,53495,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,53496,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,53497,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,53499,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,33758,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,53722,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,53503,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,53233,case 0: // SUCCESS
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,54188,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,48009,this.success = new Index();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,48010,this.success.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,53719,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,53509,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,20660,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,53512,case 1: // O1
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39262,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,48017,this.o1 = new InvalidObjectException();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,54190,this.o1.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14657,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,30689,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,20975,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,20205,case 2: // O2
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39270,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,48025,this.o2 = new AlreadyExistsException();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,30687,this.o2.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14665,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,30693,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,20983,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,48031,case 3: // O3
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40276,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,48033,this.o3 = new MetaException();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,48034,this.o3.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14673,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,31149,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,21128,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,53520,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,31156,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,53523,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,53525,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,53526,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,53530,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,53532,if (this.isSetSuccess()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,53533,oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,48053,this.success.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,53535,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,53536,} else if (this.isSetO1()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,54212,oprot.writeFieldBegin(O1_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,54213,this.o1.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,30229,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,30712,} else if (this.isSetO2()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,30713,oprot.writeFieldBegin(O2_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,30714,this.o2.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,30711,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,26446,} else if (this.isSetO3()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,26447,oprot.writeFieldBegin(O3_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,26448,this.o3.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,30715,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,54405,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,54406,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,54407,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,54409,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,34250,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,21137,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,54413,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,48565,case 1: // DBNAME
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,53815,if (field.type == org.apache.thrift.protocol.TType.STRING) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,48567,this.dbname = iprot.readString();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14871,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,54415,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,21144,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,48572,case 2: // BASE_TBL_NAME
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,28992,if (field.type == org.apache.thrift.protocol.TType.STRING) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,48574,this.base_tbl_name = iprot.readString();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15001,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,31160,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,21152,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,48579,case 3: // IDX_NAME
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,28999,if (field.type == org.apache.thrift.protocol.TType.STRING) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,48581,this.idx_name = iprot.readString();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15008,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,31621,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,21498,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,48586,case 4: // NEW_IDX
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,54795,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,48588,this.new_idx = new Index();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,48589,this.new_idx.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15047,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,31629,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,21506,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,55669,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,31633,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,54417,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,54419,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,54420,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,25883,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,54426,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,48607,if (this.dbname != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,48608,oprot.writeFieldBegin(DBNAME_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,48609,oprot.writeString(this.dbname);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,54824,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,48612,if (this.base_tbl_name != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,48613,oprot.writeFieldBegin(BASE_TBL_NAME_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,48614,oprot.writeString(this.base_tbl_name);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,31175,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,48617,if (this.idx_name != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,48618,oprot.writeFieldBegin(IDX_NAME_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,48619,oprot.writeString(this.idx_name);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,31180,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,48622,if (this.new_idx != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,48623,oprot.writeFieldBegin(NEW_IDX_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,48624,this.new_idx.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,31185,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,54830,oprot.writeFieldStop();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,54831,oprot.writeStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,19633,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,19634,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,19635,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,19637,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,34669,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,21514,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,19641,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14577,case 1: // O1
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40284,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,48990,this.o1 = new InvalidOperationException();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24312,this.o1.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15055,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,32094,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,21522,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,20645,case 2: // O2
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,56808,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,37101,this.o2 = new MetaException();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,32599,this.o2.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15345,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,32102,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,21683,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,11726,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,32106,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,20664,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,20666,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,26428,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,19676,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,27519,oprot.writeFieldBegin(O1_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,27520,this.o1.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,31651,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,32631,} else if (this.isSetO2()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,32632,oprot.writeFieldBegin(O2_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,32633,this.o2.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,31655,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,49157,private BitSet __isset_bit_vector = new BitSet(1);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,49195,__isset_bit_vector.clear();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,49196,__isset_bit_vector.or(other.__isset_bit_vector);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,49301,__isset_bit_vector.clear(__DELETEDATA_ISSET_ID);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,49306,return __isset_bit_vector.get(__DELETEDATA_ISSET_ID);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,49310,"__isset_bit_vector.set(__DELETEDATA_ISSET_ID, value);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,20610,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,20611,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,20612,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,20614,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,35228,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,21702,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,20618,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,17680,case 1: // DB_NAME
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,30132,if (field.type == org.apache.thrift.protocol.TType.STRING) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,25854,this.db_name = iprot.readString();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15353,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,56804,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,21710,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22199,case 2: // TBL_NAME
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,30156,if (field.type == org.apache.thrift.protocol.TType.STRING) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,25861,this.tbl_name = iprot.readString();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15361,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,32593,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,21718,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,49112,case 3: // INDEX_NAME
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,56395,if (field.type == org.apache.thrift.protocol.TType.STRING) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,49525,this.index_name = iprot.readString();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15369,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,32601,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,21726,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,49530,case 4: // DELETE_DATA
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,28506,if (field.type == org.apache.thrift.protocol.TType.BOOL) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,49532,this.deleteData = iprot.readBool();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,49533,setDeleteDataIsSet(true);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15550,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,32605,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,56238,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,55952,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,33229,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,56818,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,56820,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,56821,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,27016,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,56825,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,25886,if (this.db_name != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,25887,oprot.writeFieldBegin(DB_NAME_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,25888,oprot.writeString(this.db_name);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,56830,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,25891,if (this.tbl_name != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,25892,oprot.writeFieldBegin(TBL_NAME_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,25893,oprot.writeString(this.tbl_name);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,32126,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,49561,if (this.index_name != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,49562,oprot.writeFieldBegin(INDEX_NAME_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,49563,oprot.writeString(this.index_name);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,32130,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,49566,oprot.writeFieldBegin(DELETE_DATA_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,49567,oprot.writeBool(this.deleteData);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,32630,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,56836,oprot.writeFieldStop();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,56837,oprot.writeStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,49710,private BitSet __isset_bit_vector = new BitSet(1);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,49744,__isset_bit_vector.clear();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,49745,__isset_bit_vector.or(other.__isset_bit_vector);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,49777,__isset_bit_vector.clear(__SUCCESS_ISSET_ID);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,49782,return __isset_bit_vector.get(__SUCCESS_ISSET_ID);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,49786,"__isset_bit_vector.set(__SUCCESS_ISSET_ID, value);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,56385,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,56386,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,56387,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,56389,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,35752,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22036,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,56393,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,57303,case 0: // SUCCESS
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,49531,if (field.type == org.apache.thrift.protocol.TType.BOOL) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,50001,this.success = iprot.readBool();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23977,setSuccessIsSet(true);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15558,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,56398,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22044,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,56807,case 1: // O1
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40759,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,50009,this.o1 = new NoSuchObjectException();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,57612,this.o1.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15566,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,33237,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22052,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,21272,case 2: // O2
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,57610,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,52827,this.o2 = new MetaException();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,37102,this.o2.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15574,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,33244,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,56675,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,56415,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,33261,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,55955,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,55957,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,55958,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,55962,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,54814,if (this.isSetSuccess()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,54815,oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,50037,oprot.writeBool(this.success);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,55967,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,54825,} else if (this.isSetO1()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,57641,oprot.writeFieldBegin(O1_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,57642,this.o1.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,32634,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,37134,} else if (this.isSetO2()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,37135,oprot.writeFieldBegin(O2_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,37136,this.o2.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,33285,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,56790,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,56791,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,56792,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,56794,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,36488,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22189,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,56798,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,18209,case 1: // DB_NAME
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,31139,if (field.type == org.apache.thrift.protocol.TType.STRING) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,26973,this.db_name = iprot.readString();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15626,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,57606,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22198,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24456,case 2: // TBL_NAME
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,31146,if (field.type == org.apache.thrift.protocol.TType.STRING) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,26980,this.tbl_name = iprot.readString();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15634,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,33265,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22205,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,50479,case 3: // INDEX_NAME
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,58087,if (field.type == org.apache.thrift.protocol.TType.STRING) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,50481,this.index_name = iprot.readString();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15642,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,33777,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22213,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,57617,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,33793,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,57620,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,57622,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,57623,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,27020,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,57627,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,27023,if (this.db_name != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,27024,oprot.writeFieldBegin(DB_NAME_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,27025,oprot.writeString(this.db_name);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,57639,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,27028,if (this.tbl_name != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,27029,oprot.writeFieldBegin(TBL_NAME_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,27030,oprot.writeString(this.tbl_name);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,33289,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,50509,if (this.index_name != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,50510,oprot.writeFieldBegin(INDEX_NAME_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,50511,oprot.writeString(this.index_name);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,33293,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,57645,oprot.writeFieldStop();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,57646,oprot.writeStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22183,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22184,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22185,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22187,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,37069,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22471,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22191,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,58230,case 0: // SUCCESS
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41148,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,50937,this.success = new Index();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15650,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,33797,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22479,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15120,case 1: // O1
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41156,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,58508,this.o1 = new MetaException();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,59404,this.o1.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15812,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,34258,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22592,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,51923,case 2: // O2
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,58079,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,50953,this.o2 = new NoSuchObjectException();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,52828,this.o2.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15911,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,34265,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22602,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,58234,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,34273,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22217,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22219,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,28050,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,20671,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,58526,if (this.isSetSuccess()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,58527,oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,33305,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,59432,} else if (this.isSetO1()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,59433,oprot.writeFieldBegin(O1_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,59434,this.o1.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,33822,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,38237,} else if (this.isSetO2()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,38238,oprot.writeFieldBegin(O2_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,38239,this.o2.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,33826,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,51119,private BitSet __isset_bit_vector = new BitSet(1);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,51155,__isset_bit_vector.clear();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,51156,__isset_bit_vector.or(other.__isset_bit_vector);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,51234,__isset_bit_vector.clear(__MAX_INDEXES_ISSET_ID);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,51239,return __isset_bit_vector.get(__MAX_INDEXES_ISSET_ID);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,51243,"__isset_bit_vector.set(__MAX_INDEXES_ISSET_ID, value);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,58489,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,58490,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,58491,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,58493,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,37649,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22610,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,58497,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,18412,case 1: // DB_NAME
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,31153,if (field.type == org.apache.thrift.protocol.TType.STRING) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,28017,this.db_name = iprot.readString();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,57927,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,58503,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22817,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24814,case 2: // TBL_NAME
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,58961,if (field.type == org.apache.thrift.protocol.TType.STRING) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,28024,this.tbl_name = iprot.readString();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16215,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,34277,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22906,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,51076,case 3: // MAX_INDEXES
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,35264,if (field.type == org.apache.thrift.protocol.TType.I16) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,51426,this.max_indexes = iprot.readI16();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,51148,setMax_indexesIsSet(true);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16223,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,34695,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22916,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,58625,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,34699,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,58517,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,58519,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,58520,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,28054,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,58524,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,28057,if (this.db_name != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,28058,oprot.writeFieldBegin(DB_NAME_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,28059,oprot.writeString(this.db_name);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,58126,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,28062,if (this.tbl_name != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,28063,oprot.writeFieldBegin(TBL_NAME_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,28064,oprot.writeString(this.tbl_name);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,34292,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,51455,oprot.writeFieldBegin(MAX_INDEXES_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,51456,oprot.writeI16(this.max_indexes);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,34297,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,58535,oprot.writeFieldStop();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,58536,oprot.writeStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,59854,private BitSet __isset_bit_vector = new BitSet(1);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,59884,__isset_bit_vector.clear();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,59885,__isset_bit_vector.or(other.__isset_bit_vector);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,52213,__isset_bit_vector.clear(__MAX_INDEXES_ISSET_ID);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,52218,return __isset_bit_vector.get(__MAX_INDEXES_ISSET_ID);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,52222,"__isset_bit_vector.set(__MAX_INDEXES_ISSET_ID, value);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,59374,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,59375,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,59376,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,59378,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,38173,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23220,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,59382,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24454,case 1: // DB_NAME
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,32091,if (field.type == org.apache.thrift.protocol.TType.STRING) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,52391,this.db_name = iprot.readString();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16231,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,58083,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23228,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,25521,case 2: // TBL_NAME
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,61155,if (field.type == org.apache.thrift.protocol.TType.STRING) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,52398,this.tbl_name = iprot.readString();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16239,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,35243,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23236,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,52403,case 3: // MAX_INDEXES
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,52404,if (field.type == org.apache.thrift.protocol.TType.I16) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,52405,this.max_indexes = iprot.readI16();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,52406,setMax_indexesIsSet(true);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,59953,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,35260,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,59956,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,59813,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,60085,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,59412,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,59414,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,58116,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,60102,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,59419,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,52424,if (this.db_name != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,52425,oprot.writeFieldBegin(DB_NAME_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,52426,oprot.writeString(this.db_name);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,59431,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,52429,if (this.tbl_name != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,52430,oprot.writeFieldBegin(TBL_NAME_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,52431,oprot.writeString(this.tbl_name);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,34301,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,52434,oprot.writeFieldBegin(MAX_INDEXES_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,52435,oprot.writeI16(this.max_indexes);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,58529,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,59437,oprot.writeFieldStop();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,59438,oprot.writeStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,60530,private BitSet __isset_bit_vector = new BitSet(1);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,60560,__isset_bit_vector.clear();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,60561,__isset_bit_vector.or(other.__isset_bit_vector);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,55769,__isset_bit_vector.clear(__SUCCESS_ISSET_ID);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,55774,return __isset_bit_vector.get(__SUCCESS_ISSET_ID);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,55778,"__isset_bit_vector.set(__SUCCESS_ISSET_ID, value);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,61190,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14613,if (this.isSetSuccess()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14614,oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,55966,oprot.writeBool(this.success);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,34724,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,60112,} else if (this.isSetO1()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,60113,oprot.writeFieldBegin(O1_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,60114,this.o1.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,35292,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39304,} else if (this.isSetO2()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39305,oprot.writeFieldBegin(O2_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39306,this.o2.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,35304,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,47089,} else if (this.isSetO3()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,47090,oprot.writeFieldBegin(O3_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,47091,this.o3.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,35308,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,35816,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,52098,private BitSet __isset_bit_vector = new BitSet(1);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,52134,__isset_bit_vector.clear();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,52135,__isset_bit_vector.or(other.__isset_bit_vector);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,53337,__isset_bit_vector.clear(__SUCCESS_ISSET_ID);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,53342,return __isset_bit_vector.get(__SUCCESS_ISSET_ID);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,53346,"__isset_bit_vector.set(__SUCCESS_ISSET_ID, value);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,62378,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15590,if (this.isSetSuccess()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15591,oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,53534,oprot.writeBool(this.success);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,35820,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,19682,} else if (this.isSetO1()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,30709,oprot.writeFieldBegin(O1_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,30710,this.o1.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,36576,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40318,} else if (this.isSetO2()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40319,oprot.writeFieldBegin(O2_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40320,this.o2.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,36588,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,36592,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,62383,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,53278,private BitSet __isset_bit_vector = new BitSet(1);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,53308,__isset_bit_vector.clear();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,53309,__isset_bit_vector.or(other.__isset_bit_vector);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,54012,__isset_bit_vector.clear(__SUCCESS_ISSET_ID);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,54017,return __isset_bit_vector.get(__SUCCESS_ISSET_ID);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,54021,"__isset_bit_vector.set(__SUCCESS_ISSET_ID, value);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22226,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,18119,if (this.isSetSuccess()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,18120,oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,54209,oprot.writeBool(this.success);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,36596,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,20684,} else if (this.isSetO1()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,32628,oprot.writeFieldBegin(O1_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,32629,this.o1.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,36608,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41179,} else if (this.isSetO2()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41180,oprot.writeFieldBegin(O2_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41181,this.o2.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,37129,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,37133,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,37137,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,53953,private BitSet __isset_bit_vector = new BitSet(1);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,53983,__isset_bit_vector.clear();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,53984,__isset_bit_vector.or(other.__isset_bit_vector);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,56632,__isset_bit_vector.clear(__SUCCESS_ISSET_ID);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,56637,return __isset_bit_vector.get(__SUCCESS_ISSET_ID);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,56641,"__isset_bit_vector.set(__SUCCESS_ISSET_ID, value);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22621,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,18831,if (this.isSetSuccess()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,18832,oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,56829,oprot.writeBool(this.success);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,37708,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,21750,} else if (this.isSetO1()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,33820,oprot.writeFieldBegin(O1_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,33821,this.o1.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,37713,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,52856,} else if (this.isSetO2()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,52857,oprot.writeFieldBegin(O2_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,52858,this.o2.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,37725,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,48063,} else if (this.isSetO3()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,48064,oprot.writeFieldBegin(O3_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,48065,this.o3.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,37729,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,47093,} else if (this.isSetO4()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,47094,oprot.writeFieldBegin(O4_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,47095,this.o4.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,38232,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22586,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22587,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22588,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22590,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,38732,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23244,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22594,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,53138,case 1: // ROLE
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41717,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,53140,this.role = new Role();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,53141,this.role.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,60133,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,35268,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23405,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12151,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,35272,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22614,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22616,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,29032,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,30185,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22929,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,53159,if (this.role != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,53160,oprot.writeFieldBegin(ROLE_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,53161,this.role.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,38236,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10878,oprot.writeFieldStop();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,10879,oprot.writeStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,54980,private BitSet __isset_bit_vector = new BitSet(1);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,55026,__isset_bit_vector.clear();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,55027,__isset_bit_vector.or(other.__isset_bit_vector);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,59913,__isset_bit_vector.clear(__SUCCESS_ISSET_ID);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,59918,return __isset_bit_vector.get(__SUCCESS_ISSET_ID);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,59922,"__isset_bit_vector.set(__SUCCESS_ISSET_ID, value);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22900,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22901,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22902,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22904,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39239,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23415,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22908,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12119,case 0: // SUCCESS
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,50000,if (field.type == org.apache.thrift.protocol.TType.BOOL) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,53506,this.success = iprot.readBool();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24020,setSuccessIsSet(true);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16410,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,35779,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23423,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15554,case 1: // O1
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,42126,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,18813,this.o1 = new MetaException();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,27489,this.o1.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16418,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,35787,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23431,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12268,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,35791,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22920,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22922,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,30189,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24850,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,19678,if (this.isSetSuccess()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,19679,oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,60110,oprot.writeBool(this.success);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,38240,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23456,} else if (this.isSetO1()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,37131,oprot.writeFieldBegin(O1_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,37132,this.o1.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,38786,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24798,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24799,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24800,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24802,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39746,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23439,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24806,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,53611,case 1: // ROLE_NAME
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,33219,if (field.type == org.apache.thrift.protocol.TType.STRING) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,53816,this.role_name = iprot.readString();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,60809,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,36496,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23690,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12572,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,36503,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24841,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24843,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,30698,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,31169,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,25404,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,53834,if (this.role_name != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,53835,oprot.writeFieldBegin(ROLE_NAME_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,53836,oprot.writeString(this.role_name);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,38791,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,11643,oprot.writeFieldStop();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,11644,oprot.writeStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,55710,private BitSet __isset_bit_vector = new BitSet(1);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,55740,__isset_bit_vector.clear();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,55741,__isset_bit_vector.or(other.__isset_bit_vector);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,60589,__isset_bit_vector.clear(__SUCCESS_ISSET_ID);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,60594,return __isset_bit_vector.get(__SUCCESS_ISSET_ID);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,60598,"__isset_bit_vector.set(__SUCCESS_ISSET_ID, value);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,25353,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,25354,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,25355,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,25357,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40253,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23779,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,25361,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12902,case 0: // SUCCESS
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,53505,if (field.type == org.apache.thrift.protocol.TType.BOOL) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,54181,this.success = iprot.readBool();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24304,setSuccessIsSet(true);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16426,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,36520,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23799,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16008,case 1: // O1
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,42134,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,19652,this.o1 = new MetaException();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,30679,this.o1.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16434,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,36528,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24113,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12926,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,36535,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,25397,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,25399,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,32115,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,26432,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,20673,if (this.isSetSuccess()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,20674,oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,38795,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24349,} else if (this.isSetO1()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,38234,oprot.writeFieldBegin(O1_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,38235,this.o1.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39299,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,26381,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,26382,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,26383,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,26385,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40740,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24121,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,26389,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,13031,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,36552,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,26425,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,26427,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,33274,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,33802,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,27022,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12494,oprot.writeFieldStop();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12495,oprot.writeStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,56573,private BitSet __isset_bit_vector = new BitSet(1);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,56603,__isset_bit_vector.clear();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,56604,__isset_bit_vector.or(other.__isset_bit_vector);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,55202,__isset_bit_vector.clear(__GRANT_OPTION_ISSET_ID);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,55207,return __isset_bit_vector.get(__GRANT_OPTION_ISSET_ID);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,55211,"__isset_bit_vector.set(__GRANT_OPTION_ISSET_ID, value);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,26962,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,26963,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,26964,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,26966,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41143,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24129,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,26970,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,53814,case 1: // ROLE_NAME
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,33226,if (field.type == org.apache.thrift.protocol.TType.STRING) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,55476,this.role_name = iprot.readString();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16487,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,36556,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24137,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,54929,case 2: // PRINCIPAL_NAME
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,33241,if (field.type == org.apache.thrift.protocol.TType.STRING) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,55483,this.principal_name = iprot.readString();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16495,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,37096,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24298,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,54931,case 3: // PRINCIPAL_TYPE
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,55489,if (field.type == org.apache.thrift.protocol.TType.I32) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,55490,this.principal_type = PrincipalType.findByValue(iprot.readI32());
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16503,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,37104,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24308,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,55495,case 4: // GRANTOR
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,34255,if (field.type == org.apache.thrift.protocol.TType.STRING) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,55497,this.grantor = iprot.readString();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16740,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,37108,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24316,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,55502,case 5: // GRANTOR_TYPE
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,44909,if (field.type == org.apache.thrift.protocol.TType.I32) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,55504,this.grantorType = PrincipalType.findByValue(iprot.readI32());
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16756,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,37657,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24324,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,55509,case 6: // GRANT_OPTION
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,54180,if (field.type == org.apache.thrift.protocol.TType.BOOL) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,55511,this.grant_option = iprot.readBool();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,55512,setGrant_optionIsSet(true);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16902,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,37664,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24332,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,13330,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,37681,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,27013,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,27015,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,34282,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,34286,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,28056,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,55530,if (this.role_name != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,55531,oprot.writeFieldBegin(ROLE_NAME_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,55532,oprot.writeString(this.role_name);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39303,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,55535,if (this.principal_name != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,55536,oprot.writeFieldBegin(PRINCIPAL_NAME_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,55537,oprot.writeString(this.principal_name);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39307,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,55540,if (this.principal_type != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,55541,oprot.writeFieldBegin(PRINCIPAL_TYPE_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,55542,oprot.writeI32(this.principal_type.getValue());
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39797,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,55545,if (this.grantor != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,55546,oprot.writeFieldBegin(GRANTOR_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,55547,oprot.writeString(this.grantor);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39802,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,55550,if (this.grantorType != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,55551,oprot.writeFieldBegin(GRANTOR_TYPE_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,55552,oprot.writeI32(this.grantorType.getValue());
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39814,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,55555,oprot.writeFieldBegin(GRANT_OPTION_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,55556,oprot.writeBool(this.grant_option);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40313,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,13257,oprot.writeFieldStop();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,13258,oprot.writeStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,28006,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,28007,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,28008,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,28010,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41681,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24651,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,28014,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,13619,case 0: // SUCCESS
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,55510,if (field.type == org.apache.thrift.protocol.TType.BOOL) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,55938,this.success = iprot.readBool();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,27214,setSuccessIsSet(true);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16909,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,37689,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24659,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16406,case 1: // O1
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,42897,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,20639,this.o1 = new MetaException();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,32591,this.o1.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16917,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,37693,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24667,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,13647,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,38191,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,28047,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,28049,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,35281,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,30191,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23452,if (this.isSetSuccess()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23453,oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40317,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,26438,} else if (this.isSetO1()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39301,oprot.writeFieldBegin(O1_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39302,this.o1.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40321,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,30115,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,30116,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,30117,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,30119,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,42121,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24804,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,30123,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,56394,case 1: // ROLE_NAME
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,34262,if (field.type == org.apache.thrift.protocol.TType.STRING) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,56396,this.role_name = iprot.readString();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16959,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,38199,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24813,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,56401,case 2: // PRINCIPAL_NAME
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,35240,if (field.type == org.apache.thrift.protocol.TType.STRING) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,56403,this.principal_name = iprot.readString();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16967,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,38207,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24820,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,56408,case 3: // PRINCIPAL_TYPE
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,46258,if (field.type == org.apache.thrift.protocol.TType.I32) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,56410,this.principal_type = PrincipalType.findByValue(iprot.readI32());
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,17171,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,38211,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24837,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,13757,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,38747,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,30182,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,30184,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,36561,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,36565,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,30702,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,56428,if (this.role_name != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,56429,oprot.writeFieldBegin(ROLE_NAME_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,56430,oprot.writeString(this.role_name);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40782,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,56433,if (this.principal_name != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,56434,oprot.writeFieldBegin(PRINCIPAL_NAME_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,56435,oprot.writeString(this.principal_name);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40787,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,56438,if (this.principal_type != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,56439,oprot.writeFieldBegin(PRINCIPAL_TYPE_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,56440,oprot.writeI32(this.principal_type.getValue());
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40792,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,13676,oprot.writeFieldStop();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,13677,oprot.writeStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,31129,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,31130,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,31131,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,31133,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,42503,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,25174,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,31137,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14141,case 0: // SUCCESS
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,55937,if (field.type == org.apache.thrift.protocol.TType.BOOL) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,56801,this.success = iprot.readBool();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,27252,setSuccessIsSet(true);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,17179,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,38754,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,25182,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,17298,case 1: // O1
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,43602,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,21705,this.o1 = new MetaException();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,33783,this.o1.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,17302,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,38762,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,25190,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14035,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,38766,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,30695,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,30697,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,37698,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,32614,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24345,if (this.isSetSuccess()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24346,oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41178,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,27518,} else if (this.isSetO1()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40315,oprot.writeFieldBegin(O1_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40316,this.o1.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41182,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,32561,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,32562,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,32563,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,32565,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,42885,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,25198,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,32569,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,56913,case 1: // PRINCIPAL_NAME
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,36500,if (field.type == org.apache.thrift.protocol.TType.STRING) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,57191,this.principal_name = iprot.readString();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,17310,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39258,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,25369,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,56915,case 2: // PRINCIPAL_TYPE
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,55503,if (field.type == org.apache.thrift.protocol.TType.I32) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,57198,this.principal_type = PrincipalType.findByValue(iprot.readI32());
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,17347,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39266,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,25377,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14149,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39274,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,31635,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,31637,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,37702,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,38216,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,33806,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,57216,if (this.principal_name != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,57217,oprot.writeFieldBegin(PRINCIPAL_NAME_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,57218,oprot.writeString(this.principal_name);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41740,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,57221,if (this.principal_type != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,57222,oprot.writeFieldBegin(PRINCIPAL_TYPE_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,57223,oprot.writeI32(this.principal_type.getValue());
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41745,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14058,oprot.writeFieldStop();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14059,oprot.writeStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,33753,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,33754,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,33755,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,33757,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,43198,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,25385,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,33761,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14559,case 0: // SUCCESS
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,44321,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,58500,this.success = new PrincipalPrivilegeSet();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,58501,this.success.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,17355,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39278,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,25393,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,18099,case 1: // O1
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,45598,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,30678,this.o1 = new MetaException();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,37094,this.o1.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,17553,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39754,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,25696,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14601,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39761,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,32607,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,32609,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,38775,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,34288,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,26434,if (this.isSetSuccess()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,26435,oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,58528,this.success.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41757,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,30708,} else if (this.isSetO1()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41176,oprot.writeFieldBegin(O1_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41177,this.o1.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41762,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,34245,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,34246,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,34247,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,34249,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,43580,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,25704,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,34253,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,58960,case 1: // PRINCIPAL_NAME
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,36532,if (field.type == org.apache.thrift.protocol.TType.STRING) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,58962,this.principal_name = iprot.readString();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,17561,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39778,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,25712,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,58967,case 2: // PRINCIPAL_TYPE
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,58968,if (field.type == org.apache.thrift.protocol.TType.I32) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,58969,this.principal_type = PrincipalType.findByValue(iprot.readI32());
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,17683,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39782,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,25849,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,58974,case 3: // HIVE_OBJECT
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,45606,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,58976,this.hiveObject = new HiveObjectRef();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,58977,this.hiveObject.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,17690,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40272,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,25858,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14734,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40280,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,33799,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,33801,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39283,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39787,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,36567,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,58995,if (this.principal_name != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,58996,oprot.writeFieldBegin(PRINCIPAL_NAME_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,58997,oprot.writeString(this.principal_name);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,42156,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,59000,if (this.principal_type != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,59001,oprot.writeFieldBegin(PRINCIPAL_TYPE_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,59002,oprot.writeI32(this.principal_type.getValue());
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,42160,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,59005,if (this.hiveObject != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,59006,oprot.writeFieldBegin(HIVE_OBJECT_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,59007,this.hiveObject.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,42537,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15035,oprot.writeFieldStop();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15036,oprot.writeStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,36483,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,36484,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,36485,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,36487,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,43910,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,25865,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,36491,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,59511,case 1: // PRIVILEGES
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,45614,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,59716,this.privileges = new PrivilegeBag();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,59717,this.privileges.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,17737,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40288,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,25872,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15126,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40292,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,34279,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,34281,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39791,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40297,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,37704,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,59735,if (this.privileges != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,59736,oprot.writeFieldBegin(PRIVILEGES_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,59737,this.privileges.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,42542,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15614,oprot.writeFieldStop();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15615,oprot.writeStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,37644,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,37645,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,37646,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,37648,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,44297,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,26202,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,37652,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15118,case 0: // SUCCESS
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,56800,if (field.type == org.apache.thrift.protocol.TType.BOOL) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,60082,this.success = iprot.readBool();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,27481,setSuccessIsSet(true);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,17955,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40748,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,26210,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,18508,case 1: // O1
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,45622,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,31618,this.o1 = new MetaException();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,38197,this.o1.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,17963,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40755,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,26218,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15578,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40763,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,36558,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,36560,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40772,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,38220,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,27514,if (this.isSetSuccess()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,27515,oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,42919,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,32627,} else if (this.isSetO1()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,42154,oprot.writeFieldBegin(O1_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,42155,this.o1.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,42923,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,38168,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,38169,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,38170,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,38172,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,44871,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,26226,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,38176,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,60390,case 1: // PRIVILEGES
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,45630,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,60392,this.privileges = new PrivilegeBag();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,60393,this.privileges.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,18095,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40767,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,26397,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15706,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41152,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,37695,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,37697,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40776,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41169,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39287,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,60411,if (this.privileges != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,60412,oprot.writeFieldBegin(PRIVILEGES_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,60413,this.privileges.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,43225,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15933,oprot.writeFieldStop();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15934,oprot.writeStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39234,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39235,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39236,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39238,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,45585,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,26405,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39242,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15536,case 0: // SUCCESS
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,60757,if (field.type == org.apache.thrift.protocol.TType.BOOL) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,60758,this.success = iprot.readBool();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,28241,setSuccessIsSet(true);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,18103,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41160,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,26413,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,18811,case 1: // O1
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,47018,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,35776,this.o1 = new MetaException();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39264,this.o1.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,18147,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41164,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,26421,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15915,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41689,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,38213,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,38215,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41730,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39793,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,30704,if (this.isSetSuccess()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,30705,oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,60786,oprot.writeBool(this.success);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,43635,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,33819,} else if (this.isSetO1()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,42921,oprot.writeFieldBegin(O1_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,42922,this.o1.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,43937,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39741,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39742,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39743,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39745,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,46220,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,26783,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39749,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,61971,case 1: // TOKEN_OWNER
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,37661,if (field.type == org.apache.thrift.protocol.TType.STRING) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,61973,this.token_owner = iprot.readString();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,18155,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41696,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,26791,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,61978,case 2: // RENEWER_KERBEROS_PRINCIPAL_NAME
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,38737,if (field.type == org.apache.thrift.protocol.TType.STRING) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,61980,this.renewer_kerberos_principal_name = iprot.readString();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,18317,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41713,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,26799,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16016,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41721,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39280,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39282,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41734,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,42147,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40301,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,61998,if (this.token_owner != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,61999,oprot.writeFieldBegin(TOKEN_OWNER_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,62000,oprot.writeString(this.token_owner);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,44351,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,62003,if (this.renewer_kerberos_principal_name != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,62004,oprot.writeFieldBegin(RENEWER_KERBEROS_PRINCIPAL_NAME_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,62005,oprot.writeString(this.renewer_kerberos_principal_name);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,44355,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16947,oprot.writeFieldStop();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16948,oprot.writeStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40248,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40249,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40250,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40252,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,47005,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,26807,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40256,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,17794,case 0: // SUCCESS
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,38744,if (field.type == org.apache.thrift.protocol.TType.STRING) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,62355,this.success = iprot.readString();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,18415,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41725,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,26968,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,19650,case 1: // O1
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,47026,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,38196,this.o1 = new MetaException();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40278,this.o1.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,18449,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,42130,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,26977,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16438,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,42138,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39784,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39786,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,42527,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40778,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,32616,if (this.isSetSuccess()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,32617,oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,62382,oprot.writeString(this.success);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,44931,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,37130,} else if (this.isSetO1()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,43633,oprot.writeFieldBegin(O1_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,43634,this.o1.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,44936,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40735,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40736,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40737,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40739,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,47483,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,26984,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40743,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,62463,case 1: // TOKEN_STR_FORM
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,38751,if (field.type == org.apache.thrift.protocol.TType.STRING) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,62668,this.token_str_form = iprot.readString();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,18667,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,42142,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,27001,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16569,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,42511,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40294,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40296,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,42531,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,42910,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41173,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,62686,if (this.token_str_form != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,62687,oprot.writeFieldBegin(TOKEN_STR_FORM_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,62688,oprot.writeString(this.token_str_form);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,44949,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,17335,oprot.writeFieldStop();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,17336,oprot.writeStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,62805,private BitSet __isset_bit_vector = new BitSet(1);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,62835,__isset_bit_vector.clear();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,62836,__isset_bit_vector.or(other.__isset_bit_vector);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,62864,__isset_bit_vector.clear(__SUCCESS_ISSET_ID);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,62869,return __isset_bit_vector.get(__SUCCESS_ISSET_ID);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,62873,"__isset_bit_vector.set(__SUCCESS_ISSET_ID, value);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41138,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41139,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41140,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41142,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,48003,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,27009,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41146,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,18082,case 0: // SUCCESS
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,63032,if (field.type == org.apache.thrift.protocol.TType.I64) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,63033,this.success = iprot.readI64();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,63034,setSuccessIsSet(true);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,18675,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,42518,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,27322,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,20203,case 1: // O1
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,47034,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39263,this.o1 = new MetaException();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41150,this.o1.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,18807,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,42522,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,27330,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,17034,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,42893,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40769,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40771,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,43215,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41736,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,63059,if (this.isSetSuccess()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,63060,oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,63061,oprot.writeI64(this.success);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,44954,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,63063,} else if (this.isSetO1()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,44353,oprot.writeFieldBegin(O1_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,44354,this.o1.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,45656,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,55629,__isset_bit_vector = new BitSet(1);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41676,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41677,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41678,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41680,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,48561,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,27338,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41684,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,63341,case 1: // TOKEN_STR_FORM
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,63342,if (field.type == org.apache.thrift.protocol.TType.STRING) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,63343,this.token_str_form = iprot.readString();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,18815,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,42901,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,27475,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,17314,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,42905,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41166,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41168,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,43219,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,43927,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,42151,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,63361,if (this.token_str_form != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,63362,oprot.writeFieldBegin(TOKEN_STR_FORM_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,63363,oprot.writeString(this.token_str_form);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,45660,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,63660,oprot.writeFieldStop();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,63661,oprot.writeStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,63626,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,63627,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,63628,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,63630,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,63631,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,27485,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,63634,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,20637,case 1: // O1
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,63636,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,63637,this.o1 = new MetaException();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,63638,this.o1.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,18859,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,63640,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,63642,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,63643,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,63644,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,63646,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,63648,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,63649,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,63653,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,63655,if (this.isSetO1()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,63656,oprot.writeFieldBegin(O1_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,63657,this.o1.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,63658,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,63443,public static _Fields findByThriftIdOrThrow(int fieldId) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,63444,_Fields fields = findByThriftId(fieldId);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,63445,"if (fields == null) throw new IllegalArgumentException(""Field "" + fieldId + "" doesn't exist!"");"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,63446,return fields;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,63452,public static _Fields findByName(String name) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,63453,return byName.get(name);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,63456,private final short _thriftId;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,63457,private final String _fieldName;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,63459,"_Fields(short thriftId, String fieldName) {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,63460,_thriftId = thriftId;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,63461,_fieldName = fieldName;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,63464,public short getThriftFieldId() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,63465,return _thriftId;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,63468,public String getFieldName() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,63469,return _fieldName;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,63558,public boolean isSet(_Fields field) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,63559,if (field == null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,63560,throw new IllegalArgumentException();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,63684,private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,4658,try {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,63686,write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6347,} catch (org.apache.thrift.TException te) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6348,throw new java.io.IOException(te);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,63692,"private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,63693,try {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,63694,read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,63695,} catch (org.apache.thrift.TException te) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,63696,throw new java.io.IOException(te);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,62061,"private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField(""success"", org.apache.thrift.protocol.TType.STRING, (short)0);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,63411,"private static final org.apache.thrift.protocol.TField O1_FIELD_DESC = new org.apache.thrift.protocol.TField(""o1"", org.apache.thrift.protocol.TType.STRUCT, (short)1);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,62064,private String success; // required
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8832,private MetaException o1; // required
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,62744,"SUCCESS((short)0, ""success""),"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,63417,"O1((short)1, ""o1"");"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,63031,case 0: // SUCCESS
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,62761,return SUCCESS;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,63635,case 1: // O1
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,63433,return O1;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,47593,"O2((short)2, ""o2""),"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,47594,"O3((short)3, ""o3"");"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,51528,"O1((short)1, ""o1""),"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,51529,"O2((short)2, ""o2"");"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7833,return Boolean.valueOf(isDeleteData());
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,11963,return Boolean.valueOf(isSuccess());
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,12770,return Boolean.valueOf(isSuccess());
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,16773,return Boolean.valueOf(isDeleteData());
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,26824,return Boolean.valueOf(isDeleteData());
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,27868,return Boolean.valueOf(isDeleteData());
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,27346,return Boolean.valueOf(isSuccess());
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,28373,return Boolean.valueOf(isSuccess());
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,49867,return Boolean.valueOf(isSuccess());
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,53396,return Boolean.valueOf(isSuccess());
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,31957,return Short.valueOf(getMax_parts());
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,33044,return Short.valueOf(getMax_parts());
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,34128,return Short.valueOf(getMax_parts());
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,35085,return Short.valueOf(getMax_parts());
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,36297,return Short.valueOf(getMax_parts());
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,37506,return Short.valueOf(getMax_parts());
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,46781,return Boolean.valueOf(isSuccess());
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,54071,return Boolean.valueOf(isSuccess());
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,55828,return Boolean.valueOf(isSuccess());
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,51284,return Short.valueOf(getMax_indexes());
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,56691,return Boolean.valueOf(isSuccess());
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,59972,return Boolean.valueOf(isSuccess());
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7357,return getSuccess();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,9032,return getSuccess();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39401,case 3: // NAMES
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8901,"new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST,"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8902,new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,3566,this.names = names;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39499,this.names = null;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39557,if (this.names == null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39469,this.names = names;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39572,this.names = null;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39604,case NAMES:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39623,case NAMES:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8828,"private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField(""success"", org.apache.thrift.protocol.TType.LIST, (short)0);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,32194,private List<Partition> success; // required
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,9519,"new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST,"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23607,"new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, Partition.class))));"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,32282,"List<Partition> success,"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7251,this.success = null;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8947,public int getSuccessSize() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8948,return (this.success == null) ? 0 : this.success.size();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,32326,public java.util.Iterator<Partition> getSuccessIterator() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8952,return (this.success == null) ? null : this.success.iterator();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,32330,public void addToSuccess(Partition elem) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7548,if (this.success == null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,32332,this.success = new ArrayList<Partition>();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8959,this.success.add(elem);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,32337,public List<Partition> getSuccess() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,32341,public void setSuccess(List<Partition> success) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7265,this.success = null;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7270,return this.success != null;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6189,if (!value) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7275,this.success = null;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,32412,setSuccess((List<Partition>)value);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,9650,return getSuccess();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7399,boolean this_present_success = true && this.isSetSuccess();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7400,boolean that_present_success = true && that.isSetSuccess();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7404,if (!this.success.equals(that.success))
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8956,if (this.success == null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6331,"sb.append(""null"");"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,18867,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7551,sb.append(this.success);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22687,private Partition new_part; // required
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22707,return NEW_PART;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22752,"tmpMap.put(_Fields.NEW_PART, new org.apache.thrift.meta_data.FieldMetaData(""new_part"", org.apache.thrift.TFieldRequirementType.DEFAULT,"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22753,"new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, Partition.class)));"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22762,Partition new_part)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,2930,this.new_part = new_part;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22772,if (other.isSetNew_part()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22773,this.new_part = new Partition(other.new_part);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22783,this.new_part = null;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22786,public Partition getNew_part() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22787,return this.new_part;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22790,public void setNew_part(Partition new_part) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,3604,this.new_part = new_part;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22794,public void unsetNew_part() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22795,this.new_part = null;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22799,public boolean isSetNew_part() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22800,return this.new_part != null;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22803,public void setNew_partIsSet(boolean value) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22805,this.new_part = null;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22811,case NEW_PART:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22813,unsetNew_part();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22815,setNew_part((Partition)value);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22824,case NEW_PART:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22825,return getNew_part();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22838,case NEW_PART:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22839,return isSetNew_part();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22857,boolean this_present_new_part = true && this.isSetNew_part();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22858,boolean that_present_new_part = true && that.isSetNew_part();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22859,if (this_present_new_part || that_present_new_part) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22860,if (!(this_present_new_part && that_present_new_part))
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22862,if (!this.new_part.equals(that.new_part))
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22944,"sb.append(""new_part:"");"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22945,if (this.new_part == null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22948,sb.append(this.new_part);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,48699,private InvalidOperationException o1; // required
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7135,private MetaException o2; // required
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,48780,"InvalidOperationException o1,"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7222,MetaException o2)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,48793,this.o1 = new InvalidOperationException(other.o1);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7241,this.o2 = new MetaException(other.o2);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,48810,public InvalidOperationException getO1() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,48814,public void setO1(InvalidOperationException o1) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7302,public MetaException getO2() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7306,public void setO2(MetaException o2) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,48862,setO1((InvalidOperationException)value);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7347,setO2((MetaException)value);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,14194,"new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST,"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,32269,"new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, Partition.class))));"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,2962,this.new_parts = new_parts;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23641,this.new_parts = null;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23653,if (this.new_parts == null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23619,this.new_parts = new_parts;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23668,this.new_parts = null;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23684,case NEW_PARTS:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23697,case NEW_PARTS:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40557,public Partition getNew_part() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40558,return this.new_part;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40561,public void setNew_part(Partition new_part) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,3644,this.new_part = new_part;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40565,public void unsetNew_part() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40508,this.new_part = null;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40570,public boolean isSetNew_part() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40571,return this.new_part != null;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40574,public void setNew_partIsSet(boolean value) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6510,if (!value) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40566,this.new_part = null;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24429,"private static final org.apache.thrift.protocol.TField PART_VALS_FIELD_DESC = new org.apache.thrift.protocol.TField(""part_vals"", org.apache.thrift.protocol.TType.LIST, (short)3);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,26534,"PART_VALS((short)3, ""part_vals""),"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24458,case 3: // PART_VALS
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24459,return PART_VALS;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41273,case 4: // NEW_PART
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,26623,"List<String> part_vals,"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40477,Partition new_part)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24605,public int getPart_valsSize() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24606,return (this.part_vals == null) ? 0 : this.part_vals.size();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24609,public java.util.Iterator<String> getPart_valsIterator() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24610,return (this.part_vals == null) ? null : this.part_vals.iterator();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24613,public void addToPart_vals(String elem) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24614,if (this.part_vals == null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24615,this.part_vals = new ArrayList<String>();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24617,this.part_vals.add(elem);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24620,public List<String> getPart_vals() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24621,return this.part_vals;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24624,public void setPart_vals(List<String> part_vals) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,2998,this.part_vals = part_vals;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24628,public void unsetPart_vals() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24556,this.part_vals = null;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24633,public boolean isSetPart_vals() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24634,return this.part_vals != null;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24637,public void setPart_valsIsSet(boolean value) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24629,this.part_vals = null;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22765,this.new_part = new_part;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40576,this.new_part = null;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41379,this.new_part = null;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24661,case PART_VALS:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24663,unsetPart_vals();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24665,setPart_vals((List<String>)value);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40598,case NEW_PART:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40600,unsetNew_part();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40602,setNew_part((Partition)value);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24898,"sb.append(""part_vals:"");"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24899,if (this.part_vals == null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24902,sb.append(this.part_vals);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40819,"sb.append(""new_part:"");"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40820,if (this.new_part == null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40823,sb.append(this.new_part);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,62245,return getSuccess();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,21005,return Short.valueOf(getMax_tables());
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7836,return Boolean.valueOf(isCascade());
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,38589,return Short.valueOf(getMax_parts());
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,38305,"private static final org.apache.thrift.protocol.TField FILTER_FIELD_DESC = new org.apache.thrift.protocol.TField(""filter"", org.apache.thrift.protocol.TType.STRING, (short)3);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,38310,private String filter; // required
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,38750,case 3: // FILTER
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,38338,return FILTER;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,38391,"tmpMap.put(_Fields.FILTER, new org.apache.thrift.meta_data.FieldMetaData(""filter"", org.apache.thrift.TFieldRequirementType.DEFAULT,"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,63185,new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,2857,this.filter = filter;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,38430,if (other.isSetFilter()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,38431,this.filter = other.filter;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,20894,this.filter = null;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,38495,public String getFilter() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,38496,return this.filter;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,38499,public void setFilter(String filter) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,38500,this.filter = filter;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,38503,public void unsetFilter() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,20931,this.filter = null;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,38508,public boolean isSetFilter() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,38509,return this.filter != null;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,38512,public void setFilterIsSet(boolean value) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,38514,this.filter = null;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,20977,case FILTER:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,38560,unsetFilter();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,38562,setFilter((String)value);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,21001,case FILTER:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,38586,return getFilter();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,38606,case FILTER:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,38607,return isSetFilter();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,38645,boolean this_present_filter = true && this.isSetFilter();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,38646,boolean that_present_filter = true && that.isSetFilter();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,38647,if (this_present_filter || that_present_filter) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,38648,if (!(this_present_filter && that_present_filter))
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,38650,if (!this.filter.equals(that.filter))
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,38821,"sb.append(""filter:"");"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,38822,if (this.filter == null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,38825,sb.append(this.filter);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23870,"private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField(""success"", org.apache.thrift.protocol.TType.I32, (short)0);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23875,private int success; // required
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23955,new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,62849,setSuccessIsSet(false);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,62850,this.success = 0;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24014,public int getSuccess() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24018,public void setSuccess(int success) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24111,setSuccess((Integer)value);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24145,return Integer.valueOf(getSuccess());
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,62960,boolean this_present_success = true;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,62961,boolean that_present_success = true;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,62965,if (this.success != that.success)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,9206,sb.append(this.success);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,15171,"new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST,"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,9520,new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,33386,private List<Partition> success; // required
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,63413,private MetaException o1; // required
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,50581,private NoSuchObjectException o2; // required
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,33474,"List<Partition> success,"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,50667,"MetaException o1,"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,50668,NoSuchObjectException o2)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,63499,this.o1 = new MetaException(other.o1);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,50687,this.o2 = new NoSuchObjectException(other.o2);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,9565,public int getSuccessSize() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,9566,return (this.success == null) ? 0 : this.success.size();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,33518,public java.util.Iterator<Partition> getSuccessIterator() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,9570,return (this.success == null) ? null : this.success.iterator();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,33522,public void addToSuccess(Partition elem) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,9203,if (this.success == null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,33524,this.success = new ArrayList<Partition>();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,9577,this.success.add(elem);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,33529,public List<Partition> getSuccess() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,62855,return this.success;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,33533,public void setSuccess(List<Partition> success) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,62859,this.success = success;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,62863,public void unsetSuccess() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8943,this.success = null;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,62868,public boolean isSetSuccess() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8976,return this.success != null;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,62872,public void setSuccessIsSet(boolean value) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6533,if (!value) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8971,this.success = null;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,63512,public MetaException getO1() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,63516,public void setO1(MetaException o1) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,50748,public NoSuchObjectException getO2() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,50752,public void setO2(NoSuchObjectException o2) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,63541,setO1((MetaException)value);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,50793,setO2((NoSuchObjectException)value);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40390,private Partition new_part; // required
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40416,return NEW_PART;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40465,"tmpMap.put(_Fields.NEW_PART, new org.apache.thrift.meta_data.FieldMetaData(""new_part"", org.apache.thrift.TFieldRequirementType.DEFAULT,"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23063,"new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, Partition.class)));"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,22791,this.new_part = new_part;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40495,if (other.isSetNew_part()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40496,this.new_part = new Partition(other.new_part);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41475,this.new_part = null;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40482,this.new_part = new_part;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40617,case NEW_PART:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40635,case NEW_PART:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40618,return getNew_part();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41515,case NEW_PART:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40636,return isSetNew_part();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40672,boolean this_present_new_part = true && this.isSetNew_part();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40673,boolean that_present_new_part = true && that.isSetNew_part();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40674,if (this_present_new_part || that_present_new_part) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40675,if (!(this_present_new_part && that_present_new_part))
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40677,if (!this.new_part.equals(that.new_part))
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,17843,"new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST,"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,33461,"new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, Partition.class))));"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40562,this.new_part = new_part;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41537,case NEW_PART:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,52024,"private static final org.apache.thrift.protocol.TField DB_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField(""db_name"", org.apache.thrift.protocol.TType.STRING, (short)1);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,52025,"private static final org.apache.thrift.protocol.TField TBL_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField(""tbl_name"", org.apache.thrift.protocol.TType.STRING, (short)2);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,26522,"private static final org.apache.thrift.protocol.TField PART_VALS_FIELD_DESC = new org.apache.thrift.protocol.TField(""part_vals"", org.apache.thrift.protocol.TType.LIST, (short)3);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,52034,"DB_NAME((short)1, ""db_name""),"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,52035,"TBL_NAME((short)2, ""tbl_name""),"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,29604,"PART_VALS((short)3, ""part_vals""),"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,52389,case 1: // DB_NAME
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,52052,return DB_NAME;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,52396,case 2: // TBL_NAME
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,52054,return TBL_NAME;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24821,case 3: // PART_VALS
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,25017,"new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, Partition.class)));"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,52119,"String db_name,"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,52120,"String tbl_name,"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41345,this.new_part = new_part;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,52136,if (other.isSetDb_name()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,52137,this.db_name = other.db_name;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,52139,if (other.isSetTbl_name()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,52140,this.tbl_name = other.tbl_name;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,52157,public String getDb_name() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,52158,return this.db_name;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,52161,public void setDb_name(String db_name) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,52162,this.db_name = db_name;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,52165,public void unsetDb_name() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,13839,this.db_name = null;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,52170,public boolean isSetDb_name() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,52171,return this.db_name != null;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,52174,public void setDb_nameIsSet(boolean value) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6556,if (!value) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,52176,this.db_name = null;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,52180,public String getTbl_name() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,52181,return this.tbl_name;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,52184,public void setTbl_name(String tbl_name) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,52185,this.tbl_name = tbl_name;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,52188,public void unsetTbl_name() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,19011,this.tbl_name = null;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,52193,public boolean isSetTbl_name() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,52194,return this.tbl_name != null;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,52197,public void setTbl_nameIsSet(boolean value) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,6954,if (!value) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,52199,this.tbl_name = null;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7274,if (!value) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,49362,return Boolean.valueOf(isDeleteData());
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,52263,return Short.valueOf(getMax_indexes());
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,55285,return Boolean.valueOf(isGrant_option());
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,60648,return Boolean.valueOf(isSuccess());
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,62923,return Long.valueOf(getSuccess());
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39372,"private static final org.apache.thrift.protocol.TField NAMES_FIELD_DESC = new org.apache.thrift.protocol.TField(""names"", org.apache.thrift.protocol.TType.LIST, (short)3);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39376,private List<String> names; // required
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39382,"NAMES((short)3, ""names"");"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39764,case 3: // NAMES
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39402,return NAMES;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39451,"tmpMap.put(_Fields.NAMES, new org.apache.thrift.meta_data.FieldMetaData(""names"", org.apache.thrift.TFieldRequirementType.DEFAULT,"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,18555,"new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST,"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,61335,new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39455,"org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(get_partitions_by_names_args.class, metaDataMap);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39458,public get_partitions_by_names_args() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39461,public get_partitions_by_names_args(
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39464,List<String> names)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39475,public get_partitions_by_names_args(get_partitions_by_names_args other) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39491,public get_partitions_by_names_args deepCopy() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39492,return new get_partitions_by_names_args(this);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39548,public int getNamesSize() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39549,return (this.names == null) ? 0 : this.names.size();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39552,public java.util.Iterator<String> getNamesIterator() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39553,return (this.names == null) ? null : this.names.iterator();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39556,public void addToNames(String elem) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39558,this.names = new ArrayList<String>();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39560,this.names.add(elem);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39563,public List<String> getNames() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39564,return this.names;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39567,public void setNames(List<String> names) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39568,this.names = names;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39571,public void unsetNames() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39576,public boolean isSetNames() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39577,return this.names != null;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39580,public void setNamesIsSet(boolean value) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39582,this.names = null;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39606,unsetNames();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39608,setNames((List<String>)value);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39624,return getNames();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39641,case NAMES:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39642,return isSetNames();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39651,if (that instanceof get_partitions_by_names_args)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39652,return this.equals((get_partitions_by_names_args)that);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39656,public boolean equals(get_partitions_by_names_args that) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39678,boolean this_present_names = true && this.isSetNames();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39679,boolean that_present_names = true && that.isSetNames();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39680,if (this_present_names || that_present_names) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39681,if (!(this_present_names && that_present_names))
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39683,if (!this.names.equals(that.names))
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39695,public int compareTo(get_partitions_by_names_args other) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39822,"StringBuilder sb = new StringBuilder(""get_partitions_by_names_args("");"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39841,"sb.append(""names:"");"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39842,if (this.names == null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39845,sb.append(this.names);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,61261,"private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField(""success"", org.apache.thrift.protocol.TType.LIST, (short)0);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39881,private List<Partition> success; // required
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,19827,"new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST,"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,35455,"new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, Partition.class))));"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39962,"org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(get_partitions_by_names_result.class, metaDataMap);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39965,public get_partitions_by_names_result() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39968,public get_partitions_by_names_result(
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39969,"List<Partition> success,"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39998,public get_partitions_by_names_result deepCopy() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39999,return new get_partitions_by_names_result(this);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,8981,this.success = null;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,61380,public int getSuccessSize() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,61381,return (this.success == null) ? 0 : this.success.size();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40013,public java.util.Iterator<Partition> getSuccessIterator() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,61385,return (this.success == null) ? null : this.success.iterator();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40017,public void addToSuccess(Partition elem) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,9574,if (this.success == null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40019,this.success = new ArrayList<Partition>();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,61392,this.success.add(elem);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40024,public List<Partition> getSuccess() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40028,public void setSuccess(List<Partition> success) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,9561,this.success = null;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,62189,return this.success != null;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,7297,if (!value) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,62194,this.success = null;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40099,setSuccess((List<Partition>)value);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40158,if (that instanceof get_partitions_by_names_result)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40159,return this.equals((get_partitions_by_names_result)that);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40163,public boolean equals(get_partitions_by_names_result that) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,62282,boolean this_present_success = true && this.isSetSuccess();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,62283,boolean that_present_success = true && that.isSetSuccess();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,62287,if (!this.success.equals(that.success))
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40202,public int compareTo(get_partitions_by_names_result other) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40329,"StringBuilder sb = new StringBuilder(""get_partitions_by_names_result("");"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,62399,if (this.success == null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,63671,"sb.append(""null"");"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,63672,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,63078,sb.append(this.success);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40386,"private static final org.apache.thrift.protocol.TField NEW_PART_FIELD_DESC = new org.apache.thrift.protocol.TField(""new_part"", org.apache.thrift.protocol.TType.STRUCT, (short)3);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41245,private Partition new_part; // required
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40396,"NEW_PART((short)3, ""new_part"");"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40758,case 3: // NEW_PART
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41274,return NEW_PART;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41326,"tmpMap.put(_Fields.NEW_PART, new org.apache.thrift.meta_data.FieldMetaData(""new_part"", org.apache.thrift.TFieldRequirementType.DEFAULT,"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41327,"new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, Partition.class)));"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40468,"org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(alter_partition_args.class, metaDataMap);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40471,public alter_partition_args() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40474,public alter_partition_args(
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40488,public alter_partition_args(alter_partition_args other) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41365,if (other.isSetNew_part()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41366,this.new_part = new Partition(other.new_part);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40500,public alter_partition_args deepCopy() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40501,return new alter_partition_args(this);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41538,return getNew_part();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41558,return isSetNew_part();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40645,if (that instanceof alter_partition_args)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40646,return this.equals((alter_partition_args)that);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40650,public boolean equals(alter_partition_args that) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41603,boolean this_present_new_part = true && this.isSetNew_part();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41604,boolean that_present_new_part = true && that.isSetNew_part();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41605,if (this_present_new_part || that_present_new_part) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41606,if (!(this_present_new_part && that_present_new_part))
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41608,if (!this.new_part.equals(that.new_part))
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40689,public int compareTo(alter_partition_args other) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40800,"StringBuilder sb = new StringBuilder(""alter_partition_args("");"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40858,private InvalidOperationException o1; // required
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,52500,private MetaException o2; // required
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40932,"org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(alter_partition_result.class, metaDataMap);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40935,public alter_partition_result() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40938,public alter_partition_result(
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40939,"InvalidOperationException o1,"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,52582,MetaException o2)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40950,public alter_partition_result(alter_partition_result other) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40952,this.o1 = new InvalidOperationException(other.o1);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,52601,this.o2 = new MetaException(other.o2);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40959,public alter_partition_result deepCopy() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40960,return new alter_partition_result(this);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40969,public InvalidOperationException getO1() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,40973,public void setO1(InvalidOperationException o1) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,52653,public MetaException getO2() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,52657,public void setO2(MetaException o2) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41021,setO1((InvalidOperationException)value);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,52690,setO2((MetaException)value);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41067,if (that instanceof alter_partition_result)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41068,return this.equals((alter_partition_result)that);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41072,public boolean equals(alter_partition_result that) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41102,public int compareTo(alter_partition_result other) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41190,"StringBuilder sb = new StringBuilder(""alter_partition_result("");"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23540,private List<Partition> new_parts; // required
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23605,"tmpMap.put(_Fields.NEW_PARTS, new org.apache.thrift.meta_data.FieldMetaData(""new_parts"", org.apache.thrift.TFieldRequirementType.DEFAULT,"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,61334,"new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST,"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,39956,"new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, Partition.class))));"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23616,List<Partition> new_parts)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23644,public int getNew_partsSize() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23645,return (this.new_parts == null) ? 0 : this.new_parts.size();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23648,public java.util.Iterator<Partition> getNew_partsIterator() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23649,return (this.new_parts == null) ? null : this.new_parts.iterator();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23652,public void addToNew_parts(Partition elem) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23654,this.new_parts = new ArrayList<Partition>();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23656,this.new_parts.add(elem);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23659,public List<Partition> getNew_parts() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23660,return this.new_parts;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23663,public void setNew_parts(List<Partition> new_parts) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23664,this.new_parts = new_parts;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23667,public void unsetNew_parts() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23672,public boolean isSetNew_parts() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23673,return this.new_parts != null;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23676,public void setNew_partsIsSet(boolean value) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23678,this.new_parts = null;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23686,unsetNew_parts();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23688,setNew_parts((List<Partition>)value);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23698,return getNew_parts();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23711,case NEW_PARTS:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23712,return isSetNew_parts();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23730,boolean this_present_new_parts = true && this.isSetNew_parts();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23731,boolean that_present_new_parts = true && that.isSetNew_parts();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23732,if (this_present_new_parts || that_present_new_parts) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23733,if (!(this_present_new_parts && that_present_new_parts))
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23735,if (!this.new_parts.equals(that.new_parts))
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23834,"sb.append(""new_parts:"");"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23835,if (this.new_parts == null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,23838,sb.append(this.new_parts);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,63530,if (!value) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41239,"private static final org.apache.thrift.protocol.TField PART_VALS_FIELD_DESC = new org.apache.thrift.protocol.TField(""part_vals"", org.apache.thrift.protocol.TType.LIST, (short)3);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41240,"private static final org.apache.thrift.protocol.TField NEW_PART_FIELD_DESC = new org.apache.thrift.protocol.TField(""new_part"", org.apache.thrift.protocol.TType.STRUCT, (short)4);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,45773,"PART_VALS((short)3, ""part_vals""),"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41252,"NEW_PART((short)4, ""new_part"");"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,46238,case 3: // PART_VALS
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,45798,return PART_VALS;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41329,"org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(rename_partition_args.class, metaDataMap);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41332,public rename_partition_args() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41335,public rename_partition_args(
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41338,"List<String> part_vals,"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41339,Partition new_part)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41351,public rename_partition_args(rename_partition_args other) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41370,public rename_partition_args deepCopy() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41371,return new rename_partition_args(this);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,45963,public int getPart_valsSize() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,45964,return (this.part_vals == null) ? 0 : this.part_vals.size();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41432,public java.util.Iterator<String> getPart_valsIterator() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41433,return (this.part_vals == null) ? null : this.part_vals.iterator();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41436,public void addToPart_vals(String elem) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,26724,if (this.part_vals == null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41438,this.part_vals = new ArrayList<String>();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41440,this.part_vals.add(elem);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41443,public List<String> getPart_vals() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,45975,return this.part_vals;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41447,public void setPart_vals(List<String> part_vals) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,45979,this.part_vals = part_vals;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,45982,public void unsetPart_vals() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,24639,this.part_vals = null;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,45987,public boolean isSetPart_vals() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,45988,return this.part_vals != null;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,45991,public void setPart_valsIsSet(boolean value) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,45993,this.part_vals = null;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41466,public Partition getNew_part() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41467,return this.new_part;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41470,public void setNew_part(Partition new_part) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41471,this.new_part = new_part;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41474,public void unsetNew_part() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41479,public boolean isSetNew_part() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41480,return this.new_part != null;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41483,public void setNew_partIsSet(boolean value) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41485,this.new_part = null;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,46094,case PART_VALS:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,46048,unsetPart_vals();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41511,setPart_vals((List<String>)value);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41557,case NEW_PART:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41517,unsetNew_part();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41519,setNew_part((Partition)value);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41567,if (that instanceof rename_partition_args)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41568,return this.equals((rename_partition_args)that);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41572,public boolean equals(rename_partition_args that) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41620,public int compareTo(rename_partition_args other) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41770,"StringBuilder sb = new StringBuilder(""rename_partition_args("");"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,46330,"sb.append(""part_vals:"");"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,46331,if (this.part_vals == null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,46334,sb.append(this.part_vals);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41797,"sb.append(""new_part:"");"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41798,if (this.new_part == null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41801,sb.append(this.new_part);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41716,case 4: // NEW_PART
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41910,"org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(rename_partition_result.class, metaDataMap);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41913,public rename_partition_result() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41916,public rename_partition_result(
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41928,public rename_partition_result(rename_partition_result other) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41937,public rename_partition_result deepCopy() {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,41938,return new rename_partition_result(this);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,42045,if (that instanceof rename_partition_result)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,42046,return this.equals((rename_partition_result)that);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,42050,public boolean equals(rename_partition_result that) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,42080,public int compareTo(rename_partition_result other) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java,42168,"StringBuilder sb = new StringBuilder(""rename_partition_result("");"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Type.java,32,private String type1; // required
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Type.java,33,private String type2; // required
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Type.java,34,private List<FieldSchema> fields; // required
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Type.java,459,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Type.java,460,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Type.java,461,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Type.java,463,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Type.java,464,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Type.java,465,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Type.java,467,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Type.java,468,case 1: // NAME
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Type.java,469,if (field.type == org.apache.thrift.protocol.TType.STRING) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Type.java,470,this.name = iprot.readString();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Type.java,471,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Type.java,472,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Type.java,474,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Type.java,475,case 2: // TYPE1
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Type.java,476,if (field.type == org.apache.thrift.protocol.TType.STRING) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Type.java,477,this.type1 = iprot.readString();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Type.java,478,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Type.java,479,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Type.java,481,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Type.java,482,case 3: // TYPE2
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Type.java,483,if (field.type == org.apache.thrift.protocol.TType.STRING) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Type.java,484,this.type2 = iprot.readString();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Type.java,485,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Type.java,486,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Type.java,488,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Type.java,489,case 4: // FIELDS
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Type.java,490,if (field.type == org.apache.thrift.protocol.TType.LIST) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Type.java,492,org.apache.thrift.protocol.TList _list0 = iprot.readListBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Type.java,493,this.fields = new ArrayList<FieldSchema>(_list0.size);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Type.java,494,for (int _i1 = 0; _i1 < _list0.size; ++_i1)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Type.java,496,FieldSchema _elem2; // required
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Type.java,497,_elem2 = new FieldSchema();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Type.java,498,_elem2.read(iprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Type.java,499,this.fields.add(_elem2);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Type.java,501,iprot.readListEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Type.java,503,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Type.java,504,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Type.java,506,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Type.java,507,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Type.java,508,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Type.java,510,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Type.java,512,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Type.java,513,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Type.java,517,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Type.java,519,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Type.java,520,if (this.name != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Type.java,521,oprot.writeFieldBegin(NAME_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Type.java,522,oprot.writeString(this.name);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Type.java,523,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Type.java,525,if (this.type1 != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Type.java,526,if (isSetType1()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Type.java,527,oprot.writeFieldBegin(TYPE1_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Type.java,528,oprot.writeString(this.type1);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Type.java,529,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Type.java,532,if (this.type2 != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Type.java,533,if (isSetType2()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Type.java,534,oprot.writeFieldBegin(TYPE2_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Type.java,535,oprot.writeString(this.type2);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Type.java,536,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Type.java,539,if (this.fields != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Type.java,540,if (isSetFields()) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Type.java,541,oprot.writeFieldBegin(FIELDS_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Type.java,543,"oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, this.fields.size()));"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Type.java,544,for (FieldSchema _iter3 : this.fields)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Type.java,546,_iter3.write(oprot);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Type.java,548,oprot.writeListEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Type.java,550,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Type.java,553,oprot.writeFieldStop();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Type.java,554,oprot.writeStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/UnknownDBException.java,23,"public class UnknownDBException extends Exception implements org.apache.thrift.TBase<UnknownDBException, UnknownDBException._Fields>, java.io.Serializable, Cloneable {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/UnknownDBException.java,241,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/UnknownDBException.java,242,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/UnknownDBException.java,243,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/UnknownDBException.java,245,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/UnknownDBException.java,246,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/UnknownDBException.java,247,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/UnknownDBException.java,249,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/UnknownDBException.java,250,case 1: // MESSAGE
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/UnknownDBException.java,251,if (field.type == org.apache.thrift.protocol.TType.STRING) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/UnknownDBException.java,252,this.message = iprot.readString();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/UnknownDBException.java,253,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/UnknownDBException.java,254,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/UnknownDBException.java,256,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/UnknownDBException.java,257,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/UnknownDBException.java,258,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/UnknownDBException.java,260,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/UnknownDBException.java,262,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/UnknownDBException.java,263,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/UnknownDBException.java,267,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/UnknownDBException.java,269,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/UnknownDBException.java,270,if (this.message != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/UnknownDBException.java,271,oprot.writeFieldBegin(MESSAGE_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/UnknownDBException.java,272,oprot.writeString(this.message);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/UnknownDBException.java,273,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/UnknownDBException.java,275,oprot.writeFieldStop();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/UnknownDBException.java,276,oprot.writeStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/UnknownPartitionException.java,23,"public class UnknownPartitionException extends Exception implements org.apache.thrift.TBase<UnknownPartitionException, UnknownPartitionException._Fields>, java.io.Serializable, Cloneable {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/UnknownPartitionException.java,241,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/UnknownPartitionException.java,242,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/UnknownPartitionException.java,243,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/UnknownPartitionException.java,245,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/UnknownPartitionException.java,246,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/UnknownPartitionException.java,247,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/UnknownPartitionException.java,249,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/UnknownPartitionException.java,250,case 1: // MESSAGE
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/UnknownPartitionException.java,251,if (field.type == org.apache.thrift.protocol.TType.STRING) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/UnknownPartitionException.java,252,this.message = iprot.readString();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/UnknownPartitionException.java,253,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/UnknownPartitionException.java,254,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/UnknownPartitionException.java,256,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/UnknownPartitionException.java,257,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/UnknownPartitionException.java,258,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/UnknownPartitionException.java,260,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/UnknownPartitionException.java,262,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/UnknownPartitionException.java,263,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/UnknownPartitionException.java,267,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/UnknownPartitionException.java,269,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/UnknownPartitionException.java,270,if (this.message != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/UnknownPartitionException.java,271,oprot.writeFieldBegin(MESSAGE_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/UnknownPartitionException.java,272,oprot.writeString(this.message);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/UnknownPartitionException.java,273,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/UnknownPartitionException.java,275,oprot.writeFieldStop();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/UnknownPartitionException.java,276,oprot.writeStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/UnknownTableException.java,23,"public class UnknownTableException extends Exception implements org.apache.thrift.TBase<UnknownTableException, UnknownTableException._Fields>, java.io.Serializable, Cloneable {"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/UnknownTableException.java,241,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/UnknownTableException.java,242,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/UnknownTableException.java,243,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/UnknownTableException.java,245,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/UnknownTableException.java,246,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/UnknownTableException.java,247,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/UnknownTableException.java,249,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/UnknownTableException.java,250,case 1: // MESSAGE
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/UnknownTableException.java,251,if (field.type == org.apache.thrift.protocol.TType.STRING) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/UnknownTableException.java,252,this.message = iprot.readString();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/UnknownTableException.java,253,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/UnknownTableException.java,254,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/UnknownTableException.java,256,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/UnknownTableException.java,257,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/UnknownTableException.java,258,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/UnknownTableException.java,260,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/UnknownTableException.java,262,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/UnknownTableException.java,263,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/UnknownTableException.java,267,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/UnknownTableException.java,269,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/UnknownTableException.java,270,if (this.message != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/UnknownTableException.java,271,oprot.writeFieldBegin(MESSAGE_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/UnknownTableException.java,272,oprot.writeString(this.message);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/UnknownTableException.java,273,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/UnknownTableException.java,275,oprot.writeFieldStop();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/UnknownTableException.java,276,oprot.writeStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Version.java,309,org.apache.thrift.protocol.TField field;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Version.java,310,iprot.readStructBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Version.java,311,while (true)
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Version.java,313,field = iprot.readFieldBegin();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Version.java,314,if (field.type == org.apache.thrift.protocol.TType.STOP) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Version.java,315,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Version.java,317,switch (field.id) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Version.java,318,case 1: // VERSION
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Version.java,319,if (field.type == org.apache.thrift.protocol.TType.STRING) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Version.java,320,this.version = iprot.readString();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Version.java,321,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Version.java,322,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Version.java,324,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Version.java,325,case 2: // COMMENTS
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Version.java,326,if (field.type == org.apache.thrift.protocol.TType.STRING) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Version.java,327,this.comments = iprot.readString();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Version.java,328,} else {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Version.java,329,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Version.java,331,break;
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Version.java,332,default:
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Version.java,333,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Version.java,335,iprot.readFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Version.java,337,iprot.readStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Version.java,338,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Version.java,342,validate();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Version.java,344,oprot.writeStructBegin(STRUCT_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Version.java,345,if (this.version != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Version.java,346,oprot.writeFieldBegin(VERSION_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Version.java,347,oprot.writeString(this.version);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Version.java,348,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Version.java,350,if (this.comments != null) {
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Version.java,351,oprot.writeFieldBegin(COMMENTS_FIELD_DESC);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Version.java,352,oprot.writeString(this.comments);
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Version.java,353,oprot.writeFieldEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Version.java,355,oprot.writeFieldStop();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Version.java,356,oprot.writeStructEnd();
metastore/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/Constants.java,23,public class Constants {
metastore/src/java/org/apache/hadoop/hive/metastore/HiveAlterHandler.java,32,import org.apache.hadoop.hive.metastore.api.Constants;
metastore/src/java/org/apache/hadoop/hive/metastore/HiveAlterHandler.java,245,new_part.getParameters().get(Constants.DDL_TIME) == null ||
metastore/src/java/org/apache/hadoop/hive/metastore/HiveAlterHandler.java,246,Integer.parseInt(new_part.getParameters().get(Constants.DDL_TIME)) == 0) {
metastore/src/java/org/apache/hadoop/hive/metastore/HiveAlterHandler.java,247,"new_part.putToParameters(Constants.DDL_TIME, Long.toString(System"
metastore/src/java/org/apache/hadoop/hive/metastore/HiveAlterHandler.java,129,"newTblLoc = wh.getTablePath(msdb.getDatabase(newt.getDbName()), newt.getTableName()).toString();"
metastore/src/java/org/apache/hadoop/hive/metastore/HiveAlterHandler.java,292,"destPath = constructRenamedPartitionPath(destPath, new_part);"
metastore/src/java/org/apache/hadoop/hive/metastore/HiveAlterHandler.java,400,"private Path constructRenamedPartitionPath(Path defaultPath, Partition part) {"
metastore/src/java/org/apache/hadoop/hive/metastore/HiveAlterHandler.java,401,Path oldPath = new Path(part.getSd().getLocation());
metastore/src/java/org/apache/hadoop/hive/metastore/HiveAlterHandler.java,402,URI oldUri = oldPath.toUri();
metastore/src/java/org/apache/hadoop/hive/metastore/HiveAlterHandler.java,404,"return new Path(oldUri.getScheme(), oldUri.getAuthority(), defaultPath.toUri().getPath());"
metastore/src/java/org/apache/hadoop/hive/metastore/HiveAlterHandler.java,100,"throw new InvalidOperationException(""table "" + newt.getDbName() + ""."""
metastore/src/java/org/apache/hadoop/hive/metastore/HiveAlterHandler.java,101,"+ newt.getTableName() + "" doesn't exist"");"
metastore/src/java/org/apache/hadoop/hive/metastore/MetaStoreUtils.java,42,import org.apache.hadoop.hive.metastore.api.Constants;
metastore/src/java/org/apache/hadoop/hive/metastore/MetaStoreUtils.java,100,"org.apache.hadoop.hive.serde.Constants.SERIALIZATION_FORMAT, ""1"");"
metastore/src/java/org/apache/hadoop/hive/metastore/MetaStoreUtils.java,106,"org.apache.hadoop.hive.serde.Constants.STRING_TYPE_NAME, ""'default'"");"
metastore/src/java/org/apache/hadoop/hive/metastore/MetaStoreUtils.java,114,part.setType(org.apache.hadoop.hive.serde.Constants.STRING_TYPE_NAME); // default
metastore/src/java/org/apache/hadoop/hive/metastore/MetaStoreUtils.java,166,.getProperty(org.apache.hadoop.hive.serde.Constants.SERIALIZATION_LIB);
metastore/src/java/org/apache/hadoop/hive/metastore/MetaStoreUtils.java,345,"org.apache.hadoop.hive.serde.Constants.BOOLEAN_TYPE_NAME, ""bool"");"
metastore/src/java/org/apache/hadoop/hive/metastore/MetaStoreUtils.java,347,"org.apache.hadoop.hive.serde.Constants.TINYINT_TYPE_NAME, ""byte"");"
metastore/src/java/org/apache/hadoop/hive/metastore/MetaStoreUtils.java,349,"org.apache.hadoop.hive.serde.Constants.SMALLINT_TYPE_NAME, ""i16"");"
metastore/src/java/org/apache/hadoop/hive/metastore/MetaStoreUtils.java,351,"org.apache.hadoop.hive.serde.Constants.INT_TYPE_NAME, ""i32"");"
metastore/src/java/org/apache/hadoop/hive/metastore/MetaStoreUtils.java,353,"org.apache.hadoop.hive.serde.Constants.BIGINT_TYPE_NAME, ""i64"");"
metastore/src/java/org/apache/hadoop/hive/metastore/MetaStoreUtils.java,355,"org.apache.hadoop.hive.serde.Constants.DOUBLE_TYPE_NAME, ""double"");"
metastore/src/java/org/apache/hadoop/hive/metastore/MetaStoreUtils.java,357,"org.apache.hadoop.hive.serde.Constants.FLOAT_TYPE_NAME, ""float"");"
metastore/src/java/org/apache/hadoop/hive/metastore/MetaStoreUtils.java,359,"org.apache.hadoop.hive.serde.Constants.LIST_TYPE_NAME, ""list"");"
metastore/src/java/org/apache/hadoop/hive/metastore/MetaStoreUtils.java,361,"org.apache.hadoop.hive.serde.Constants.MAP_TYPE_NAME, ""map"");"
metastore/src/java/org/apache/hadoop/hive/metastore/MetaStoreUtils.java,363,"org.apache.hadoop.hive.serde.Constants.STRING_TYPE_NAME, ""string"");"
metastore/src/java/org/apache/hadoop/hive/metastore/MetaStoreUtils.java,365,"org.apache.hadoop.hive.serde.Constants.BINARY_TYPE_NAME, ""binary"");"
metastore/src/java/org/apache/hadoop/hive/metastore/MetaStoreUtils.java,371,"org.apache.hadoop.hive.serde.Constants.DATE_TYPE_NAME, ""date"");"
metastore/src/java/org/apache/hadoop/hive/metastore/MetaStoreUtils.java,373,"org.apache.hadoop.hive.serde.Constants.DATETIME_TYPE_NAME, ""datetime"");"
metastore/src/java/org/apache/hadoop/hive/metastore/MetaStoreUtils.java,375,".put(org.apache.hadoop.hive.serde.Constants.TIMESTAMP_TYPE_NAME,"
metastore/src/java/org/apache/hadoop/hive/metastore/MetaStoreUtils.java,510,schema.getProperty(org.apache.hadoop.hive.metastore.api.Constants.FILE_INPUT_FORMAT);
metastore/src/java/org/apache/hadoop/hive/metastore/MetaStoreUtils.java,517,"schema.setProperty(org.apache.hadoop.hive.metastore.api.Constants.FILE_INPUT_FORMAT,"
metastore/src/java/org/apache/hadoop/hive/metastore/MetaStoreUtils.java,524,schema.getProperty(org.apache.hadoop.hive.metastore.api.Constants.FILE_OUTPUT_FORMAT);
metastore/src/java/org/apache/hadoop/hive/metastore/MetaStoreUtils.java,531,"schema.setProperty(org.apache.hadoop.hive.metastore.api.Constants.FILE_OUTPUT_FORMAT,"
metastore/src/java/org/apache/hadoop/hive/metastore/MetaStoreUtils.java,536,"schema.setProperty(org.apache.hadoop.hive.metastore.api.Constants.META_TABLE_LOCATION,"
metastore/src/java/org/apache/hadoop/hive/metastore/MetaStoreUtils.java,541,"schema.setProperty(org.apache.hadoop.hive.metastore.api.Constants.BUCKET_COUNT,"
metastore/src/java/org/apache/hadoop/hive/metastore/MetaStoreUtils.java,545,"schema.setProperty(org.apache.hadoop.hive.metastore.api.Constants.BUCKET_FIELD_NAME,"
metastore/src/java/org/apache/hadoop/hive/metastore/MetaStoreUtils.java,555,String cols = org.apache.hadoop.hive.metastore.api.Constants.META_TABLE_COLUMNS;
metastore/src/java/org/apache/hadoop/hive/metastore/MetaStoreUtils.java,556,String colTypes = org.apache.hadoop.hive.metastore.api.Constants.META_TABLE_COLUMN_TYPES;
metastore/src/java/org/apache/hadoop/hive/metastore/MetaStoreUtils.java,557,String parts = org.apache.hadoop.hive.metastore.api.Constants.META_TABLE_PARTITION_COLUMNS;
metastore/src/java/org/apache/hadoop/hive/metastore/MetaStoreUtils.java,569,"schema.setProperty(org.apache.hadoop.hive.serde.Constants.SERIALIZATION_LIB,"
metastore/src/java/org/apache/hadoop/hive/metastore/MetaStoreUtils.java,598,"org.apache.hadoop.hive.metastore.api.Constants.FILE_INPUT_FORMAT,"
metastore/src/java/org/apache/hadoop/hive/metastore/MetaStoreUtils.java,606,"org.apache.hadoop.hive.metastore.api.Constants.FILE_OUTPUT_FORMAT,"
metastore/src/java/org/apache/hadoop/hive/metastore/MetaStoreUtils.java,610,"org.apache.hadoop.hive.metastore.api.Constants.META_TABLE_NAME,"
metastore/src/java/org/apache/hadoop/hive/metastore/MetaStoreUtils.java,615,"org.apache.hadoop.hive.metastore.api.Constants.META_TABLE_LOCATION,"
metastore/src/java/org/apache/hadoop/hive/metastore/MetaStoreUtils.java,619,"org.apache.hadoop.hive.metastore.api.Constants.BUCKET_COUNT, Integer"
metastore/src/java/org/apache/hadoop/hive/metastore/MetaStoreUtils.java,623,"org.apache.hadoop.hive.metastore.api.Constants.BUCKET_FIELD_NAME, sd"
metastore/src/java/org/apache/hadoop/hive/metastore/MetaStoreUtils.java,633,"org.apache.hadoop.hive.serde.Constants.SERIALIZATION_LIB, sd"
metastore/src/java/org/apache/hadoop/hive/metastore/MetaStoreUtils.java,652,"org.apache.hadoop.hive.metastore.api.Constants.META_TABLE_COLUMNS,"
metastore/src/java/org/apache/hadoop/hive/metastore/MetaStoreUtils.java,655,"org.apache.hadoop.hive.metastore.api.Constants.META_TABLE_COLUMN_TYPES,"
metastore/src/java/org/apache/hadoop/hive/metastore/MetaStoreUtils.java,659,"org.apache.hadoop.hive.serde.Constants.SERIALIZATION_DDL,"
metastore/src/java/org/apache/hadoop/hive/metastore/MetaStoreUtils.java,675,"org.apache.hadoop.hive.metastore.api.Constants.META_TABLE_PARTITION_COLUMNS,"
metastore/src/java/org/apache/hadoop/hive/metastore/MetaStoreUtils.java,884,"if (""true"".equalsIgnoreCase(params.get(Constants.IS_ARCHIVED))) {"
metastore/src/java/org/apache/hadoop/hive/metastore/MetaStoreUtils.java,895,String originalLocation = params.get(Constants.ORIGINAL_LOCATION);
metastore/src/java/org/apache/hadoop/hive/metastore/MetaStoreUtils.java,905,return (table.getParameters().get(Constants.META_TABLE_STORAGE) != null);
metastore/src/java/org/apache/hadoop/hive/metastore/MetaStoreUtils.java,307,static public boolean validateName(String name) {
metastore/src/java/org/apache/hadoop/hive/metastore/MetaStoreUtils.java,308,"Pattern tpat = Pattern.compile(""[\\w_]+"");"
metastore/src/java/org/apache/hadoop/hive/metastore/MetaStoreUtils.java,937,return false;
metastore/src/java/org/apache/hadoop/hive/metastore/MetaStoreUtils.java,322,return true;
metastore/src/java/org/apache/hadoop/hive/metastore/parser/ExpressionTree.java,28,import org.apache.hadoop.hive.metastore.api.Constants;
metastore/src/java/org/apache/hadoop/hive/metastore/parser/ExpressionTree.java,166,if (keyName.equals(Constants.HIVE_FILTER_FIELD_OWNER)) {
metastore/src/java/org/apache/hadoop/hive/metastore/parser/ExpressionTree.java,168,} else if (keyName.equals(Constants.HIVE_FILTER_FIELD_LAST_ACCESS)) {
metastore/src/java/org/apache/hadoop/hive/metastore/parser/ExpressionTree.java,174,} else if (keyName.startsWith(Constants.HIVE_FILTER_FIELD_PARAMS)) {
metastore/src/java/org/apache/hadoop/hive/metastore/parser/ExpressionTree.java,181,String paramKeyName = keyName.substring(Constants.HIVE_FILTER_FIELD_PARAMS.length());
metastore/src/java/org/apache/hadoop/hive/metastore/parser/ExpressionTree.java,247,getType().equals(org.apache.hadoop.hive.serde.Constants.STRING_TYPE_NAME) ) {
metastore/src/test/org/apache/hadoop/hive/metastore/TestHiveMetaStore.java,55,import org.apache.hadoop.hive.serde.Constants;
metastore/src/test/org/apache/hadoop/hive/metastore/TestHiveMetaStore.java,151,"new FieldSchema(""name"", Constants.STRING_TYPE_NAME, """"));"
metastore/src/test/org/apache/hadoop/hive/metastore/TestHiveMetaStore.java,153,"new FieldSchema(""income"", Constants.INT_TYPE_NAME, """"));"
metastore/src/test/org/apache/hadoop/hive/metastore/TestHiveMetaStore.java,172,".put(Constants.SERIALIZATION_FORMAT, ""1"");"
metastore/src/test/org/apache/hadoop/hive/metastore/TestHiveMetaStore.java,177,"new FieldSchema(""ds"", Constants.STRING_TYPE_NAME, """"));"
metastore/src/test/org/apache/hadoop/hive/metastore/TestHiveMetaStore.java,179,"new FieldSchema(""hr"", Constants.STRING_TYPE_NAME, """"));"
metastore/src/test/org/apache/hadoop/hive/metastore/TestHiveMetaStore.java,476,"cols.add(new FieldSchema(""name"", Constants.STRING_TYPE_NAME, """"));"
metastore/src/test/org/apache/hadoop/hive/metastore/TestHiveMetaStore.java,477,"cols.add(new FieldSchema(""income"", Constants.INT_TYPE_NAME, """"));"
metastore/src/test/org/apache/hadoop/hive/metastore/TestHiveMetaStore.java,495,".put(Constants.SERIALIZATION_FORMAT, ""1"");"
metastore/src/test/org/apache/hadoop/hive/metastore/TestHiveMetaStore.java,500,"new FieldSchema(""ds"", Constants.STRING_TYPE_NAME, """"));"
metastore/src/test/org/apache/hadoop/hive/metastore/TestHiveMetaStore.java,502,"new FieldSchema(""hr"", Constants.INT_TYPE_NAME, """"));"
metastore/src/test/org/apache/hadoop/hive/metastore/TestHiveMetaStore.java,572,"cols.add(new FieldSchema(""name"", Constants.STRING_TYPE_NAME, """"));"
metastore/src/test/org/apache/hadoop/hive/metastore/TestHiveMetaStore.java,573,"cols.add(new FieldSchema(""income"", Constants.INT_TYPE_NAME, """"));"
metastore/src/test/org/apache/hadoop/hive/metastore/TestHiveMetaStore.java,591,".put(Constants.SERIALIZATION_FORMAT, ""1"");"
metastore/src/test/org/apache/hadoop/hive/metastore/TestHiveMetaStore.java,1949,"new FieldSchema(""ds"", Constants.STRING_TYPE_NAME, """"));"
metastore/src/test/org/apache/hadoop/hive/metastore/TestHiveMetaStore.java,1951,"new FieldSchema(""hr"", Constants.INT_TYPE_NAME, """"));"
metastore/src/test/org/apache/hadoop/hive/metastore/TestHiveMetaStore.java,816,client.dropType(Constants.INT_TYPE_NAME);
metastore/src/test/org/apache/hadoop/hive/metastore/TestHiveMetaStore.java,819,typ1.setName(Constants.INT_TYPE_NAME);
metastore/src/test/org/apache/hadoop/hive/metastore/TestHiveMetaStore.java,823,Type typ1_2 = client.getType(Constants.INT_TYPE_NAME);
metastore/src/test/org/apache/hadoop/hive/metastore/TestHiveMetaStore.java,827,ret = client.dropType(Constants.INT_TYPE_NAME);
metastore/src/test/org/apache/hadoop/hive/metastore/TestHiveMetaStore.java,832,client.getType(Constants.INT_TYPE_NAME);
metastore/src/test/org/apache/hadoop/hive/metastore/TestHiveMetaStore.java,853,"new FieldSchema(""name"", Constants.STRING_TYPE_NAME, """"));"
metastore/src/test/org/apache/hadoop/hive/metastore/TestHiveMetaStore.java,855,"new FieldSchema(""income"", Constants.INT_TYPE_NAME, """"));"
metastore/src/test/org/apache/hadoop/hive/metastore/TestHiveMetaStore.java,872,"new FieldSchema(""name"", Constants.STRING_TYPE_NAME, """"));"
metastore/src/test/org/apache/hadoop/hive/metastore/TestHiveMetaStore.java,926,"new FieldSchema(""name"", Constants.STRING_TYPE_NAME, """"));"
metastore/src/test/org/apache/hadoop/hive/metastore/TestHiveMetaStore.java,928,"new FieldSchema(""income"", Constants.INT_TYPE_NAME, """"));"
metastore/src/test/org/apache/hadoop/hive/metastore/TestHiveMetaStore.java,947,"org.apache.hadoop.hive.serde.Constants.SERIALIZATION_FORMAT, ""1"");"
metastore/src/test/org/apache/hadoop/hive/metastore/TestHiveMetaStore.java,1140,"org.apache.hadoop.hive.serde.Constants.SERIALIZATION_FORMAT, ""1"");"
metastore/src/test/org/apache/hadoop/hive/metastore/TestHiveMetaStore.java,1121,"invCols.add(new FieldSchema(""n-ame"", Constants.STRING_TYPE_NAME, """"));"
metastore/src/test/org/apache/hadoop/hive/metastore/TestHiveMetaStore.java,1122,"invCols.add(new FieldSchema(""in.come"", Constants.INT_TYPE_NAME, """"));"
metastore/src/test/org/apache/hadoop/hive/metastore/TestHiveMetaStore.java,2004,"org.apache.hadoop.hive.serde.Constants.SERIALIZATION_FORMAT, ""1"");"
metastore/src/test/org/apache/hadoop/hive/metastore/TestHiveMetaStore.java,1152,"cols.add(new FieldSchema(""name"", Constants.STRING_TYPE_NAME, """"));"
metastore/src/test/org/apache/hadoop/hive/metastore/TestHiveMetaStore.java,1153,"cols.add(new FieldSchema(""income"", Constants.INT_TYPE_NAME, """"));"
metastore/src/test/org/apache/hadoop/hive/metastore/TestHiveMetaStore.java,1257,"new FieldSchema(""name"", Constants.STRING_TYPE_NAME, """"));"
metastore/src/test/org/apache/hadoop/hive/metastore/TestHiveMetaStore.java,1259,"new FieldSchema(""income"", Constants.INT_TYPE_NAME, """"));"
metastore/src/test/org/apache/hadoop/hive/metastore/TestHiveMetaStore.java,1278,"org.apache.hadoop.hive.serde.Constants.SERIALIZATION_FORMAT, ""9"");"
metastore/src/test/org/apache/hadoop/hive/metastore/TestHiveMetaStore.java,1285,"org.apache.hadoop.hive.serde.Constants.DATE_TYPE_NAME, """"));"
metastore/src/test/org/apache/hadoop/hive/metastore/TestHiveMetaStore.java,1288,"org.apache.hadoop.hive.serde.Constants.INT_TYPE_NAME, """"));"
metastore/src/test/org/apache/hadoop/hive/metastore/TestHiveMetaStore.java,1305,"assertEquals(Constants.DATE_TYPE_NAME, tbl2.getPartitionKeys().get(0)"
metastore/src/test/org/apache/hadoop/hive/metastore/TestHiveMetaStore.java,1307,"assertEquals(Constants.INT_TYPE_NAME, tbl2.getPartitionKeys().get(1)"
metastore/src/test/org/apache/hadoop/hive/metastore/TestHiveMetaStore.java,1362,"cols.add(new FieldSchema(""name"", Constants.STRING_TYPE_NAME, """"));"
metastore/src/test/org/apache/hadoop/hive/metastore/TestHiveMetaStore.java,1363,"cols.add(new FieldSchema(""income"", Constants.INT_TYPE_NAME, """"));"
metastore/src/test/org/apache/hadoop/hive/metastore/TestHiveMetaStore.java,1371,"org.apache.hadoop.hive.serde.Constants.SERIALIZATION_FORMAT, ""9"");"
metastore/src/test/org/apache/hadoop/hive/metastore/TestHiveMetaStore.java,1423,} catch (ConfigValSecurityException e) {
metastore/src/test/org/apache/hadoop/hive/metastore/TestHiveMetaStore.java,1424,threwException = true;
metastore/src/test/org/apache/hadoop/hive/metastore/TestHiveMetaStore.java,1434,"part.putToParameters(org.apache.hadoop.hive.metastore.api.Constants.DDL_TIME, Long.toString(part_get.getCreateTime()));"
metastore/src/test/org/apache/hadoop/hive/metastore/TestHiveMetaStore.java,1488,"cols.add(new FieldSchema(""c1"", Constants.STRING_TYPE_NAME, """"));"
metastore/src/test/org/apache/hadoop/hive/metastore/TestHiveMetaStore.java,1489,"cols.add(new FieldSchema(""c2"", Constants.INT_TYPE_NAME, """"));"
metastore/src/test/org/apache/hadoop/hive/metastore/TestHiveMetaStore.java,1492,"partCols.add(new FieldSchema(""p1"", Constants.STRING_TYPE_NAME, """"));"
metastore/src/test/org/apache/hadoop/hive/metastore/TestHiveMetaStore.java,1493,"partCols.add(new FieldSchema(""p2"", Constants.STRING_TYPE_NAME, """"));"
metastore/src/test/org/apache/hadoop/hive/metastore/TestHiveMetaStore.java,1494,"partCols.add(new FieldSchema(""p3"", Constants.INT_TYPE_NAME, """"));"
metastore/src/test/org/apache/hadoop/hive/metastore/TestHiveMetaStore.java,1510,".put(Constants.SERIALIZATION_FORMAT, ""1"");"
metastore/src/test/org/apache/hadoop/hive/metastore/TestHiveMetaStore.java,1699,"cols.add(new FieldSchema(""c1"", Constants.STRING_TYPE_NAME, """"));"
metastore/src/test/org/apache/hadoop/hive/metastore/TestHiveMetaStore.java,1700,"cols.add(new FieldSchema(""c2"", Constants.INT_TYPE_NAME, """"));"
metastore/src/test/org/apache/hadoop/hive/metastore/TestHiveMetaStore.java,1633,"partCols.add(new FieldSchema(""p1"", Constants.STRING_TYPE_NAME, """"));"
metastore/src/test/org/apache/hadoop/hive/metastore/TestHiveMetaStore.java,1720,".put(Constants.SERIALIZATION_FORMAT, ""1"");"
metastore/src/test/org/apache/hadoop/hive/metastore/TestHiveMetaStore.java,1629,"cols.add(new FieldSchema(""c1"", Constants.STRING_TYPE_NAME, """"));"
metastore/src/test/org/apache/hadoop/hive/metastore/TestHiveMetaStore.java,1630,"cols.add(new FieldSchema(""c2"", Constants.INT_TYPE_NAME, """"));"
metastore/src/test/org/apache/hadoop/hive/metastore/TestHiveMetaStore.java,1703,"partCols.add(new FieldSchema(""p1"", Constants.STRING_TYPE_NAME, """"));"
metastore/src/test/org/apache/hadoop/hive/metastore/TestHiveMetaStore.java,1704,"partCols.add(new FieldSchema(""p2"", Constants.STRING_TYPE_NAME, """"));"
metastore/src/test/org/apache/hadoop/hive/metastore/TestHiveMetaStore.java,1811,filter = org.apache.hadoop.hive.metastore.api.Constants.HIVE_FILTER_FIELD_OWNER +
metastore/src/test/org/apache/hadoop/hive/metastore/TestHiveMetaStore.java,1813,org.apache.hadoop.hive.metastore.api.Constants.HIVE_FILTER_FIELD_OWNER +
metastore/src/test/org/apache/hadoop/hive/metastore/TestHiveMetaStore.java,1822,filter = org.apache.hadoop.hive.metastore.api.Constants.HIVE_FILTER_FIELD_OWNER +
metastore/src/test/org/apache/hadoop/hive/metastore/TestHiveMetaStore.java,1831,filter = org.apache.hadoop.hive.metastore.api.Constants.HIVE_FILTER_FIELD_LAST_ACCESS +
metastore/src/test/org/apache/hadoop/hive/metastore/TestHiveMetaStore.java,1840,filter = org.apache.hadoop.hive.metastore.api.Constants.HIVE_FILTER_FIELD_LAST_ACCESS +
metastore/src/test/org/apache/hadoop/hive/metastore/TestHiveMetaStore.java,1848,filter = org.apache.hadoop.hive.metastore.api.Constants.HIVE_FILTER_FIELD_PARAMS +
metastore/src/test/org/apache/hadoop/hive/metastore/TestHiveMetaStore.java,1857,filter = org.apache.hadoop.hive.metastore.api.Constants.HIVE_FILTER_FIELD_PARAMS +
metastore/src/test/org/apache/hadoop/hive/metastore/TestHiveMetaStore.java,1864,filter = org.apache.hadoop.hive.metastore.api.Constants.HIVE_FILTER_FIELD_PARAMS +
metastore/src/test/org/apache/hadoop/hive/metastore/TestHiveMetaStore.java,1871,filter = org.apache.hadoop.hive.metastore.api.Constants.HIVE_FILTER_FIELD_PARAMS +
metastore/src/test/org/apache/hadoop/hive/metastore/TestHiveMetaStore.java,1878,filter = org.apache.hadoop.hive.metastore.api.Constants.HIVE_FILTER_FIELD_OWNER +
metastore/src/test/org/apache/hadoop/hive/metastore/TestHiveMetaStore.java,1880,org.apache.hadoop.hive.metastore.api.Constants.HIVE_FILTER_FIELD_LAST_ACCESS +
metastore/src/test/org/apache/hadoop/hive/metastore/TestHiveMetaStore.java,1882,org.apache.hadoop.hive.metastore.api.Constants.HIVE_FILTER_FIELD_PARAMS +
metastore/src/test/org/apache/hadoop/hive/metastore/TestHiveMetaStore.java,1917,"cols.add(new FieldSchema(""name"", Constants.STRING_TYPE_NAME, """"));"
metastore/src/test/org/apache/hadoop/hive/metastore/TestHiveMetaStore.java,1918,"cols.add(new FieldSchema(""income"", Constants.INT_TYPE_NAME, """"));"
metastore/src/test/org/apache/hadoop/hive/metastore/TestHiveMetaStore.java,1985,"cols.add(new FieldSchema(""c1"", Constants.STRING_TYPE_NAME, """"));"
metastore/src/test/org/apache/hadoop/hive/metastore/TestHiveMetaStore.java,1986,"cols.add(new FieldSchema(""c2"", Constants.INT_TYPE_NAME, """"));"
metastore/src/test/org/apache/hadoop/hive/metastore/TestHiveMetaStore.java,1941,".put(Constants.SERIALIZATION_FORMAT, ""1"");"
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Adjacency.java,409,org.apache.thrift.protocol.TField field;
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Adjacency.java,410,iprot.readStructBegin();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Adjacency.java,411,while (true)
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Adjacency.java,413,field = iprot.readFieldBegin();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Adjacency.java,414,if (field.type == org.apache.thrift.protocol.TType.STOP) {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Adjacency.java,415,break;
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Adjacency.java,417,switch (field.id) {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Adjacency.java,418,case 1: // NODE
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Adjacency.java,419,if (field.type == org.apache.thrift.protocol.TType.STRING) {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Adjacency.java,420,this.node = iprot.readString();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Adjacency.java,421,} else {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Adjacency.java,422,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Adjacency.java,424,break;
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Adjacency.java,425,case 2: // CHILDREN
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Adjacency.java,426,if (field.type == org.apache.thrift.protocol.TType.LIST) {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Adjacency.java,428,org.apache.thrift.protocol.TList _list0 = iprot.readListBegin();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Adjacency.java,429,this.children = new ArrayList<String>(_list0.size);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Adjacency.java,430,for (int _i1 = 0; _i1 < _list0.size; ++_i1)
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Adjacency.java,432,String _elem2; // required
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Adjacency.java,433,_elem2 = iprot.readString();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Adjacency.java,434,this.children.add(_elem2);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Adjacency.java,436,iprot.readListEnd();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Adjacency.java,438,} else {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Adjacency.java,439,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Adjacency.java,441,break;
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Adjacency.java,442,case 3: // ADJACENCY_TYPE
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Adjacency.java,443,if (field.type == org.apache.thrift.protocol.TType.I32) {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Adjacency.java,444,this.adjacencyType = AdjacencyType.findByValue(iprot.readI32());
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Adjacency.java,445,} else {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Adjacency.java,446,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Adjacency.java,448,break;
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Adjacency.java,449,default:
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Adjacency.java,450,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Adjacency.java,452,iprot.readFieldEnd();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Adjacency.java,454,iprot.readStructEnd();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Adjacency.java,455,validate();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Adjacency.java,459,validate();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Adjacency.java,461,oprot.writeStructBegin(STRUCT_DESC);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Adjacency.java,462,if (this.node != null) {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Adjacency.java,463,oprot.writeFieldBegin(NODE_FIELD_DESC);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Adjacency.java,464,oprot.writeString(this.node);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Adjacency.java,465,oprot.writeFieldEnd();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Adjacency.java,467,if (this.children != null) {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Adjacency.java,468,oprot.writeFieldBegin(CHILDREN_FIELD_DESC);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Adjacency.java,470,"oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, this.children.size()));"
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Adjacency.java,471,for (String _iter3 : this.children)
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Adjacency.java,473,oprot.writeString(_iter3);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Adjacency.java,475,oprot.writeListEnd();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Adjacency.java,477,oprot.writeFieldEnd();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Adjacency.java,479,if (this.adjacencyType != null) {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Adjacency.java,480,oprot.writeFieldBegin(ADJACENCY_TYPE_FIELD_DESC);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Adjacency.java,481,oprot.writeI32(this.adjacencyType.getValue());
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Adjacency.java,482,oprot.writeFieldEnd();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Adjacency.java,484,oprot.writeFieldStop();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Adjacency.java,485,oprot.writeStructEnd();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Graph.java,429,org.apache.thrift.protocol.TField field;
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Graph.java,430,iprot.readStructBegin();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Graph.java,431,while (true)
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Graph.java,433,field = iprot.readFieldBegin();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Graph.java,434,if (field.type == org.apache.thrift.protocol.TType.STOP) {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Graph.java,435,break;
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Graph.java,437,switch (field.id) {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Graph.java,438,case 1: // NODE_TYPE
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Graph.java,439,if (field.type == org.apache.thrift.protocol.TType.I32) {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Graph.java,440,this.nodeType = NodeType.findByValue(iprot.readI32());
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Graph.java,441,} else {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Graph.java,442,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Graph.java,444,break;
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Graph.java,445,case 2: // ROOTS
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Graph.java,446,if (field.type == org.apache.thrift.protocol.TType.LIST) {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Graph.java,448,org.apache.thrift.protocol.TList _list4 = iprot.readListBegin();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Graph.java,449,this.roots = new ArrayList<String>(_list4.size);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Graph.java,450,for (int _i5 = 0; _i5 < _list4.size; ++_i5)
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Graph.java,452,String _elem6; // required
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Graph.java,453,_elem6 = iprot.readString();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Graph.java,454,this.roots.add(_elem6);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Graph.java,456,iprot.readListEnd();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Graph.java,458,} else {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Graph.java,459,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Graph.java,461,break;
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Graph.java,462,case 3: // ADJACENCY_LIST
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Graph.java,463,if (field.type == org.apache.thrift.protocol.TType.LIST) {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Graph.java,465,org.apache.thrift.protocol.TList _list7 = iprot.readListBegin();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Graph.java,466,this.adjacencyList = new ArrayList<Adjacency>(_list7.size);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Graph.java,467,for (int _i8 = 0; _i8 < _list7.size; ++_i8)
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Graph.java,469,Adjacency _elem9; // required
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Graph.java,470,_elem9 = new Adjacency();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Graph.java,471,_elem9.read(iprot);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Graph.java,472,this.adjacencyList.add(_elem9);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Graph.java,474,iprot.readListEnd();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Graph.java,476,} else {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Graph.java,477,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Graph.java,479,break;
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Graph.java,480,default:
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Graph.java,481,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Graph.java,483,iprot.readFieldEnd();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Graph.java,485,iprot.readStructEnd();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Graph.java,486,validate();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Graph.java,490,validate();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Graph.java,492,oprot.writeStructBegin(STRUCT_DESC);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Graph.java,493,if (this.nodeType != null) {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Graph.java,494,oprot.writeFieldBegin(NODE_TYPE_FIELD_DESC);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Graph.java,495,oprot.writeI32(this.nodeType.getValue());
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Graph.java,496,oprot.writeFieldEnd();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Graph.java,498,if (this.roots != null) {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Graph.java,499,oprot.writeFieldBegin(ROOTS_FIELD_DESC);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Graph.java,501,"oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, this.roots.size()));"
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Graph.java,502,for (String _iter10 : this.roots)
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Graph.java,504,oprot.writeString(_iter10);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Graph.java,506,oprot.writeListEnd();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Graph.java,508,oprot.writeFieldEnd();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Graph.java,510,if (this.adjacencyList != null) {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Graph.java,511,oprot.writeFieldBegin(ADJACENCY_LIST_FIELD_DESC);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Graph.java,513,"oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, this.adjacencyList.size()));"
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Graph.java,514,for (Adjacency _iter11 : this.adjacencyList)
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Graph.java,516,_iter11.write(oprot);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Graph.java,518,oprot.writeListEnd();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Graph.java,520,oprot.writeFieldEnd();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Graph.java,522,oprot.writeFieldStop();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Graph.java,523,oprot.writeStructEnd();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Operator.java,120,private BitSet __isset_bit_vector = new BitSet(2);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Operator.java,171,__isset_bit_vector.clear();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Operator.java,172,__isset_bit_vector.or(other.__isset_bit_vector);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Operator.java,361,__isset_bit_vector.clear(__DONE_ISSET_ID);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Operator.java,366,return __isset_bit_vector.get(__DONE_ISSET_ID);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Operator.java,370,"__isset_bit_vector.set(__DONE_ISSET_ID, value);"
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Operator.java,383,__isset_bit_vector.clear(__STARTED_ISSET_ID);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Operator.java,388,return __isset_bit_vector.get(__STARTED_ISSET_ID);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Operator.java,392,"__isset_bit_vector.set(__STARTED_ISSET_ID, value);"
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Operator.java,646,org.apache.thrift.protocol.TField field;
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Operator.java,647,iprot.readStructBegin();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Operator.java,648,while (true)
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Operator.java,650,field = iprot.readFieldBegin();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Operator.java,651,if (field.type == org.apache.thrift.protocol.TType.STOP) {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Operator.java,652,break;
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Operator.java,654,switch (field.id) {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Operator.java,655,case 1: // OPERATOR_ID
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Operator.java,656,if (field.type == org.apache.thrift.protocol.TType.STRING) {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Operator.java,657,this.operatorId = iprot.readString();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Operator.java,658,} else {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Operator.java,659,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Operator.java,661,break;
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Operator.java,662,case 2: // OPERATOR_TYPE
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Operator.java,663,if (field.type == org.apache.thrift.protocol.TType.I32) {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Operator.java,664,this.operatorType = OperatorType.findByValue(iprot.readI32());
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Operator.java,665,} else {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Operator.java,666,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Operator.java,668,break;
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Operator.java,669,case 3: // OPERATOR_ATTRIBUTES
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Operator.java,670,if (field.type == org.apache.thrift.protocol.TType.MAP) {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Operator.java,672,org.apache.thrift.protocol.TMap _map12 = iprot.readMapBegin();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Operator.java,673,"this.operatorAttributes = new HashMap<String,String>(2*_map12.size);"
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Operator.java,674,for (int _i13 = 0; _i13 < _map12.size; ++_i13)
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Operator.java,676,String _key14; // required
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Operator.java,677,String _val15; // required
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Operator.java,678,_key14 = iprot.readString();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Operator.java,679,_val15 = iprot.readString();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Operator.java,680,"this.operatorAttributes.put(_key14, _val15);"
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Operator.java,682,iprot.readMapEnd();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Operator.java,684,} else {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Operator.java,685,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Operator.java,687,break;
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Operator.java,688,case 4: // OPERATOR_COUNTERS
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Operator.java,689,if (field.type == org.apache.thrift.protocol.TType.MAP) {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Operator.java,691,org.apache.thrift.protocol.TMap _map16 = iprot.readMapBegin();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Operator.java,692,"this.operatorCounters = new HashMap<String,Long>(2*_map16.size);"
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Operator.java,693,for (int _i17 = 0; _i17 < _map16.size; ++_i17)
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Operator.java,695,String _key18; // required
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Operator.java,696,long _val19; // required
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Operator.java,697,_key18 = iprot.readString();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Operator.java,698,_val19 = iprot.readI64();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Operator.java,699,"this.operatorCounters.put(_key18, _val19);"
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Operator.java,701,iprot.readMapEnd();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Operator.java,703,} else {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Operator.java,704,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Operator.java,706,break;
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Operator.java,707,case 5: // DONE
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Operator.java,708,if (field.type == org.apache.thrift.protocol.TType.BOOL) {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Operator.java,709,this.done = iprot.readBool();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Operator.java,710,setDoneIsSet(true);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Operator.java,711,} else {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Operator.java,712,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Operator.java,714,break;
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Operator.java,715,case 6: // STARTED
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Operator.java,716,if (field.type == org.apache.thrift.protocol.TType.BOOL) {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Operator.java,717,this.started = iprot.readBool();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Operator.java,718,setStartedIsSet(true);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Operator.java,719,} else {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Operator.java,720,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Operator.java,722,break;
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Operator.java,723,default:
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Operator.java,724,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Operator.java,726,iprot.readFieldEnd();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Operator.java,728,iprot.readStructEnd();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Operator.java,729,validate();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Operator.java,733,validate();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Operator.java,735,oprot.writeStructBegin(STRUCT_DESC);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Operator.java,736,if (this.operatorId != null) {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Operator.java,737,oprot.writeFieldBegin(OPERATOR_ID_FIELD_DESC);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Operator.java,738,oprot.writeString(this.operatorId);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Operator.java,739,oprot.writeFieldEnd();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Operator.java,741,if (this.operatorType != null) {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Operator.java,742,oprot.writeFieldBegin(OPERATOR_TYPE_FIELD_DESC);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Operator.java,743,oprot.writeI32(this.operatorType.getValue());
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Operator.java,744,oprot.writeFieldEnd();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Operator.java,746,if (this.operatorAttributes != null) {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Operator.java,747,oprot.writeFieldBegin(OPERATOR_ATTRIBUTES_FIELD_DESC);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Operator.java,749,"oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRING, this.operatorAttributes.size()));"
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Operator.java,750,"for (Map.Entry<String, String> _iter20 : this.operatorAttributes.entrySet())"
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Operator.java,752,oprot.writeString(_iter20.getKey());
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Operator.java,753,oprot.writeString(_iter20.getValue());
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Operator.java,755,oprot.writeMapEnd();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Operator.java,757,oprot.writeFieldEnd();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Operator.java,759,if (this.operatorCounters != null) {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Operator.java,760,oprot.writeFieldBegin(OPERATOR_COUNTERS_FIELD_DESC);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Operator.java,762,"oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.I64, this.operatorCounters.size()));"
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Operator.java,763,"for (Map.Entry<String, Long> _iter21 : this.operatorCounters.entrySet())"
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Operator.java,765,oprot.writeString(_iter21.getKey());
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Operator.java,766,oprot.writeI64(_iter21.getValue());
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Operator.java,768,oprot.writeMapEnd();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Operator.java,770,oprot.writeFieldEnd();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Operator.java,772,oprot.writeFieldBegin(DONE_FIELD_DESC);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Operator.java,773,oprot.writeBool(this.done);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Operator.java,774,oprot.writeFieldEnd();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Operator.java,775,oprot.writeFieldBegin(STARTED_FIELD_DESC);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Operator.java,776,oprot.writeBool(this.started);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Operator.java,777,oprot.writeFieldEnd();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Operator.java,778,oprot.writeFieldStop();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Operator.java,779,oprot.writeStructEnd();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Operator.java,845,__isset_bit_vector = new BitSet(1);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Operator.java,463,return Boolean.valueOf(isDone());
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Operator.java,466,return Boolean.valueOf(isStarted());
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,126,private BitSet __isset_bit_vector = new BitSet(2);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,186,__isset_bit_vector.clear();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,187,__isset_bit_vector.or(other.__isset_bit_vector);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,441,__isset_bit_vector.clear(__DONE_ISSET_ID);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,446,return __isset_bit_vector.get(__DONE_ISSET_ID);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,450,"__isset_bit_vector.set(__DONE_ISSET_ID, value);"
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,463,__isset_bit_vector.clear(__STARTED_ISSET_ID);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,468,return __isset_bit_vector.get(__STARTED_ISSET_ID);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,472,"__isset_bit_vector.set(__STARTED_ISSET_ID, value);"
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,790,org.apache.thrift.protocol.TField field;
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,791,iprot.readStructBegin();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,792,while (true)
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,794,field = iprot.readFieldBegin();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,795,if (field.type == org.apache.thrift.protocol.TType.STOP) {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,796,break;
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,798,switch (field.id) {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,799,case 1: // QUERY_ID
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,800,if (field.type == org.apache.thrift.protocol.TType.STRING) {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,801,this.queryId = iprot.readString();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,802,} else {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,803,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,805,break;
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,806,case 2: // QUERY_TYPE
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,807,if (field.type == org.apache.thrift.protocol.TType.STRING) {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,808,this.queryType = iprot.readString();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,809,} else {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,810,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,812,break;
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,813,case 3: // QUERY_ATTRIBUTES
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,814,if (field.type == org.apache.thrift.protocol.TType.MAP) {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,816,org.apache.thrift.protocol.TMap _map50 = iprot.readMapBegin();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,817,"this.queryAttributes = new HashMap<String,String>(2*_map50.size);"
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,818,for (int _i51 = 0; _i51 < _map50.size; ++_i51)
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,820,String _key52; // required
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,821,String _val53; // required
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,822,_key52 = iprot.readString();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,823,_val53 = iprot.readString();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,824,"this.queryAttributes.put(_key52, _val53);"
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,826,iprot.readMapEnd();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,828,} else {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,829,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,831,break;
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,832,case 4: // QUERY_COUNTERS
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,833,if (field.type == org.apache.thrift.protocol.TType.MAP) {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,835,org.apache.thrift.protocol.TMap _map54 = iprot.readMapBegin();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,836,"this.queryCounters = new HashMap<String,Long>(2*_map54.size);"
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,837,for (int _i55 = 0; _i55 < _map54.size; ++_i55)
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,839,String _key56; // required
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,840,long _val57; // required
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,841,_key56 = iprot.readString();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,842,_val57 = iprot.readI64();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,843,"this.queryCounters.put(_key56, _val57);"
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,845,iprot.readMapEnd();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,847,} else {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,848,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,850,break;
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,851,case 5: // STAGE_GRAPH
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,852,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,853,this.stageGraph = new Graph();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,854,this.stageGraph.read(iprot);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,855,} else {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,856,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,858,break;
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,859,case 6: // STAGE_LIST
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,860,if (field.type == org.apache.thrift.protocol.TType.LIST) {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,862,org.apache.thrift.protocol.TList _list58 = iprot.readListBegin();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,863,this.stageList = new ArrayList<Stage>(_list58.size);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,864,for (int _i59 = 0; _i59 < _list58.size; ++_i59)
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,866,Stage _elem60; // required
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,867,_elem60 = new Stage();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,868,_elem60.read(iprot);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,869,this.stageList.add(_elem60);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,871,iprot.readListEnd();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,873,} else {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,874,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,876,break;
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,877,case 7: // DONE
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,878,if (field.type == org.apache.thrift.protocol.TType.BOOL) {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,879,this.done = iprot.readBool();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,880,setDoneIsSet(true);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,881,} else {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,882,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,884,break;
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,885,case 8: // STARTED
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,886,if (field.type == org.apache.thrift.protocol.TType.BOOL) {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,887,this.started = iprot.readBool();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,888,setStartedIsSet(true);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,889,} else {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,890,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,892,break;
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,893,default:
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,894,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,896,iprot.readFieldEnd();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,898,iprot.readStructEnd();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,899,validate();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,903,validate();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,905,oprot.writeStructBegin(STRUCT_DESC);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,906,if (this.queryId != null) {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,907,oprot.writeFieldBegin(QUERY_ID_FIELD_DESC);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,908,oprot.writeString(this.queryId);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,909,oprot.writeFieldEnd();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,911,if (this.queryType != null) {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,912,oprot.writeFieldBegin(QUERY_TYPE_FIELD_DESC);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,913,oprot.writeString(this.queryType);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,914,oprot.writeFieldEnd();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,916,if (this.queryAttributes != null) {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,917,oprot.writeFieldBegin(QUERY_ATTRIBUTES_FIELD_DESC);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,919,"oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRING, this.queryAttributes.size()));"
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,920,"for (Map.Entry<String, String> _iter61 : this.queryAttributes.entrySet())"
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,922,oprot.writeString(_iter61.getKey());
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,923,oprot.writeString(_iter61.getValue());
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,925,oprot.writeMapEnd();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,927,oprot.writeFieldEnd();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,929,if (this.queryCounters != null) {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,930,oprot.writeFieldBegin(QUERY_COUNTERS_FIELD_DESC);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,932,"oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.I64, this.queryCounters.size()));"
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,933,"for (Map.Entry<String, Long> _iter62 : this.queryCounters.entrySet())"
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,935,oprot.writeString(_iter62.getKey());
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,936,oprot.writeI64(_iter62.getValue());
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,938,oprot.writeMapEnd();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,940,oprot.writeFieldEnd();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,942,if (this.stageGraph != null) {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,943,oprot.writeFieldBegin(STAGE_GRAPH_FIELD_DESC);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,944,this.stageGraph.write(oprot);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,945,oprot.writeFieldEnd();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,947,if (this.stageList != null) {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,948,oprot.writeFieldBegin(STAGE_LIST_FIELD_DESC);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,950,"oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, this.stageList.size()));"
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,951,for (Stage _iter63 : this.stageList)
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,953,_iter63.write(oprot);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,955,oprot.writeListEnd();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,957,oprot.writeFieldEnd();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,959,oprot.writeFieldBegin(DONE_FIELD_DESC);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,960,oprot.writeBool(this.done);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,961,oprot.writeFieldEnd();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,962,oprot.writeFieldBegin(STARTED_FIELD_DESC);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,963,oprot.writeBool(this.started);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,964,oprot.writeFieldEnd();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,965,oprot.writeFieldStop();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,966,oprot.writeStructEnd();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,1048,__isset_bit_vector = new BitSet(1);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,565,return Boolean.valueOf(isDone());
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Query.java,568,return Boolean.valueOf(isStarted());
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/QueryPlan.java,101,private BitSet __isset_bit_vector = new BitSet(2);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/QueryPlan.java,137,__isset_bit_vector.clear();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/QueryPlan.java,138,__isset_bit_vector.or(other.__isset_bit_vector);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/QueryPlan.java,211,__isset_bit_vector.clear(__DONE_ISSET_ID);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/QueryPlan.java,216,return __isset_bit_vector.get(__DONE_ISSET_ID);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/QueryPlan.java,220,"__isset_bit_vector.set(__DONE_ISSET_ID, value);"
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/QueryPlan.java,233,__isset_bit_vector.clear(__STARTED_ISSET_ID);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/QueryPlan.java,238,return __isset_bit_vector.get(__STARTED_ISSET_ID);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/QueryPlan.java,242,"__isset_bit_vector.set(__STARTED_ISSET_ID, value);"
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/QueryPlan.java,400,org.apache.thrift.protocol.TField field;
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/QueryPlan.java,401,iprot.readStructBegin();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/QueryPlan.java,402,while (true)
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/QueryPlan.java,404,field = iprot.readFieldBegin();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/QueryPlan.java,405,if (field.type == org.apache.thrift.protocol.TType.STOP) {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/QueryPlan.java,406,break;
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/QueryPlan.java,408,switch (field.id) {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/QueryPlan.java,409,case 1: // QUERIES
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/QueryPlan.java,410,if (field.type == org.apache.thrift.protocol.TType.LIST) {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/QueryPlan.java,412,org.apache.thrift.protocol.TList _list64 = iprot.readListBegin();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/QueryPlan.java,413,this.queries = new ArrayList<Query>(_list64.size);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/QueryPlan.java,414,for (int _i65 = 0; _i65 < _list64.size; ++_i65)
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/QueryPlan.java,416,Query _elem66; // required
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/QueryPlan.java,417,_elem66 = new Query();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/QueryPlan.java,418,_elem66.read(iprot);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/QueryPlan.java,419,this.queries.add(_elem66);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/QueryPlan.java,421,iprot.readListEnd();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/QueryPlan.java,423,} else {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/QueryPlan.java,424,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/QueryPlan.java,426,break;
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/QueryPlan.java,427,case 2: // DONE
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/QueryPlan.java,428,if (field.type == org.apache.thrift.protocol.TType.BOOL) {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/QueryPlan.java,429,this.done = iprot.readBool();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/QueryPlan.java,430,setDoneIsSet(true);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/QueryPlan.java,431,} else {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/QueryPlan.java,432,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/QueryPlan.java,434,break;
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/QueryPlan.java,435,case 3: // STARTED
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/QueryPlan.java,436,if (field.type == org.apache.thrift.protocol.TType.BOOL) {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/QueryPlan.java,437,this.started = iprot.readBool();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/QueryPlan.java,438,setStartedIsSet(true);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/QueryPlan.java,439,} else {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/QueryPlan.java,440,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/QueryPlan.java,442,break;
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/QueryPlan.java,443,default:
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/QueryPlan.java,444,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/QueryPlan.java,446,iprot.readFieldEnd();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/QueryPlan.java,448,iprot.readStructEnd();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/QueryPlan.java,449,validate();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/QueryPlan.java,453,validate();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/QueryPlan.java,455,oprot.writeStructBegin(STRUCT_DESC);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/QueryPlan.java,456,if (this.queries != null) {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/QueryPlan.java,457,oprot.writeFieldBegin(QUERIES_FIELD_DESC);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/QueryPlan.java,459,"oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, this.queries.size()));"
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/QueryPlan.java,460,for (Query _iter67 : this.queries)
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/QueryPlan.java,462,_iter67.write(oprot);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/QueryPlan.java,464,oprot.writeListEnd();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/QueryPlan.java,466,oprot.writeFieldEnd();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/QueryPlan.java,468,oprot.writeFieldBegin(DONE_FIELD_DESC);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/QueryPlan.java,469,oprot.writeBool(this.done);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/QueryPlan.java,470,oprot.writeFieldEnd();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/QueryPlan.java,471,oprot.writeFieldBegin(STARTED_FIELD_DESC);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/QueryPlan.java,472,oprot.writeBool(this.started);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/QueryPlan.java,473,oprot.writeFieldEnd();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/QueryPlan.java,474,oprot.writeFieldStop();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/QueryPlan.java,475,oprot.writeStructEnd();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/QueryPlan.java,517,__isset_bit_vector = new BitSet(1);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/QueryPlan.java,280,return Boolean.valueOf(isDone());
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/QueryPlan.java,283,return Boolean.valueOf(isStarted());
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,125,private BitSet __isset_bit_vector = new BitSet(2);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,181,__isset_bit_vector.clear();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,182,__isset_bit_vector.or(other.__isset_bit_vector);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,417,__isset_bit_vector.clear(__DONE_ISSET_ID);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,422,return __isset_bit_vector.get(__DONE_ISSET_ID);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,426,"__isset_bit_vector.set(__DONE_ISSET_ID, value);"
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,439,__isset_bit_vector.clear(__STARTED_ISSET_ID);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,444,return __isset_bit_vector.get(__STARTED_ISSET_ID);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,448,"__isset_bit_vector.set(__STARTED_ISSET_ID, value);"
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,734,org.apache.thrift.protocol.TField field;
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,735,iprot.readStructBegin();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,736,while (true)
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,738,field = iprot.readFieldBegin();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,739,if (field.type == org.apache.thrift.protocol.TType.STOP) {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,740,break;
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,742,switch (field.id) {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,743,case 1: // STAGE_ID
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,744,if (field.type == org.apache.thrift.protocol.TType.STRING) {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,745,this.stageId = iprot.readString();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,746,} else {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,747,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,749,break;
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,750,case 2: // STAGE_TYPE
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,751,if (field.type == org.apache.thrift.protocol.TType.I32) {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,752,this.stageType = StageType.findByValue(iprot.readI32());
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,753,} else {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,754,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,756,break;
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,757,case 3: // STAGE_ATTRIBUTES
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,758,if (field.type == org.apache.thrift.protocol.TType.MAP) {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,760,org.apache.thrift.protocol.TMap _map36 = iprot.readMapBegin();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,761,"this.stageAttributes = new HashMap<String,String>(2*_map36.size);"
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,762,for (int _i37 = 0; _i37 < _map36.size; ++_i37)
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,764,String _key38; // required
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,765,String _val39; // required
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,766,_key38 = iprot.readString();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,767,_val39 = iprot.readString();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,768,"this.stageAttributes.put(_key38, _val39);"
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,770,iprot.readMapEnd();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,772,} else {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,773,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,775,break;
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,776,case 4: // STAGE_COUNTERS
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,777,if (field.type == org.apache.thrift.protocol.TType.MAP) {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,779,org.apache.thrift.protocol.TMap _map40 = iprot.readMapBegin();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,780,"this.stageCounters = new HashMap<String,Long>(2*_map40.size);"
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,781,for (int _i41 = 0; _i41 < _map40.size; ++_i41)
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,783,String _key42; // required
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,784,long _val43; // required
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,785,_key42 = iprot.readString();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,786,_val43 = iprot.readI64();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,787,"this.stageCounters.put(_key42, _val43);"
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,789,iprot.readMapEnd();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,791,} else {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,792,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,794,break;
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,795,case 5: // TASK_LIST
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,796,if (field.type == org.apache.thrift.protocol.TType.LIST) {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,798,org.apache.thrift.protocol.TList _list44 = iprot.readListBegin();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,799,this.taskList = new ArrayList<Task>(_list44.size);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,800,for (int _i45 = 0; _i45 < _list44.size; ++_i45)
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,802,Task _elem46; // required
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,803,_elem46 = new Task();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,804,_elem46.read(iprot);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,805,this.taskList.add(_elem46);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,807,iprot.readListEnd();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,809,} else {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,810,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,812,break;
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,813,case 6: // DONE
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,814,if (field.type == org.apache.thrift.protocol.TType.BOOL) {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,815,this.done = iprot.readBool();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,816,setDoneIsSet(true);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,817,} else {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,818,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,820,break;
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,821,case 7: // STARTED
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,822,if (field.type == org.apache.thrift.protocol.TType.BOOL) {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,823,this.started = iprot.readBool();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,824,setStartedIsSet(true);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,825,} else {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,826,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,828,break;
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,829,default:
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,830,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,832,iprot.readFieldEnd();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,834,iprot.readStructEnd();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,835,validate();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,839,validate();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,841,oprot.writeStructBegin(STRUCT_DESC);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,842,if (this.stageId != null) {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,843,oprot.writeFieldBegin(STAGE_ID_FIELD_DESC);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,844,oprot.writeString(this.stageId);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,845,oprot.writeFieldEnd();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,847,if (this.stageType != null) {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,848,oprot.writeFieldBegin(STAGE_TYPE_FIELD_DESC);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,849,oprot.writeI32(this.stageType.getValue());
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,850,oprot.writeFieldEnd();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,852,if (this.stageAttributes != null) {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,853,oprot.writeFieldBegin(STAGE_ATTRIBUTES_FIELD_DESC);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,855,"oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRING, this.stageAttributes.size()));"
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,856,"for (Map.Entry<String, String> _iter47 : this.stageAttributes.entrySet())"
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,858,oprot.writeString(_iter47.getKey());
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,859,oprot.writeString(_iter47.getValue());
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,861,oprot.writeMapEnd();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,863,oprot.writeFieldEnd();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,865,if (this.stageCounters != null) {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,866,oprot.writeFieldBegin(STAGE_COUNTERS_FIELD_DESC);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,868,"oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.I64, this.stageCounters.size()));"
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,869,"for (Map.Entry<String, Long> _iter48 : this.stageCounters.entrySet())"
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,871,oprot.writeString(_iter48.getKey());
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,872,oprot.writeI64(_iter48.getValue());
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,874,oprot.writeMapEnd();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,876,oprot.writeFieldEnd();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,878,if (this.taskList != null) {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,879,oprot.writeFieldBegin(TASK_LIST_FIELD_DESC);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,881,"oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, this.taskList.size()));"
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,882,for (Task _iter49 : this.taskList)
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,884,_iter49.write(oprot);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,886,oprot.writeListEnd();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,888,oprot.writeFieldEnd();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,890,oprot.writeFieldBegin(DONE_FIELD_DESC);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,891,oprot.writeBool(this.done);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,892,oprot.writeFieldEnd();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,893,oprot.writeFieldBegin(STARTED_FIELD_DESC);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,894,oprot.writeBool(this.started);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,895,oprot.writeFieldEnd();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,896,oprot.writeFieldStop();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,897,oprot.writeStructEnd();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,971,__isset_bit_vector = new BitSet(1);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,530,return Boolean.valueOf(isDone());
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Stage.java,533,return Boolean.valueOf(isStarted());
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,39,private Graph operatorGraph; // required
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,40,private List<Operator> operatorList; // required
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,130,private BitSet __isset_bit_vector = new BitSet(2);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,186,__isset_bit_vector.clear();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,187,__isset_bit_vector.or(other.__isset_bit_vector);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,449,__isset_bit_vector.clear(__DONE_ISSET_ID);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,454,return __isset_bit_vector.get(__DONE_ISSET_ID);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,458,"__isset_bit_vector.set(__DONE_ISSET_ID, value);"
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,471,__isset_bit_vector.clear(__STARTED_ISSET_ID);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,476,return __isset_bit_vector.get(__STARTED_ISSET_ID);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,480,"__isset_bit_vector.set(__STARTED_ISSET_ID, value);"
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,798,org.apache.thrift.protocol.TField field;
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,799,iprot.readStructBegin();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,800,while (true)
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,802,field = iprot.readFieldBegin();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,803,if (field.type == org.apache.thrift.protocol.TType.STOP) {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,804,break;
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,806,switch (field.id) {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,807,case 1: // TASK_ID
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,808,if (field.type == org.apache.thrift.protocol.TType.STRING) {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,809,this.taskId = iprot.readString();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,810,} else {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,811,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,813,break;
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,814,case 2: // TASK_TYPE
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,815,if (field.type == org.apache.thrift.protocol.TType.I32) {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,816,this.taskType = TaskType.findByValue(iprot.readI32());
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,817,} else {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,818,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,820,break;
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,821,case 3: // TASK_ATTRIBUTES
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,822,if (field.type == org.apache.thrift.protocol.TType.MAP) {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,824,org.apache.thrift.protocol.TMap _map22 = iprot.readMapBegin();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,825,"this.taskAttributes = new HashMap<String,String>(2*_map22.size);"
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,826,for (int _i23 = 0; _i23 < _map22.size; ++_i23)
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,828,String _key24; // required
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,829,String _val25; // required
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,830,_key24 = iprot.readString();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,831,_val25 = iprot.readString();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,832,"this.taskAttributes.put(_key24, _val25);"
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,834,iprot.readMapEnd();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,836,} else {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,837,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,839,break;
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,840,case 4: // TASK_COUNTERS
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,841,if (field.type == org.apache.thrift.protocol.TType.MAP) {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,843,org.apache.thrift.protocol.TMap _map26 = iprot.readMapBegin();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,844,"this.taskCounters = new HashMap<String,Long>(2*_map26.size);"
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,845,for (int _i27 = 0; _i27 < _map26.size; ++_i27)
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,847,String _key28; // required
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,848,long _val29; // required
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,849,_key28 = iprot.readString();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,850,_val29 = iprot.readI64();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,851,"this.taskCounters.put(_key28, _val29);"
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,853,iprot.readMapEnd();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,855,} else {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,856,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,858,break;
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,859,case 5: // OPERATOR_GRAPH
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,860,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,861,this.operatorGraph = new Graph();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,862,this.operatorGraph.read(iprot);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,863,} else {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,864,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,866,break;
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,867,case 6: // OPERATOR_LIST
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,868,if (field.type == org.apache.thrift.protocol.TType.LIST) {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,870,org.apache.thrift.protocol.TList _list30 = iprot.readListBegin();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,871,this.operatorList = new ArrayList<Operator>(_list30.size);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,872,for (int _i31 = 0; _i31 < _list30.size; ++_i31)
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,874,Operator _elem32; // required
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,875,_elem32 = new Operator();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,876,_elem32.read(iprot);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,877,this.operatorList.add(_elem32);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,879,iprot.readListEnd();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,881,} else {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,882,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,884,break;
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,885,case 7: // DONE
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,886,if (field.type == org.apache.thrift.protocol.TType.BOOL) {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,887,this.done = iprot.readBool();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,888,setDoneIsSet(true);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,889,} else {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,890,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,892,break;
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,893,case 8: // STARTED
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,894,if (field.type == org.apache.thrift.protocol.TType.BOOL) {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,895,this.started = iprot.readBool();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,896,setStartedIsSet(true);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,897,} else {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,898,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,900,break;
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,901,default:
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,902,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,904,iprot.readFieldEnd();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,906,iprot.readStructEnd();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,907,validate();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,911,validate();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,913,oprot.writeStructBegin(STRUCT_DESC);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,914,if (this.taskId != null) {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,915,oprot.writeFieldBegin(TASK_ID_FIELD_DESC);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,916,oprot.writeString(this.taskId);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,917,oprot.writeFieldEnd();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,919,if (this.taskType != null) {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,920,oprot.writeFieldBegin(TASK_TYPE_FIELD_DESC);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,921,oprot.writeI32(this.taskType.getValue());
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,922,oprot.writeFieldEnd();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,924,if (this.taskAttributes != null) {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,925,oprot.writeFieldBegin(TASK_ATTRIBUTES_FIELD_DESC);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,927,"oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRING, this.taskAttributes.size()));"
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,928,"for (Map.Entry<String, String> _iter33 : this.taskAttributes.entrySet())"
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,930,oprot.writeString(_iter33.getKey());
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,931,oprot.writeString(_iter33.getValue());
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,933,oprot.writeMapEnd();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,935,oprot.writeFieldEnd();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,937,if (this.taskCounters != null) {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,938,oprot.writeFieldBegin(TASK_COUNTERS_FIELD_DESC);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,940,"oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.I64, this.taskCounters.size()));"
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,941,"for (Map.Entry<String, Long> _iter34 : this.taskCounters.entrySet())"
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,943,oprot.writeString(_iter34.getKey());
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,944,oprot.writeI64(_iter34.getValue());
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,946,oprot.writeMapEnd();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,948,oprot.writeFieldEnd();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,950,if (this.operatorGraph != null) {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,951,if (isSetOperatorGraph()) {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,952,oprot.writeFieldBegin(OPERATOR_GRAPH_FIELD_DESC);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,953,this.operatorGraph.write(oprot);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,954,oprot.writeFieldEnd();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,957,if (this.operatorList != null) {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,958,if (isSetOperatorList()) {
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,959,oprot.writeFieldBegin(OPERATOR_LIST_FIELD_DESC);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,961,"oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, this.operatorList.size()));"
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,962,for (Operator _iter35 : this.operatorList)
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,964,_iter35.write(oprot);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,966,oprot.writeListEnd();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,968,oprot.writeFieldEnd();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,971,oprot.writeFieldBegin(DONE_FIELD_DESC);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,972,oprot.writeBool(this.done);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,973,oprot.writeFieldEnd();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,974,oprot.writeFieldBegin(STARTED_FIELD_DESC);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,975,oprot.writeBool(this.started);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,976,oprot.writeFieldEnd();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,977,oprot.writeFieldStop();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,978,oprot.writeStructEnd();
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,1064,__isset_bit_vector = new BitSet(1);
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,573,return Boolean.valueOf(isDone());
ql/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/ql/plan/api/Task.java,576,return Boolean.valueOf(isStarted());
ql/src/java/org/apache/hadoop/hive/ql/exec/ExplainTask.java,21,import static org.apache.hadoop.hive.serde.Constants.STRING_TYPE_NAME;
ql/src/java/org/apache/hadoop/hive/ql/exec/ExplainTask.java,66,JSONObject outJSONObject = new JSONObject();
ql/src/java/org/apache/hadoop/hive/ql/exec/ExplainTask.java,149,JSONObject json = jsonOutput ? new JSONObject() : null;
ql/src/java/org/apache/hadoop/hive/ql/exec/ExplainTask.java,280,JSONObject json = jsonOutput ? new JSONObject() : null;
ql/src/java/org/apache/hadoop/hive/ql/exec/ExplainTask.java,410,JSONObject ret = new JSONObject();
ql/src/java/org/apache/hadoop/hive/ql/exec/ExplainTask.java,475,JSONObject json = jsonOutput ? new JSONObject() : null;
ql/src/java/org/apache/hadoop/hive/ql/exec/ExplainTask.java,591,JSONObject json = jsonOutput ? new JSONObject() : null;
ql/src/java/org/apache/hadoop/hive/ql/exec/ExplainTask.java,616,JSONObject json = jsonOutput ? new JSONObject() : null;
ql/src/java/org/apache/hadoop/hive/ql/exec/ExplainTask.java,75,if (out != null) {
ql/src/java/org/apache/hadoop/hive/ql/exec/ExplainTask.java,76,out.println();
ql/src/java/org/apache/hadoop/hive/ql/exec/ExplainTask.java,68,if (jsonOutput) {
ql/src/java/org/apache/hadoop/hive/ql/exec/ExplainTask.java,79,if (jsonOutput) {
ql/src/java/org/apache/hadoop/hive/ql/exec/ExplainTask.java,87,if (out != null) {
ql/src/java/org/apache/hadoop/hive/ql/exec/ExplainTask.java,88,out.println();
ql/src/java/org/apache/hadoop/hive/ql/exec/ExplainTask.java,91,if (jsonOutput) {
ql/src/java/org/apache/hadoop/hive/ql/exec/ExplainTask.java,98,if (jsonOutput) {
ql/src/java/org/apache/hadoop/hive/ql/exec/ExplainTask.java,611,if (out != null) {
ql/src/java/org/apache/hadoop/hive/ql/exec/ExplainTask.java,545,out.println();
ql/src/java/org/apache/hadoop/hive/ql/exec/ExplainTask.java,168,if (jsonOutput) {
ql/src/java/org/apache/hadoop/hive/ql/exec/ExplainTask.java,92,"outJSONObject.put(""STAGE DEPENDENCIES"", jsonDependencies);"
ql/src/java/org/apache/hadoop/hive/ql/exec/ExplainTask.java,539,if (jsonOutput) {
ql/src/java/org/apache/hadoop/hive/ql/exec/ExplainTask.java,99,"outJSONObject.put(""STAGE PLANS"", jsonPlan);"
ql/src/java/org/apache/hadoop/hive/ql/exec/FetchOperator.java,179,org.apache.hadoop.hive.metastore.api.Constants.META_TABLE_PARTITION_COLUMNS);
ql/src/java/org/apache/hadoop/hive/ql/exec/JoinUtil.java,340,"org.apache.hadoop.hive.serde.Constants.SERIALIZATION_FORMAT, """""
ql/src/java/org/apache/hadoop/hive/ql/exec/JoinUtil.java,342,"org.apache.hadoop.hive.serde.Constants.LIST_COLUMNS, colNames"
ql/src/java/org/apache/hadoop/hive/ql/exec/JoinUtil.java,344,"org.apache.hadoop.hive.serde.Constants.LIST_COLUMN_TYPES,"
ql/src/java/org/apache/hadoop/hive/ql/exec/JoinUtil.java,112,"Iterator<Map.Entry<Byte, List<ExprNodeDesc>>> entryIter = inputMap"
ql/src/java/org/apache/hadoop/hive/ql/exec/JoinUtil.java,113,.entrySet().iterator();
ql/src/java/org/apache/hadoop/hive/ql/exec/JoinUtil.java,114,while (entryIter.hasNext()) {
ql/src/java/org/apache/hadoop/hive/ql/exec/JoinUtil.java,115,"Map.Entry<Byte, List<ExprNodeDesc>> e = entryIter.next();"
ql/src/java/org/apache/hadoop/hive/ql/exec/JoinUtil.java,116,Byte key = order[e.getKey()];
ql/src/java/org/apache/hadoop/hive/ql/exec/JoinUtil.java,120,List<ExprNodeDesc> expr = e.getValue();
ql/src/java/org/apache/hadoop/hive/ql/exec/JoinUtil.java,121,int sz = expr.size();
ql/src/java/org/apache/hadoop/hive/ql/exec/JoinUtil.java,122,total += sz;
ql/src/java/org/apache/hadoop/hive/ql/exec/JoinUtil.java,124,for (int j = 0; j < sz; j++) {
ql/src/java/org/apache/hadoop/hive/ql/exec/JoinUtil.java,125,if(key == (byte) posBigTableAlias){
ql/src/java/org/apache/hadoop/hive/ql/exec/JoinUtil.java,127,}else{
ql/src/java/org/apache/hadoop/hive/ql/exec/JoinUtil.java,128,valueFields.add(ExprNodeEvaluatorFactory.get(expr.get(j)));
ql/src/java/org/apache/hadoop/hive/ql/exec/JoinUtil.java,71,fieldOIList.add(exprList.get(i).initialize(inputObjInspector[alias]));
ql/src/java/org/apache/hadoop/hive/ql/exec/MapOperator.java,250,.getProperty(org.apache.hadoop.hive.metastore.api.Constants.META_TABLE_PARTITION_COLUMNS);
ql/src/java/org/apache/hadoop/hive/ql/exec/Utilities.java,130,import org.apache.hadoop.hive.serde.Constants;
ql/src/java/org/apache/hadoop/hive/ql/exec/Utilities.java,698,"org.apache.hadoop.hive.serde.Constants.SERIALIZATION_FORMAT, """" + Utilities.ctrlaCode,"
ql/src/java/org/apache/hadoop/hive/ql/exec/Utilities.java,699,"org.apache.hadoop.hive.serde.Constants.LIST_COLUMNS, cols,"
ql/src/java/org/apache/hadoop/hive/ql/exec/Utilities.java,700,"org.apache.hadoop.hive.serde.Constants.LIST_COLUMN_TYPES, colTypes)));"
ql/src/java/org/apache/hadoop/hive/ql/exec/Utilities.java,1555,String colNames = props.getProperty(Constants.LIST_COLUMNS);
ql/src/java/org/apache/hadoop/hive/ql/exec/Utilities.java,1569,String colNames = props.getProperty(Constants.LIST_COLUMN_TYPES);
ql/src/java/org/apache/hadoop/hive/ql/exec/Utilities.java,1914,"jobConf.set(Constants.LIST_COLUMNS, columnNamesString);"
ql/src/java/org/apache/hadoop/hive/ql/exec/Utilities.java,1930,"jobConf.set(Constants.LIST_COLUMN_TYPES, columnTypesString);"
ql/src/java/org/apache/hadoop/hive/ql/exec/Utilities.java,2030,if (type.getTypeName().equals(Constants.STRING_TYPE_NAME)) {
ql/src/java/org/apache/hadoop/hive/ql/exec/Utilities.java,379,if (planPath != null) {
ql/src/java/org/apache/hadoop/hive/ql/exec/Utilities.java,707,"public static PartitionDesc getPartitionDescFromTableDesc(TableDesc tblDesc, Partition part)"
ql/src/java/org/apache/hadoop/hive/ql/exec/Utilities.java,708,throws HiveException {
ql/src/java/org/apache/hadoop/hive/ql/exec/Utilities.java,709,"return new PartitionDesc(part, tblDesc);"
ql/src/java/org/apache/hadoop/hive/ql/exec/Utilities.java,1477,URLClassLoader loader = (URLClassLoader) cloader;
ql/src/java/org/apache/hadoop/hive/ql/exec/Utilities.java,1478,List<URL> curPath = Arrays.asList(loader.getURLs());
ql/src/java/org/apache/hadoop/hive/ql/exec/Utilities.java,1479,ArrayList<URL> newPath = new ArrayList<URL>();
ql/src/java/org/apache/hadoop/hive/ql/exec/Utilities.java,1482,for (URL onePath : curPath) {
ql/src/java/org/apache/hadoop/hive/ql/exec/Utilities.java,1483,newPath.add(onePath);
ql/src/java/org/apache/hadoop/hive/ql/exec/Utilities.java,1485,curPath = newPath;
ql/src/java/org/apache/hadoop/hive/ql/exec/Utilities.java,1499,"return new URLClassLoader(curPath.toArray(new URL[0]), loader);"
ql/src/java/org/apache/hadoop/hive/ql/exec/Utilities.java,1523,loader = new URLClassLoader(newPath.toArray(new URL[0]));
ql/src/java/org/apache/hadoop/hive/ql/io/HiveIgnoreKeyTextOutputFormat.java,29,import org.apache.hadoop.hive.serde.Constants;
ql/src/java/org/apache/hadoop/hive/ql/io/HiveIgnoreKeyTextOutputFormat.java,71,"Constants.LINE_DELIM, ""\n"");"
ql/src/java/org/apache/hadoop/hive/ql/metadata/Hive.java,22,import static org.apache.hadoop.hive.metastore.api.Constants.META_TABLE_STORAGE;
ql/src/java/org/apache/hadoop/hive/ql/metadata/Hive.java,23,import static org.apache.hadoop.hive.serde.Constants.COLLECTION_DELIM;
ql/src/java/org/apache/hadoop/hive/ql/metadata/Hive.java,24,import static org.apache.hadoop.hive.serde.Constants.ESCAPE_CHAR;
ql/src/java/org/apache/hadoop/hive/ql/metadata/Hive.java,25,import static org.apache.hadoop.hive.serde.Constants.FIELD_DELIM;
ql/src/java/org/apache/hadoop/hive/ql/metadata/Hive.java,26,import static org.apache.hadoop.hive.serde.Constants.LINE_DELIM;
ql/src/java/org/apache/hadoop/hive/ql/metadata/Hive.java,27,import static org.apache.hadoop.hive.serde.Constants.MAPKEY_DELIM;
ql/src/java/org/apache/hadoop/hive/ql/metadata/Hive.java,28,import static org.apache.hadoop.hive.serde.Constants.SERIALIZATION_FORMAT;
ql/src/java/org/apache/hadoop/hive/ql/metadata/Hive.java,29,import static org.apache.hadoop.hive.serde.Constants.STRING_TYPE_NAME;
ql/src/java/org/apache/hadoop/hive/ql/metadata/Hive.java,59,import org.apache.hadoop.hive.metastore.api.Constants;
ql/src/java/org/apache/hadoop/hive/ql/metadata/Hive.java,373,newTbl.getParameters().remove(Constants.DDL_TIME);
ql/src/java/org/apache/hadoop/hive/ql/metadata/Hive.java,422,newPart.getParameters().remove(Constants.DDL_TIME);
ql/src/java/org/apache/hadoop/hive/ql/metadata/Hive.java,524,tbl.getParameters().remove(Constants.DDL_TIME);
ql/src/java/org/apache/hadoop/hive/ql/metadata/Hive.java,2010,if (oldPath != null) {
ql/src/java/org/apache/hadoop/hive/ql/metadata/Hive.java,2028,if (!fs.exists(destf.getParent())) {
ql/src/java/org/apache/hadoop/hive/ql/metadata/Hive.java,2029,fs.mkdirs(destf.getParent());
ql/src/java/org/apache/hadoop/hive/ql/metadata/Hive.java,2031,if (fs.exists(destf)) {
ql/src/java/org/apache/hadoop/hive/ql/metadata/Hive.java,2032,"fs.delete(destf, true);"
ql/src/java/org/apache/hadoop/hive/ql/metadata/Hive.java,2035,"boolean b = fs.rename(srcs[0].getPath(), destf);"
ql/src/java/org/apache/hadoop/hive/ql/metadata/Hive.java,2043,fs.mkdirs(destf);
ql/src/java/org/apache/hadoop/hive/ql/metadata/Hive.java,927,Table table = new Table(tTable);
ql/src/java/org/apache/hadoop/hive/ql/metadata/Hive.java,929,table.checkValidity();
ql/src/java/org/apache/hadoop/hive/ql/metadata/Hive.java,930,return table;
ql/src/java/org/apache/hadoop/hive/ql/metadata/Hive.java,753,"public boolean dropIndex(String db_name, String tbl_name, String index_name, boolean deleteData) throws HiveException {"
ql/src/java/org/apache/hadoop/hive/ql/metadata/Hive.java,1204,if (validPartitions.size() == 0) {
ql/src/java/org/apache/hadoop/hive/ql/metadata/Hive.java,1208,if (validPartitions.size() > conf.getIntVar(HiveConf.ConfVars.DYNAMICPARTITIONMAXPARTS)) {
ql/src/java/org/apache/hadoop/hive/ql/metadata/Hive.java,1209,"throw new HiveException(""Number of dynamic partitions created is "" + validPartitions.size()"
ql/src/java/org/apache/hadoop/hive/ql/metadata/Hive.java,1213,"+ "" to at least "" + validPartitions.size() + '.');"
ql/src/java/org/apache/hadoop/hive/ql/metadata/Hive.java,522,tbl.checkValidity();
ql/src/java/org/apache/hadoop/hive/ql/metadata/Table.java,49,import org.apache.hadoop.hive.serde.Constants;
ql/src/java/org/apache/hadoop/hive/ql/metadata/Table.java,138,"sd.getSerdeInfo().getParameters().put(Constants.SERIALIZATION_FORMAT, ""1"");"
ql/src/java/org/apache/hadoop/hive/ql/metadata/Table.java,276,org.apache.hadoop.hive.metastore.api.Constants.META_TABLE_STORAGE));
ql/src/java/org/apache/hadoop/hive/ql/metadata/Table.java,761,org.apache.hadoop.hive.metastore.api.Constants.META_TABLE_STORAGE)
ql/src/java/org/apache/hadoop/hive/ql/metadata/Table.java,201,if (getPartCols() != null) {
ql/src/java/org/apache/hadoop/hive/ql/metadata/Table.java,203,Iterator<FieldSchema> partColsIter = getPartCols().iterator();
ql/src/java/org/apache/hadoop/hive/ql/metadata/Table.java,204,while (partColsIter.hasNext()) {
ql/src/java/org/apache/hadoop/hive/ql/metadata/Table.java,205,String partCol = partColsIter.next().getName();
ql/src/java/org/apache/hadoop/hive/ql/metadata/Table.java,206,if (colNames.contains(partCol.toLowerCase())) {
ql/src/java/org/apache/hadoop/hive/ql/metadata/Table.java,207,"throw new HiveException(""Partition column name "" + partCol"
ql/src/java/org/apache/hadoop/hive/ql/metadata/Table.java,208,"+ "" conflicts with table columns."");"
ql/src/java/org/apache/hadoop/hive/ql/metadata/Table.java,212,return;
ql/src/java/org/apache/hadoop/hive/ql/metadata/Table.java,492,"LOG.error(""Unable to get field from serde: "" + getSerializationLib(), e);"
ql/src/java/org/apache/hadoop/hive/ql/metadata/Table.java,155,public void checkValidity() throws HiveException {
ql/src/java/org/apache/hadoop/hive/ql/metadata/Table.java,159,|| !MetaStoreUtils.validateName(name)) {
ql/src/java/org/apache/hadoop/hive/ql/optimizer/GenMRFileSink1.java,247,org.apache.hadoop.hive.metastore.api.Constants.META_TABLE_PARTITION_COLUMNS);
ql/src/java/org/apache/hadoop/hive/ql/optimizer/GenMRFileSink1.java,373,"org.apache.hadoop.hive.metastore.api.Constants.META_TABLE_PARTITION_COLUMNS,"
ql/src/java/org/apache/hadoop/hive/ql/optimizer/GenMRFileSink1.java,378,org.apache.hadoop.hive.metastore.api.Constants.META_TABLE_PARTITION_COLUMNS);
ql/src/java/org/apache/hadoop/hive/ql/optimizer/MapJoinProcessor.java,77,import org.apache.hadoop.hive.serde.Constants;
ql/src/java/org/apache/hadoop/hive/ql/optimizer/MapJoinProcessor.java,298,int pos = 0;
ql/src/java/org/apache/hadoop/hive/ql/optimizer/MapJoinProcessor.java,319,"keyExprMap.put(tag, keys);"
ql/src/java/org/apache/hadoop/hive/ql/optimizer/MapJoinProcessor.java,323,"columnTransfer.put(tag, map);"
ql/src/java/org/apache/hadoop/hive/ql/parse/BaseSemanticAnalyzer.java,56,import org.apache.hadoop.hive.serde.Constants;
ql/src/java/org/apache/hadoop/hive/ql/parse/BaseSemanticAnalyzer.java,541,"return Constants.LIST_TYPE_NAME + ""<"""
ql/src/java/org/apache/hadoop/hive/ql/parse/BaseSemanticAnalyzer.java,544,"return Constants.MAP_TYPE_NAME + ""<"""
ql/src/java/org/apache/hadoop/hive/ql/parse/BaseSemanticAnalyzer.java,558,"String typeStr = Constants.STRUCT_TYPE_NAME + ""<"";"
ql/src/java/org/apache/hadoop/hive/ql/parse/BaseSemanticAnalyzer.java,580,"String typeStr = Constants.UNION_TYPE_NAME + ""<"";"
ql/src/java/org/apache/hadoop/hive/ql/parse/ImportSemanticAnalyzer.java,58,import org.apache.hadoop.hive.serde.Constants;
ql/src/java/org/apache/hadoop/hive/ql/parse/ImportSemanticAnalyzer.java,455,.getSerdeParam(Constants.SERIALIZATION_FORMAT);
ql/src/java/org/apache/hadoop/hive/ql/parse/ImportSemanticAnalyzer.java,457,Constants.SERIALIZATION_FORMAT);
ql/src/java/org/apache/hadoop/hive/ql/parse/TypeCheckProcFactory.java,58,import org.apache.hadoop.hive.serde.Constants;
ql/src/java/org/apache/hadoop/hive/ql/parse/TypeCheckProcFactory.java,482,Constants.BOOLEAN_TYPE_NAME);
ql/src/java/org/apache/hadoop/hive/ql/parse/TypeCheckProcFactory.java,484,Constants.TINYINT_TYPE_NAME);
ql/src/java/org/apache/hadoop/hive/ql/parse/TypeCheckProcFactory.java,486,Constants.SMALLINT_TYPE_NAME);
ql/src/java/org/apache/hadoop/hive/ql/parse/TypeCheckProcFactory.java,488,Constants.INT_TYPE_NAME);
ql/src/java/org/apache/hadoop/hive/ql/parse/TypeCheckProcFactory.java,490,Constants.BIGINT_TYPE_NAME);
ql/src/java/org/apache/hadoop/hive/ql/parse/TypeCheckProcFactory.java,492,Constants.FLOAT_TYPE_NAME);
ql/src/java/org/apache/hadoop/hive/ql/parse/TypeCheckProcFactory.java,494,Constants.DOUBLE_TYPE_NAME);
ql/src/java/org/apache/hadoop/hive/ql/parse/TypeCheckProcFactory.java,496,Constants.STRING_TYPE_NAME);
ql/src/java/org/apache/hadoop/hive/ql/parse/TypeCheckProcFactory.java,498,Constants.BINARY_TYPE_NAME);
ql/src/java/org/apache/hadoop/hive/ql/parse/TypeCheckProcFactory.java,500,Constants.TIMESTAMP_TYPE_NAME);
ql/src/java/org/apache/hadoop/hive/ql/parse/TypeCheckProcFactory.java,706,"Constants.TINYINT_TYPE_NAME.toLowerCase(),"
ql/src/java/org/apache/hadoop/hive/ql/parse/TypeCheckProcFactory.java,707,"Constants.SMALLINT_TYPE_NAME.toLowerCase(),"
ql/src/java/org/apache/hadoop/hive/ql/parse/TypeCheckProcFactory.java,708,"Constants.INT_TYPE_NAME.toLowerCase(),"
ql/src/java/org/apache/hadoop/hive/ql/parse/TypeCheckProcFactory.java,709,"Constants.BIGINT_TYPE_NAME.toLowerCase(),"
ql/src/java/org/apache/hadoop/hive/ql/parse/TypeCheckProcFactory.java,710,"Constants.FLOAT_TYPE_NAME.toLowerCase(),"
ql/src/java/org/apache/hadoop/hive/ql/parse/TypeCheckProcFactory.java,711,"Constants.DOUBLE_TYPE_NAME.toLowerCase(),"
ql/src/java/org/apache/hadoop/hive/ql/parse/TypeCheckProcFactory.java,712,Constants.STRING_TYPE_NAME.toLowerCase()
ql/src/java/org/apache/hadoop/hive/ql/parse/TypeCheckProcFactory.java,726,if (columnType.equalsIgnoreCase(Constants.TINYINT_TYPE_NAME)) {
ql/src/java/org/apache/hadoop/hive/ql/parse/TypeCheckProcFactory.java,728,} else if (columnType.equalsIgnoreCase(Constants.SMALLINT_TYPE_NAME)) {
ql/src/java/org/apache/hadoop/hive/ql/parse/TypeCheckProcFactory.java,730,} else if (columnType.equalsIgnoreCase(Constants.INT_TYPE_NAME)) {
ql/src/java/org/apache/hadoop/hive/ql/parse/TypeCheckProcFactory.java,732,} else if (columnType.equalsIgnoreCase(Constants.BIGINT_TYPE_NAME)) {
ql/src/java/org/apache/hadoop/hive/ql/parse/TypeCheckProcFactory.java,734,} else if (columnType.equalsIgnoreCase(Constants.FLOAT_TYPE_NAME)) {
ql/src/java/org/apache/hadoop/hive/ql/parse/TypeCheckProcFactory.java,736,} else if (columnType.equalsIgnoreCase(Constants.DOUBLE_TYPE_NAME)
ql/src/java/org/apache/hadoop/hive/ql/parse/TypeCheckProcFactory.java,737,|| (columnType.equalsIgnoreCase(Constants.STRING_TYPE_NAME)
ql/src/java/org/apache/hadoop/hive/ql/parse/TypeCheckProcFactory.java,738,&& !constType.equalsIgnoreCase(Constants.BIGINT_TYPE_NAME))) {
ql/src/java/org/apache/hadoop/hive/ql/parse/TypeCheckProcFactory.java,750,&& !columnType.equals(Constants.STRING_TYPE_NAME))) {
ql/src/java/org/apache/hadoop/hive/ql/parse/TypeCheckProcFactory.java,748,if (triedDouble ||
ql/src/java/org/apache/hadoop/hive/ql/plan/ExprNodeConstantDesc.java,23,import org.apache.hadoop.hive.serde.Constants;
ql/src/java/org/apache/hadoop/hive/ql/plan/ExprNodeConstantDesc.java,84,if (typeInfo.getTypeName().equals(Constants.STRING_TYPE_NAME)) {
ql/src/java/org/apache/hadoop/hive/ql/plan/ExprNodeConstantDesc.java,91,@Override
ql/src/java/org/apache/hadoop/hive/ql/plan/ExprNodeConstantDesc.java,79,public String getExprString() {
ql/src/java/org/apache/hadoop/hive/ql/plan/ExprNodeConstantDesc.java,87,return value.toString();
ql/src/java/org/apache/hadoop/hive/ql/plan/PartitionDesc.java,83,.getProperty(org.apache.hadoop.hive.serde.Constants.SERIALIZATION_LIB);
ql/src/java/org/apache/hadoop/hive/ql/plan/PartitionDesc.java,96,.getProperty(org.apache.hadoop.hive.serde.Constants.SERIALIZATION_LIB);
ql/src/java/org/apache/hadoop/hive/ql/plan/PartitionDesc.java,109,properties.getProperty(org.apache.hadoop.hive.serde.Constants.SERIALIZATION_LIB));
ql/src/java/org/apache/hadoop/hive/ql/plan/PartitionDesc.java,117,org.apache.hadoop.hive.serde.Constants.SERIALIZATION_LIB);
ql/src/java/org/apache/hadoop/hive/ql/plan/PartitionDesc.java,217,org.apache.hadoop.hive.metastore.api.Constants.META_TABLE_NAME);
ql/src/java/org/apache/hadoop/hive/ql/plan/PlanUtils.java,49,import org.apache.hadoop.hive.serde.Constants;
ql/src/java/org/apache/hadoop/hive/ql/plan/PlanUtils.java,175,"Constants.SERIALIZATION_FORMAT, separatorCode, Constants.LIST_COLUMNS,"
ql/src/java/org/apache/hadoop/hive/ql/plan/PlanUtils.java,179,"properties.setProperty(Constants.FIELD_DELIM, separatorCode);"
ql/src/java/org/apache/hadoop/hive/ql/plan/PlanUtils.java,183,"properties.setProperty(Constants.LIST_COLUMN_TYPES, columnTypes);"
ql/src/java/org/apache/hadoop/hive/ql/plan/PlanUtils.java,187,"properties.setProperty(Constants.SERIALIZATION_LAST_COLUMN_TAKES_REST,"
ql/src/java/org/apache/hadoop/hive/ql/plan/PlanUtils.java,220,"tblDesc.getProperties().setProperty(Constants.ESCAPE_CHAR, ""\\"");"
ql/src/java/org/apache/hadoop/hive/ql/plan/PlanUtils.java,254,"properties.setProperty(Constants.COLLECTION_DELIM, crtTblDesc"
ql/src/java/org/apache/hadoop/hive/ql/plan/PlanUtils.java,259,"properties.setProperty(Constants.MAPKEY_DELIM, crtTblDesc"
ql/src/java/org/apache/hadoop/hive/ql/plan/PlanUtils.java,264,"properties.setProperty(Constants.ESCAPE_CHAR, crtTblDesc"
ql/src/java/org/apache/hadoop/hive/ql/plan/PlanUtils.java,269,"properties.setProperty(Constants.LINE_DELIM, crtTblDesc.getLineDelim());"
ql/src/java/org/apache/hadoop/hive/ql/plan/PlanUtils.java,273,"properties.setProperty(org.apache.hadoop.hive.metastore.api.Constants.META_TABLE_NAME,"
ql/src/java/org/apache/hadoop/hive/ql/plan/PlanUtils.java,303,"org.apache.hadoop.hive.serde.Constants.SERIALIZATION_FORMAT,"
ql/src/java/org/apache/hadoop/hive/ql/plan/PlanUtils.java,314,"Utilities.makeProperties(Constants.LIST_COLUMNS, MetaStoreUtils"
ql/src/java/org/apache/hadoop/hive/ql/plan/PlanUtils.java,316,"Constants.LIST_COLUMN_TYPES, MetaStoreUtils"
ql/src/java/org/apache/hadoop/hive/ql/plan/PlanUtils.java,318,"Constants.SERIALIZATION_SORT_ORDER, order));"
ql/src/java/org/apache/hadoop/hive/ql/plan/PlanUtils.java,330,"Constants.ESCAPE_CHAR, ""\\""));"
ql/src/java/org/apache/hadoop/hive/ql/plan/PlanUtils.java,343,"Constants.ESCAPE_CHAR, ""\\""));"
ql/src/java/org/apache/hadoop/hive/ql/plan/PlanUtils.java,353,"Constants.LIST_COLUMNS, MetaStoreUtils"
ql/src/java/org/apache/hadoop/hive/ql/plan/PlanUtils.java,355,"Constants.LIST_COLUMN_TYPES, MetaStoreUtils"
ql/src/java/org/apache/hadoop/hive/ql/plan/PlanUtils.java,357,"Constants.ESCAPE_CHAR, ""\\""));"
ql/src/java/org/apache/hadoop/hive/ql/plan/PlanUtils.java,366,"Constants.LIST_COLUMNS, MetaStoreUtils"
ql/src/java/org/apache/hadoop/hive/ql/plan/PlanUtils.java,368,"Constants.LIST_COLUMN_TYPES, MetaStoreUtils"
ql/src/java/org/apache/hadoop/hive/ql/plan/PlanUtils.java,370,"Constants.ESCAPE_CHAR, ""\\""));"
ql/src/java/org/apache/hadoop/hive/ql/plan/PlanUtils.java,690,org.apache.hadoop.hive.metastore.api.Constants.META_TABLE_STORAGE));
ql/src/java/org/apache/hadoop/hive/ql/plan/PlanUtils.java,401,if (cols.size() - length > 0) {
ql/src/java/org/apache/hadoop/hive/ql/plan/PlanUtils.java,548,keyTable = getReduceKeyTableDesc(getFieldSchemasFromColumnListWithLength(
ql/src/java/org/apache/hadoop/hive/ql/plan/PlanUtils.java,549,"keyCols, distinctColIndices, outputKeyColumnNames, numKeys, """"),"
ql/src/java/org/apache/hadoop/hive/ql/plan/PlanUtils.java,550,order);
ql/src/java/org/apache/hadoop/hive/ql/plan/ReduceSinkDesc.java,197,org.apache.hadoop.hive.serde.Constants.SERIALIZATION_SORT_ORDER);
ql/src/java/org/apache/hadoop/hive/ql/plan/ReduceSinkDesc.java,202,"org.apache.hadoop.hive.serde.Constants.SERIALIZATION_SORT_ORDER,"
ql/src/java/org/apache/hadoop/hive/ql/plan/TableDesc.java,57,.getProperty(org.apache.hadoop.hive.serde.Constants.SERIALIZATION_LIB);
ql/src/java/org/apache/hadoop/hive/ql/plan/TableDesc.java,134,.getProperty(org.apache.hadoop.hive.metastore.api.Constants.META_TABLE_NAME);
ql/src/java/org/apache/hadoop/hive/ql/plan/TableDesc.java,149,org.apache.hadoop.hive.metastore.api.Constants.META_TABLE_STORAGE)
ql/src/java/org/apache/hadoop/hive/ql/processors/SetProcessor.java,21,import static org.apache.hadoop.hive.serde.Constants.SERIALIZATION_NULL_FORMAT;
ql/src/java/org/apache/hadoop/hive/ql/processors/SetProcessor.java,22,import static org.apache.hadoop.hive.serde.Constants.STRING_TYPE_NAME;
ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFArrayContains.java,66,"""\"""" + org.apache.hadoop.hive.serde.Constants.LIST_TYPE_NAME + ""\"" """
ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFConcatWS.java,26,import org.apache.hadoop.hive.serde.Constants;
ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFConcatWS.java,65,.getTypeName().equals(Constants.STRING_TYPE_NAME)
ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFConcatWS.java,67,.getTypeName().equals(Constants.VOID_TYPE_NAME))
ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFConcatWS.java,70,if (arguments[i].getTypeName().equals(Constants.STRING_TYPE_NAME)
ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFConcatWS.java,71,|| arguments[i].getTypeName().equals(Constants.VOID_TYPE_NAME))
ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFConcatWS.java,75,"+ "" of function CONCAT_WS must be \"""" + Constants.STRING_TYPE_NAME"
ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFConcatWS.java,76,#VALUE!
ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFIf.java,25,import org.apache.hadoop.hive.serde.Constants;
ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFIf.java,59,"+ Constants.BOOLEAN_TYPE_NAME + ""\"", but \"""""
ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFPrintf.java,26,import org.apache.hadoop.hive.serde.Constants;
ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFPrintf.java,73,if (arguments[0].getTypeName() != Constants.STRING_TYPE_NAME
ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFPrintf.java,74,&& arguments[0].getTypeName() != Constants.VOID_TYPE_NAME) {
ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFPrintf.java,76,"+ "" of function PRINTF must be \"""" + Constants.STRING_TYPE_NAME"
ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFSize.java,26,import org.apache.hadoop.hive.serde.Constants;
ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFSize.java,53,&& !typeName.equals(Constants.VOID_TYPE_NAME)) {
ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFSize.java,72,} else if (returnOI.getTypeName().equals(Constants.VOID_TYPE_NAME)) {
ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFWhen.java,23,import org.apache.hadoop.hive.serde.Constants;
ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFWhen.java,45,if (!arguments[i].getTypeName().equals(Constants.BOOLEAN_TYPE_NAME)) {
ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFWhen.java,47,"+ Constants.BOOLEAN_TYPE_NAME + ""\"" is expected after WHEN, """
ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDTFJSONTuple.java,30,import org.apache.hadoop.hive.serde.Constants;
ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDTFJSONTuple.java,100,!args[i].getTypeName().equals(Constants.STRING_TYPE_NAME)) {
ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDTFParseUrlTuple.java,32,import org.apache.hadoop.hive.serde.Constants;
ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDTFParseUrlTuple.java,94,!args[i].getTypeName().equals(Constants.STRING_TYPE_NAME)) {
ql/src/test/org/apache/hadoop/hive/ql/exec/TestExecDriver.java,52,import org.apache.hadoop.hive.serde.Constants;
ql/src/test/org/apache/hadoop/hive/ql/exec/TestExecDriver.java,166,"Constants.DOUBLE_TYPE_NAME).getGenericUDF(), children1);"
ql/src/test/org/apache/hadoop/hive/ql/exec/TestExecDriver.java,173,"Constants.DOUBLE_TYPE_NAME).getGenericUDF(), children2);"
ql/src/test/org/apache/hadoop/hive/ql/exec/TestExpressionEvaluator.java,31,import org.apache.hadoop.hive.serde.Constants;
ql/src/test/org/apache/hadoop/hive/ql/exec/TestExpressionEvaluator.java,165,".getFuncExprNodeDesc(Constants.DOUBLE_TYPE_NAME, col11desc);"
ql/src/test/org/apache/hadoop/hive/ql/io/TestRCFile.java,38,import org.apache.hadoop.hive.serde.Constants;
ql/src/test/org/apache/hadoop/hive/ql/io/TestRCFile.java,359,"tbl.setProperty(Constants.SERIALIZATION_FORMAT, ""9"");"
ql/src/test/org/apache/hadoop/hive/ql/io/TestRCFile.java,364,"tbl.setProperty(Constants.SERIALIZATION_NULL_FORMAT, ""NULL"");"
ql/src/test/org/apache/hadoop/hive/ql/metadata/TestHive.java,37,import org.apache.hadoop.hive.serde.Constants;
ql/src/test/org/apache/hadoop/hive/ql/metadata/TestHive.java,97,"fields.add(new FieldSchema(""col1"", Constants.INT_TYPE_NAME, ""int -- first column""));"
ql/src/test/org/apache/hadoop/hive/ql/metadata/TestHive.java,98,"fields.add(new FieldSchema(""col2"", Constants.STRING_TYPE_NAME, ""string -- second column""));"
ql/src/test/org/apache/hadoop/hive/ql/metadata/TestHive.java,99,"fields.add(new FieldSchema(""col3"", Constants.DOUBLE_TYPE_NAME, ""double -- thrift column""));"
ql/src/test/org/apache/hadoop/hive/ql/metadata/TestHive.java,120,"Constants.STRING_TYPE_NAME,"
ql/src/test/org/apache/hadoop/hive/ql/metadata/TestHive.java,130,"tbl.setSerdeParam(Constants.FIELD_DELIM, ""1"");"
ql/src/test/org/apache/hadoop/hive/ql/metadata/TestHive.java,131,"tbl.setSerdeParam(Constants.LINE_DELIM, ""\n"");"
ql/src/test/org/apache/hadoop/hive/ql/metadata/TestHive.java,132,"tbl.setSerdeParam(Constants.MAPKEY_DELIM, ""3"");"
ql/src/test/org/apache/hadoop/hive/ql/metadata/TestHive.java,133,"tbl.setSerdeParam(Constants.COLLECTION_DELIM, ""2"");"
ql/src/test/org/apache/hadoop/hive/ql/metadata/TestHive.java,135,"tbl.setSerdeParam(Constants.FIELD_DELIM, ""1"");"
ql/src/test/org/apache/hadoop/hive/ql/metadata/TestHive.java,209,"tbl.setSerdeParam(Constants.SERIALIZATION_CLASS, Complex.class.getName());"
ql/src/test/org/apache/hadoop/hive/ql/metadata/TestHive.java,210,"tbl.setSerdeParam(Constants.SERIALIZATION_FORMAT, TBinaryProtocol.class"
ql/src/test/org/apache/hadoop/hive/ql/metadata/TestHive.java,260,"tbl.setSerdeParam(Constants.SERIALIZATION_CLASS, Complex.class.getName());"
ql/src/test/org/apache/hadoop/hive/ql/metadata/TestHive.java,261,"tbl.setSerdeParam(Constants.SERIALIZATION_FORMAT, TBinaryProtocol.class"
ql/src/test/org/apache/hadoop/hive/ql/metadata/TestHive.java,224,ft.checkValidity();
ql/src/test/org/apache/hadoop/hive/ql/metadata/TestHiveMetaStoreChecker.java,36,import org.apache.hadoop.hive.serde.Constants;
ql/src/test/org/apache/hadoop/hive/ql/metadata/TestHiveMetaStoreChecker.java,66,"partCols.add(new FieldSchema(partDateName, Constants.STRING_TYPE_NAME, """"));"
ql/src/test/org/apache/hadoop/hive/ql/metadata/TestHiveMetaStoreChecker.java,67,"partCols.add(new FieldSchema(partCityName, Constants.STRING_TYPE_NAME, """"));"
ql/src/test/org/apache/hadoop/hive/ql/udf/generic/GenericUDFTestTranslate.java,28,import org.apache.hadoop.hive.serde.Constants;
ql/src/test/org/apache/hadoop/hive/ql/udf/generic/GenericUDFTestTranslate.java,59,if (arguments[i].getTypeName() != Constants.STRING_TYPE_NAME
ql/src/test/org/apache/hadoop/hive/ql/udf/generic/GenericUDFTestTranslate.java,60,&& arguments[i].getTypeName() != Constants.VOID_TYPE_NAME) {
ql/src/test/org/apache/hadoop/hive/ql/udf/generic/GenericUDFTestTranslate.java,63,"+ Constants.STRING_TYPE_NAME + ""\"", but \"""""
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde/Constants.java,23,public class Constants {
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde/test/InnerStruct.java,90,private BitSet __isset_bit_vector = new BitSet(1);
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde/test/InnerStruct.java,116,__isset_bit_vector.clear();
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde/test/InnerStruct.java,117,__isset_bit_vector.or(other.__isset_bit_vector);
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde/test/InnerStruct.java,141,__isset_bit_vector.clear(__FIELD0_ISSET_ID);
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde/test/InnerStruct.java,146,return __isset_bit_vector.get(__FIELD0_ISSET_ID);
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde/test/InnerStruct.java,150,"__isset_bit_vector.set(__FIELD0_ISSET_ID, value);"
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde/test/InnerStruct.java,244,org.apache.thrift.protocol.TField field;
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde/test/InnerStruct.java,245,iprot.readStructBegin();
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde/test/InnerStruct.java,246,while (true)
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde/test/InnerStruct.java,248,field = iprot.readFieldBegin();
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde/test/InnerStruct.java,249,if (field.type == org.apache.thrift.protocol.TType.STOP) {
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde/test/InnerStruct.java,250,break;
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde/test/InnerStruct.java,252,switch (field.id) {
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde/test/InnerStruct.java,253,case 1: // FIELD0
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde/test/InnerStruct.java,254,if (field.type == org.apache.thrift.protocol.TType.I32) {
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde/test/InnerStruct.java,255,this.field0 = iprot.readI32();
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde/test/InnerStruct.java,256,setField0IsSet(true);
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde/test/InnerStruct.java,257,} else {
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde/test/InnerStruct.java,258,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde/test/InnerStruct.java,260,break;
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde/test/InnerStruct.java,261,default:
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde/test/InnerStruct.java,262,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde/test/InnerStruct.java,264,iprot.readFieldEnd();
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde/test/InnerStruct.java,266,iprot.readStructEnd();
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde/test/InnerStruct.java,267,validate();
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde/test/InnerStruct.java,271,validate();
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde/test/InnerStruct.java,273,oprot.writeStructBegin(STRUCT_DESC);
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde/test/InnerStruct.java,274,oprot.writeFieldBegin(FIELD0_FIELD_DESC);
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde/test/InnerStruct.java,275,oprot.writeI32(this.field0);
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde/test/InnerStruct.java,276,oprot.writeFieldEnd();
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde/test/InnerStruct.java,277,oprot.writeFieldStop();
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde/test/InnerStruct.java,278,oprot.writeStructEnd();
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde/test/InnerStruct.java,308,__isset_bit_vector = new BitSet(1);
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde/test/InnerStruct.java,169,return Integer.valueOf(getField0());
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde/test/ThriftTestObj.java,100,private BitSet __isset_bit_vector = new BitSet(1);
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde/test/ThriftTestObj.java,135,__isset_bit_vector.clear();
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde/test/ThriftTestObj.java,136,__isset_bit_vector.or(other.__isset_bit_vector);
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde/test/ThriftTestObj.java,172,__isset_bit_vector.clear(__FIELD1_ISSET_ID);
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde/test/ThriftTestObj.java,177,return __isset_bit_vector.get(__FIELD1_ISSET_ID);
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde/test/ThriftTestObj.java,181,"__isset_bit_vector.set(__FIELD1_ISSET_ID, value);"
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde/test/ThriftTestObj.java,400,org.apache.thrift.protocol.TField field;
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde/test/ThriftTestObj.java,401,iprot.readStructBegin();
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde/test/ThriftTestObj.java,402,while (true)
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde/test/ThriftTestObj.java,404,field = iprot.readFieldBegin();
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde/test/ThriftTestObj.java,405,if (field.type == org.apache.thrift.protocol.TType.STOP) {
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde/test/ThriftTestObj.java,406,break;
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde/test/ThriftTestObj.java,408,switch (field.id) {
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde/test/ThriftTestObj.java,409,case 1: // FIELD1
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde/test/ThriftTestObj.java,410,if (field.type == org.apache.thrift.protocol.TType.I32) {
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde/test/ThriftTestObj.java,411,this.field1 = iprot.readI32();
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde/test/ThriftTestObj.java,412,setField1IsSet(true);
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde/test/ThriftTestObj.java,413,} else {
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde/test/ThriftTestObj.java,414,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde/test/ThriftTestObj.java,416,break;
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde/test/ThriftTestObj.java,417,case 2: // FIELD2
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde/test/ThriftTestObj.java,418,if (field.type == org.apache.thrift.protocol.TType.STRING) {
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde/test/ThriftTestObj.java,419,this.field2 = iprot.readString();
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde/test/ThriftTestObj.java,420,} else {
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde/test/ThriftTestObj.java,421,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde/test/ThriftTestObj.java,423,break;
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde/test/ThriftTestObj.java,424,case 3: // FIELD3
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde/test/ThriftTestObj.java,425,if (field.type == org.apache.thrift.protocol.TType.LIST) {
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde/test/ThriftTestObj.java,427,org.apache.thrift.protocol.TList _list0 = iprot.readListBegin();
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde/test/ThriftTestObj.java,428,this.field3 = new ArrayList<InnerStruct>(_list0.size);
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde/test/ThriftTestObj.java,429,for (int _i1 = 0; _i1 < _list0.size; ++_i1)
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde/test/ThriftTestObj.java,431,InnerStruct _elem2; // required
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde/test/ThriftTestObj.java,432,_elem2 = new InnerStruct();
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde/test/ThriftTestObj.java,433,_elem2.read(iprot);
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde/test/ThriftTestObj.java,434,this.field3.add(_elem2);
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde/test/ThriftTestObj.java,436,iprot.readListEnd();
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde/test/ThriftTestObj.java,438,} else {
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde/test/ThriftTestObj.java,439,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde/test/ThriftTestObj.java,441,break;
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde/test/ThriftTestObj.java,442,default:
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde/test/ThriftTestObj.java,443,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde/test/ThriftTestObj.java,445,iprot.readFieldEnd();
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde/test/ThriftTestObj.java,447,iprot.readStructEnd();
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde/test/ThriftTestObj.java,448,validate();
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde/test/ThriftTestObj.java,452,validate();
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde/test/ThriftTestObj.java,454,oprot.writeStructBegin(STRUCT_DESC);
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde/test/ThriftTestObj.java,455,oprot.writeFieldBegin(FIELD1_FIELD_DESC);
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde/test/ThriftTestObj.java,456,oprot.writeI32(this.field1);
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde/test/ThriftTestObj.java,457,oprot.writeFieldEnd();
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde/test/ThriftTestObj.java,458,if (this.field2 != null) {
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde/test/ThriftTestObj.java,459,oprot.writeFieldBegin(FIELD2_FIELD_DESC);
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde/test/ThriftTestObj.java,460,oprot.writeString(this.field2);
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde/test/ThriftTestObj.java,461,oprot.writeFieldEnd();
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde/test/ThriftTestObj.java,463,if (this.field3 != null) {
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde/test/ThriftTestObj.java,464,oprot.writeFieldBegin(FIELD3_FIELD_DESC);
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde/test/ThriftTestObj.java,466,"oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, this.field3.size()));"
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde/test/ThriftTestObj.java,467,for (InnerStruct _iter3 : this.field3)
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde/test/ThriftTestObj.java,469,_iter3.write(oprot);
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde/test/ThriftTestObj.java,471,oprot.writeListEnd();
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde/test/ThriftTestObj.java,473,oprot.writeFieldEnd();
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde/test/ThriftTestObj.java,475,oprot.writeFieldStop();
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde/test/ThriftTestObj.java,476,oprot.writeStructEnd();
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde/test/ThriftTestObj.java,522,__isset_bit_vector = new BitSet(1);
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde/test/ThriftTestObj.java,277,return Integer.valueOf(getField1());
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,115,private BitSet __isset_bit_vector = new BitSet(1);
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,166,__isset_bit_vector.clear();
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,167,__isset_bit_vector.or(other.__isset_bit_vector);
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,235,__isset_bit_vector.clear(__AINT_ISSET_ID);
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,240,return __isset_bit_vector.get(__AINT_ISSET_ID);
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,244,"__isset_bit_vector.set(__AINT_ISSET_ID, value);"
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,669,org.apache.thrift.protocol.TField field;
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,670,iprot.readStructBegin();
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,671,while (true)
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,673,field = iprot.readFieldBegin();
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,674,if (field.type == org.apache.thrift.protocol.TType.STOP) {
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,675,break;
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,677,switch (field.id) {
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,678,case 1: // AINT
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,679,if (field.type == org.apache.thrift.protocol.TType.I32) {
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,680,this.aint = iprot.readI32();
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,681,setAintIsSet(true);
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,682,} else {
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,683,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,685,break;
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,686,case 2: // A_STRING
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,687,if (field.type == org.apache.thrift.protocol.TType.STRING) {
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,688,this.aString = iprot.readString();
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,689,} else {
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,690,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,692,break;
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,693,case 3: // LINT
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,694,if (field.type == org.apache.thrift.protocol.TType.LIST) {
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,696,org.apache.thrift.protocol.TList _list0 = iprot.readListBegin();
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,697,this.lint = new ArrayList<Integer>(_list0.size);
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,698,for (int _i1 = 0; _i1 < _list0.size; ++_i1)
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,700,int _elem2; // required
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,701,_elem2 = iprot.readI32();
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,702,this.lint.add(_elem2);
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,704,iprot.readListEnd();
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,706,} else {
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,707,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,709,break;
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,710,case 4: // L_STRING
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,711,if (field.type == org.apache.thrift.protocol.TType.LIST) {
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,713,org.apache.thrift.protocol.TList _list3 = iprot.readListBegin();
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,714,this.lString = new ArrayList<String>(_list3.size);
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,715,for (int _i4 = 0; _i4 < _list3.size; ++_i4)
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,717,String _elem5; // required
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,718,_elem5 = iprot.readString();
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,719,this.lString.add(_elem5);
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,721,iprot.readListEnd();
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,723,} else {
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,724,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,726,break;
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,727,case 5: // LINT_STRING
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,728,if (field.type == org.apache.thrift.protocol.TType.LIST) {
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,730,org.apache.thrift.protocol.TList _list6 = iprot.readListBegin();
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,731,this.lintString = new ArrayList<IntString>(_list6.size);
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,732,for (int _i7 = 0; _i7 < _list6.size; ++_i7)
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,734,IntString _elem8; // required
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,735,_elem8 = new IntString();
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,736,_elem8.read(iprot);
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,737,this.lintString.add(_elem8);
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,739,iprot.readListEnd();
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,741,} else {
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,742,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,744,break;
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,745,case 6: // M_STRING_STRING
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,746,if (field.type == org.apache.thrift.protocol.TType.MAP) {
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,748,org.apache.thrift.protocol.TMap _map9 = iprot.readMapBegin();
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,749,"this.mStringString = new HashMap<String,String>(2*_map9.size);"
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,750,for (int _i10 = 0; _i10 < _map9.size; ++_i10)
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,752,String _key11; // required
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,753,String _val12; // required
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,754,_key11 = iprot.readString();
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,755,_val12 = iprot.readString();
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,756,"this.mStringString.put(_key11, _val12);"
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,758,iprot.readMapEnd();
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,760,} else {
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,761,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,763,break;
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,764,default:
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,765,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,767,iprot.readFieldEnd();
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,769,iprot.readStructEnd();
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,770,validate();
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,774,validate();
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,776,oprot.writeStructBegin(STRUCT_DESC);
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,777,oprot.writeFieldBegin(AINT_FIELD_DESC);
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,778,oprot.writeI32(this.aint);
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,779,oprot.writeFieldEnd();
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,780,if (this.aString != null) {
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,781,oprot.writeFieldBegin(A_STRING_FIELD_DESC);
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,782,oprot.writeString(this.aString);
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,783,oprot.writeFieldEnd();
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,785,if (this.lint != null) {
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,786,oprot.writeFieldBegin(LINT_FIELD_DESC);
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,788,"oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I32, this.lint.size()));"
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,789,for (int _iter13 : this.lint)
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,791,oprot.writeI32(_iter13);
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,793,oprot.writeListEnd();
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,795,oprot.writeFieldEnd();
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,797,if (this.lString != null) {
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,798,oprot.writeFieldBegin(L_STRING_FIELD_DESC);
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,800,"oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, this.lString.size()));"
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,801,for (String _iter14 : this.lString)
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,803,oprot.writeString(_iter14);
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,805,oprot.writeListEnd();
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,807,oprot.writeFieldEnd();
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,809,if (this.lintString != null) {
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,810,oprot.writeFieldBegin(LINT_STRING_FIELD_DESC);
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,812,"oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, this.lintString.size()));"
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,813,for (IntString _iter15 : this.lintString)
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,815,_iter15.write(oprot);
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,817,oprot.writeListEnd();
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,819,oprot.writeFieldEnd();
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,821,if (this.mStringString != null) {
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,822,oprot.writeFieldBegin(M_STRING_STRING_FIELD_DESC);
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,824,"oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRING, this.mStringString.size()));"
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,825,"for (Map.Entry<String, String> _iter16 : this.mStringString.entrySet())"
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,827,oprot.writeString(_iter16.getKey());
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,828,oprot.writeString(_iter16.getValue());
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,830,oprot.writeMapEnd();
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,832,oprot.writeFieldEnd();
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,834,oprot.writeFieldStop();
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,835,oprot.writeStructEnd();
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,905,__isset_bit_vector = new BitSet(1);
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/Complex.java,474,return Integer.valueOf(getAint());
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/IntString.java,101,private BitSet __isset_bit_vector = new BitSet(2);
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/IntString.java,136,__isset_bit_vector.clear();
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/IntString.java,137,__isset_bit_vector.or(other.__isset_bit_vector);
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/IntString.java,168,__isset_bit_vector.clear(__MYINT_ISSET_ID);
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/IntString.java,173,return __isset_bit_vector.get(__MYINT_ISSET_ID);
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/IntString.java,177,"__isset_bit_vector.set(__MYINT_ISSET_ID, value);"
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/IntString.java,213,__isset_bit_vector.clear(__UNDERSCORE_INT_ISSET_ID);
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/IntString.java,218,return __isset_bit_vector.get(__UNDERSCORE_INT_ISSET_ID);
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/IntString.java,222,"__isset_bit_vector.set(__UNDERSCORE_INT_ISSET_ID, value);"
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/IntString.java,380,org.apache.thrift.protocol.TField field;
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/IntString.java,381,iprot.readStructBegin();
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/IntString.java,382,while (true)
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/IntString.java,384,field = iprot.readFieldBegin();
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/IntString.java,385,if (field.type == org.apache.thrift.protocol.TType.STOP) {
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/IntString.java,386,break;
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/IntString.java,388,switch (field.id) {
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/IntString.java,389,case 1: // MYINT
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/IntString.java,390,if (field.type == org.apache.thrift.protocol.TType.I32) {
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/IntString.java,391,this.myint = iprot.readI32();
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/IntString.java,392,setMyintIsSet(true);
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/IntString.java,393,} else {
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/IntString.java,394,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/IntString.java,396,break;
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/IntString.java,397,case 2: // MY_STRING
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/IntString.java,398,if (field.type == org.apache.thrift.protocol.TType.STRING) {
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/IntString.java,399,this.myString = iprot.readString();
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/IntString.java,400,} else {
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/IntString.java,401,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/IntString.java,403,break;
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/IntString.java,404,case 3: // UNDERSCORE_INT
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/IntString.java,405,if (field.type == org.apache.thrift.protocol.TType.I32) {
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/IntString.java,406,this.underscore_int = iprot.readI32();
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/IntString.java,407,setUnderscore_intIsSet(true);
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/IntString.java,408,} else {
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/IntString.java,409,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/IntString.java,411,break;
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/IntString.java,412,default:
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/IntString.java,413,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/IntString.java,415,iprot.readFieldEnd();
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/IntString.java,417,iprot.readStructEnd();
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/IntString.java,418,validate();
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/IntString.java,422,validate();
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/IntString.java,424,oprot.writeStructBegin(STRUCT_DESC);
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/IntString.java,425,oprot.writeFieldBegin(MYINT_FIELD_DESC);
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/IntString.java,426,oprot.writeI32(this.myint);
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/IntString.java,427,oprot.writeFieldEnd();
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/IntString.java,428,if (this.myString != null) {
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/IntString.java,429,oprot.writeFieldBegin(MY_STRING_FIELD_DESC);
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/IntString.java,430,oprot.writeString(this.myString);
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/IntString.java,431,oprot.writeFieldEnd();
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/IntString.java,433,oprot.writeFieldBegin(UNDERSCORE_INT_FIELD_DESC);
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/IntString.java,434,oprot.writeI32(this.underscore_int);
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/IntString.java,435,oprot.writeFieldEnd();
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/IntString.java,436,oprot.writeFieldStop();
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/IntString.java,437,oprot.writeStructEnd();
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/IntString.java,479,__isset_bit_vector = new BitSet(1);
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/IntString.java,257,return Integer.valueOf(getMyint());
serde/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/serde2/thrift/test/IntString.java,263,return Integer.valueOf(getUnderscore_int());
serde/src/java/org/apache/hadoop/hive/serde2/DelimitedJSONSerDe.java,25,import org.apache.hadoop.hive.serde.Constants;
serde/src/java/org/apache/hadoop/hive/serde2/DelimitedJSONSerDe.java,57,if (!objInspector.getCategory().equals(Category.PRIMITIVE) || (objInspector.getTypeName().equalsIgnoreCase(Constants.BINARY_TYPE_NAME))) {
serde/src/java/org/apache/hadoop/hive/serde2/MetadataTypedColumnsetSerDe.java,30,import org.apache.hadoop.hive.serde.Constants;
serde/src/java/org/apache/hadoop/hive/serde2/MetadataTypedColumnsetSerDe.java,99,String altSep = tbl.getProperty(Constants.SERIALIZATION_FORMAT);
serde/src/java/org/apache/hadoop/hive/serde2/MetadataTypedColumnsetSerDe.java,102,String altNull = tbl.getProperty(Constants.SERIALIZATION_NULL_FORMAT);
serde/src/java/org/apache/hadoop/hive/serde2/MetadataTypedColumnsetSerDe.java,106,String serdeName = tbl.getProperty(Constants.SERIALIZATION_LIB);
serde/src/java/org/apache/hadoop/hive/serde2/MetadataTypedColumnsetSerDe.java,128,.getProperty(Constants.SERIALIZATION_LAST_COLUMN_TAKES_REST);
serde/src/java/org/apache/hadoop/hive/serde2/binarysortable/BinarySortableSerDe.java,32,import org.apache.hadoop.hive.serde.Constants;
serde/src/java/org/apache/hadoop/hive/serde2/binarysortable/BinarySortableSerDe.java,115,String columnNameProperty = tbl.getProperty(Constants.LIST_COLUMNS);
serde/src/java/org/apache/hadoop/hive/serde2/binarysortable/BinarySortableSerDe.java,116,String columnTypeProperty = tbl.getProperty(Constants.LIST_COLUMN_TYPES);
serde/src/java/org/apache/hadoop/hive/serde2/binarysortable/BinarySortableSerDe.java,141,.getProperty(Constants.SERIALIZATION_SORT_ORDER);
serde/src/java/org/apache/hadoop/hive/serde2/dynamic_type/DynamicSerDe.java,30,import org.apache.hadoop.hive.serde.Constants;
serde/src/java/org/apache/hadoop/hive/serde2/dynamic_type/DynamicSerDe.java,79,String ddl = tbl.getProperty(Constants.SERIALIZATION_DDL);
serde/src/java/org/apache/hadoop/hive/serde2/dynamic_type/DynamicSerDe.java,91,String protoName = tbl.getProperty(Constants.SERIALIZATION_FORMAT);
serde/src/java/org/apache/hadoop/hive/serde2/dynamic_type/DynamicSerDeTypeList.java,24,import org.apache.hadoop.hive.serde.Constants;
serde/src/java/org/apache/hadoop/hive/serde2/dynamic_type/DynamicSerDeTypeList.java,73,"return Constants.LIST_TYPE_NAME + ""<"" + getElementType().toString() + "">"";"
serde/src/java/org/apache/hadoop/hive/serde2/lazy/LazySimpleSerDe.java,30,import org.apache.hadoop.hive.serde.Constants;
serde/src/java/org/apache/hadoop/hive/serde2/lazy/LazySimpleSerDe.java,215,"serdeParams.separators[0] = getByte(tbl.getProperty(Constants.FIELD_DELIM,"
serde/src/java/org/apache/hadoop/hive/serde2/lazy/LazySimpleSerDe.java,216,"tbl.getProperty(Constants.SERIALIZATION_FORMAT)), DefaultSeparators[0]);"
serde/src/java/org/apache/hadoop/hive/serde2/lazy/LazySimpleSerDe.java,218,".getProperty(Constants.COLLECTION_DELIM), DefaultSeparators[1]);"
serde/src/java/org/apache/hadoop/hive/serde2/lazy/LazySimpleSerDe.java,220,"tbl.getProperty(Constants.MAPKEY_DELIM), DefaultSeparators[2]);"
serde/src/java/org/apache/hadoop/hive/serde2/lazy/LazySimpleSerDe.java,226,"Constants.SERIALIZATION_NULL_FORMAT, ""\\N"");"
serde/src/java/org/apache/hadoop/hive/serde2/lazy/LazySimpleSerDe.java,230,.getProperty(Constants.SERIALIZATION_LAST_COLUMN_TAKES_REST);
serde/src/java/org/apache/hadoop/hive/serde2/lazy/LazySimpleSerDe.java,241,String escapeProperty = tbl.getProperty(Constants.ESCAPE_CHAR);
serde/src/java/org/apache/hadoop/hive/serde2/lazy/LazySimpleSerDe.java,221,for (int i = 3; i < serdeParams.separators.length; i++) {
serde/src/java/org/apache/hadoop/hive/serde2/lazy/LazySimpleSerDe.java,222,serdeParams.separators[i] = (byte) (i + 1);
serde/src/java/org/apache/hadoop/hive/serde2/lazy/LazySimpleSerDe.java,416,throws IOException {
serde/src/java/org/apache/hadoop/hive/serde2/lazy/LazySimpleSerDe.java,432,separator = (char) separators[level];
serde/src/java/org/apache/hadoop/hive/serde2/lazy/LazySimpleSerDe.java,449,separator = (char) separators[level];
serde/src/java/org/apache/hadoop/hive/serde2/lazy/LazySimpleSerDe.java,450,char keyValueSeparator = (char) separators[level + 1];
serde/src/java/org/apache/hadoop/hive/serde2/lazy/LazySimpleSerDe.java,474,separator = (char) separators[level];
serde/src/java/org/apache/hadoop/hive/serde2/lazy/LazySimpleSerDe.java,492,separator = (char) separators[level];
serde/src/java/org/apache/hadoop/hive/serde2/lazy/LazyUtils.java,31,import org.apache.hadoop.hive.serde.Constants;
serde/src/java/org/apache/hadoop/hive/serde2/lazy/LazyUtils.java,318,String columnNameProperty = tbl.getProperty(Constants.LIST_COLUMNS);
serde/src/java/org/apache/hadoop/hive/serde2/lazy/LazyUtils.java,320,String columnTypeProperty = tbl.getProperty(Constants.LIST_COLUMN_TYPES);
serde/src/java/org/apache/hadoop/hive/serde2/lazy/LazyUtils.java,336,sb.append(Constants.STRING_TYPE_NAME);
serde/src/java/org/apache/hadoop/hive/serde2/lazy/LazyUtils.java,152,start = i;
serde/src/java/org/apache/hadoop/hive/serde2/lazy/LazyUtils.java,153,if (i < len) {
serde/src/java/org/apache/hadoop/hive/serde2/lazy/LazyUtils.java,154,out.write(escapeChar);
serde/src/java/org/apache/hadoop/hive/serde2/lazy/objectinspector/LazyListObjectInspector.java,101,"return org.apache.hadoop.hive.serde.Constants.LIST_TYPE_NAME + ""<"""
serde/src/java/org/apache/hadoop/hive/serde2/lazy/objectinspector/LazyMapObjectInspector.java,74,"return org.apache.hadoop.hive.serde.Constants.MAP_TYPE_NAME + ""<"""
serde/src/java/org/apache/hadoop/hive/serde2/lazybinary/LazyBinarySerDe.java,30,import org.apache.hadoop.hive.serde.Constants;
serde/src/java/org/apache/hadoop/hive/serde2/lazybinary/LazyBinarySerDe.java,97,String columnNameProperty = tbl.getProperty(Constants.LIST_COLUMNS);
serde/src/java/org/apache/hadoop/hive/serde2/lazybinary/LazyBinarySerDe.java,98,String columnTypeProperty = tbl.getProperty(Constants.LIST_COLUMN_TYPES);
serde/src/java/org/apache/hadoop/hive/serde2/lazybinary/LazyBinarySerDe.java,382,t.writeToByteStream(byteStream);
serde/src/java/org/apache/hadoop/hive/serde2/objectinspector/ObjectInspectorUtils.java,32,import org.apache.hadoop.hive.serde.Constants;
serde/src/java/org/apache/hadoop/hive/serde2/objectinspector/ObjectInspectorUtils.java,316,"sb.append(Constants.UNION_TYPE_NAME + ""<"");"
serde/src/java/org/apache/hadoop/hive/serde2/objectinspector/ObjectInspectorUtils.java,625,"return Float.compare(v1, v2);"
serde/src/java/org/apache/hadoop/hive/serde2/objectinspector/ObjectInspectorUtils.java,630,"return Double.compare(v1, v2);"
serde/src/java/org/apache/hadoop/hive/serde2/objectinspector/StandardListObjectInspector.java,105,"return org.apache.hadoop.hive.serde.Constants.LIST_TYPE_NAME + ""<"""
serde/src/java/org/apache/hadoop/hive/serde2/objectinspector/StandardMapObjectInspector.java,91,"return org.apache.hadoop.hive.serde.Constants.MAP_TYPE_NAME + ""<"""
serde/src/java/org/apache/hadoop/hive/serde2/thrift/TBinarySortableProtocol.java,29,import org.apache.hadoop.hive.serde.Constants;
serde/src/java/org/apache/hadoop/hive/serde2/thrift/TBinarySortableProtocol.java,119,sortOrder = tbl.getProperty(Constants.SERIALIZATION_SORT_ORDER);
serde/src/java/org/apache/hadoop/hive/serde2/thrift/TBinarySortableProtocol.java,126,throw new TException(Constants.SERIALIZATION_SORT_ORDER
serde/src/java/org/apache/hadoop/hive/serde2/thrift/TCTLSeparatedProtocol.java,34,import org.apache.hadoop.hive.serde.Constants;
serde/src/java/org/apache/hadoop/hive/serde2/thrift/TCTLSeparatedProtocol.java,446,"primarySeparator = getByteValue(tbl.getProperty(Constants.FIELD_DELIM),"
serde/src/java/org/apache/hadoop/hive/serde2/thrift/TCTLSeparatedProtocol.java,449,".getProperty(Constants.COLLECTION_DELIM), secondarySeparator);"
serde/src/java/org/apache/hadoop/hive/serde2/thrift/TCTLSeparatedProtocol.java,450,"rowSeparator = getByteValue(tbl.getProperty(Constants.LINE_DELIM),"
serde/src/java/org/apache/hadoop/hive/serde2/thrift/TCTLSeparatedProtocol.java,452,"mapSeparator = getByteValue(tbl.getProperty(Constants.MAPKEY_DELIM),"
serde/src/java/org/apache/hadoop/hive/serde2/thrift/TCTLSeparatedProtocol.java,459,"nullString = tbl.getProperty(Constants.SERIALIZATION_NULL_FORMAT, ""\\N"");"
serde/src/java/org/apache/hadoop/hive/serde2/thrift/TCTLSeparatedProtocol.java,460,"quote = tbl.getProperty(Constants.QUOTE_CHAR, null);"
serde/src/java/org/apache/hadoop/hive/serde2/thrift/ThriftDeserializer.java,50,.getProperty(org.apache.hadoop.hive.serde.Constants.SERIALIZATION_CLASS);
serde/src/java/org/apache/hadoop/hive/serde2/thrift/ThriftDeserializer.java,54,.getProperty(org.apache.hadoop.hive.serde.Constants.SERIALIZATION_FORMAT);
serde/src/java/org/apache/hadoop/hive/serde2/typeinfo/ListTypeInfo.java,45,"return org.apache.hadoop.hive.serde.Constants.LIST_TYPE_NAME + ""<"""
serde/src/java/org/apache/hadoop/hive/serde2/typeinfo/MapTypeInfo.java,49,"return org.apache.hadoop.hive.serde.Constants.MAP_TYPE_NAME + ""<"""
serde/src/java/org/apache/hadoop/hive/serde2/typeinfo/StructTypeInfo.java,26,import org.apache.hadoop.hive.serde.Constants;
serde/src/java/org/apache/hadoop/hive/serde2/typeinfo/StructTypeInfo.java,53,"sb.append(Constants.STRUCT_TYPE_NAME + ""<"");"
serde/src/java/org/apache/hadoop/hive/serde2/typeinfo/TypeInfoFactory.java,25,import org.apache.hadoop.hive.serde.Constants;
serde/src/java/org/apache/hadoop/hive/serde2/typeinfo/TypeInfoFactory.java,56,public static final TypeInfo voidTypeInfo = getPrimitiveTypeInfo(Constants.VOID_TYPE_NAME);
serde/src/java/org/apache/hadoop/hive/serde2/typeinfo/TypeInfoFactory.java,57,public static final TypeInfo booleanTypeInfo = getPrimitiveTypeInfo(Constants.BOOLEAN_TYPE_NAME);
serde/src/java/org/apache/hadoop/hive/serde2/typeinfo/TypeInfoFactory.java,58,public static final TypeInfo intTypeInfo = getPrimitiveTypeInfo(Constants.INT_TYPE_NAME);
serde/src/java/org/apache/hadoop/hive/serde2/typeinfo/TypeInfoFactory.java,59,public static final TypeInfo longTypeInfo = getPrimitiveTypeInfo(Constants.BIGINT_TYPE_NAME);
serde/src/java/org/apache/hadoop/hive/serde2/typeinfo/TypeInfoFactory.java,60,public static final TypeInfo stringTypeInfo = getPrimitiveTypeInfo(Constants.STRING_TYPE_NAME);
serde/src/java/org/apache/hadoop/hive/serde2/typeinfo/TypeInfoFactory.java,61,public static final TypeInfo floatTypeInfo = getPrimitiveTypeInfo(Constants.FLOAT_TYPE_NAME);
serde/src/java/org/apache/hadoop/hive/serde2/typeinfo/TypeInfoFactory.java,62,public static final TypeInfo doubleTypeInfo = getPrimitiveTypeInfo(Constants.DOUBLE_TYPE_NAME);
serde/src/java/org/apache/hadoop/hive/serde2/typeinfo/TypeInfoFactory.java,63,public static final TypeInfo byteTypeInfo = getPrimitiveTypeInfo(Constants.TINYINT_TYPE_NAME);
serde/src/java/org/apache/hadoop/hive/serde2/typeinfo/TypeInfoFactory.java,64,public static final TypeInfo shortTypeInfo = getPrimitiveTypeInfo(Constants.SMALLINT_TYPE_NAME);
serde/src/java/org/apache/hadoop/hive/serde2/typeinfo/TypeInfoFactory.java,65,public static final TypeInfo timestampTypeInfo = getPrimitiveTypeInfo(Constants.TIMESTAMP_TYPE_NAME);
serde/src/java/org/apache/hadoop/hive/serde2/typeinfo/TypeInfoFactory.java,66,public static final TypeInfo binaryTypeInfo = getPrimitiveTypeInfo(Constants.BINARY_TYPE_NAME);
serde/src/java/org/apache/hadoop/hive/serde2/typeinfo/TypeInfoUtils.java,30,import org.apache.hadoop.hive.serde.Constants;
serde/src/java/org/apache/hadoop/hive/serde2/typeinfo/TypeInfoUtils.java,294,if (!Constants.LIST_TYPE_NAME.equals(t.text)
serde/src/java/org/apache/hadoop/hive/serde2/typeinfo/TypeInfoUtils.java,295,&& !Constants.MAP_TYPE_NAME.equals(t.text)
serde/src/java/org/apache/hadoop/hive/serde2/typeinfo/TypeInfoUtils.java,296,&& !Constants.STRUCT_TYPE_NAME.equals(t.text)
serde/src/java/org/apache/hadoop/hive/serde2/typeinfo/TypeInfoUtils.java,297,&& !Constants.UNION_TYPE_NAME.equals(t.text)
serde/src/java/org/apache/hadoop/hive/serde2/typeinfo/TypeInfoUtils.java,335,if (Constants.LIST_TYPE_NAME.equals(t.text)) {
serde/src/java/org/apache/hadoop/hive/serde2/typeinfo/TypeInfoUtils.java,343,if (Constants.MAP_TYPE_NAME.equals(t.text)) {
serde/src/java/org/apache/hadoop/hive/serde2/typeinfo/TypeInfoUtils.java,353,if (Constants.STRUCT_TYPE_NAME.equals(t.text)) {
serde/src/java/org/apache/hadoop/hive/serde2/typeinfo/TypeInfoUtils.java,377,if (Constants.UNION_TYPE_NAME.equals(t.text)) {
serde/src/java/org/apache/hadoop/hive/serde2/typeinfo/TypeInfoUtils.java,403,"static HashMap<TypeInfo, ObjectInspector> cachedStandardObjectInspector ="
serde/src/java/org/apache/hadoop/hive/serde2/typeinfo/TypeInfoUtils.java,404,"new HashMap<TypeInfo, ObjectInspector>();"
serde/src/java/org/apache/hadoop/hive/serde2/typeinfo/TypeInfoUtils.java,480,"static HashMap<TypeInfo, ObjectInspector> cachedStandardJavaObjectInspector ="
serde/src/java/org/apache/hadoop/hive/serde2/typeinfo/TypeInfoUtils.java,481,"new HashMap<TypeInfo, ObjectInspector>();"
serde/src/java/org/apache/hadoop/hive/serde2/typeinfo/TypeInfoUtils.java,220,return Character.isLetterOrDigit(c) || c == '_' || c == '.';
serde/src/java/org/apache/hadoop/hive/serde2/typeinfo/UnionTypeInfo.java,24,import org.apache.hadoop.hive.serde.Constants;
serde/src/java/org/apache/hadoop/hive/serde2/typeinfo/UnionTypeInfo.java,50,"sb.append(Constants.UNION_TYPE_NAME + ""<"");"
serde/src/test/org/apache/hadoop/hive/serde2/TestTCTLSeparatedProtocol.java,26,import org.apache.hadoop.hive.serde.Constants;
serde/src/test/org/apache/hadoop/hive/serde2/TestTCTLSeparatedProtocol.java,243,"schema.setProperty(Constants.QUOTE_CHAR, ""\"""");"
serde/src/test/org/apache/hadoop/hive/serde2/TestTCTLSeparatedProtocol.java,244,"schema.setProperty(Constants.FIELD_DELIM, "","");"
serde/src/test/org/apache/hadoop/hive/serde2/TestTCTLSeparatedProtocol.java,325,"schema.setProperty(Constants.QUOTE_CHAR, ""(\""|\\[|\\])"");"
serde/src/test/org/apache/hadoop/hive/serde2/TestTCTLSeparatedProtocol.java,327,"schema.setProperty(Constants.FIELD_DELIM, "" "");"
serde/src/test/org/apache/hadoop/hive/serde2/TestTCTLSeparatedProtocol.java,328,"schema.setProperty(Constants.SERIALIZATION_NULL_FORMAT, ""-"");"
serde/src/test/org/apache/hadoop/hive/serde2/dynamic_type/TestDynamicSerDe.java,31,import org.apache.hadoop.hive.serde.Constants;
serde/src/test/org/apache/hadoop/hive/serde2/dynamic_type/TestDynamicSerDe.java,113,"schema.setProperty(Constants.SERIALIZATION_FORMAT, protocol);"
serde/src/test/org/apache/hadoop/hive/serde2/dynamic_type/TestDynamicSerDe.java,115,"org.apache.hadoop.hive.metastore.api.Constants.META_TABLE_NAME,"
serde/src/test/org/apache/hadoop/hive/serde2/dynamic_type/TestDynamicSerDe.java,119,"Constants.SERIALIZATION_DDL,"
serde/src/test/org/apache/hadoop/hive/serde2/dynamic_type/TestDynamicSerDe.java,121,"schema.setProperty(Constants.SERIALIZATION_LIB, new DynamicSerDe()"
serde/src/test/org/apache/hadoop/hive/serde2/dynamic_type/TestDynamicSerDe.java,185,"schema.setProperty(Constants.SERIALIZATION_FORMAT,"
serde/src/test/org/apache/hadoop/hive/serde2/dynamic_type/TestDynamicSerDe.java,189,"org.apache.hadoop.hive.metastore.api.Constants.META_TABLE_NAME, ""test"");"
serde/src/test/org/apache/hadoop/hive/serde2/dynamic_type/TestDynamicSerDe.java,190,"schema.setProperty(Constants.SERIALIZATION_DDL, ddl);"
serde/src/test/org/apache/hadoop/hive/serde2/dynamic_type/TestDynamicSerDe.java,191,"schema.setProperty(Constants.SERIALIZATION_LIB, DynamicSerDe.class"
serde/src/test/org/apache/hadoop/hive/serde2/dynamic_type/TestDynamicSerDe.java,193,"schema.setProperty(Constants.SERIALIZATION_SORT_ORDER, order);"
serde/src/test/org/apache/hadoop/hive/serde2/dynamic_type/TestDynamicSerDe.java,420,"schema.setProperty(Constants.SERIALIZATION_FORMAT,"
serde/src/test/org/apache/hadoop/hive/serde2/dynamic_type/TestDynamicSerDe.java,424,"org.apache.hadoop.hive.metastore.api.Constants.META_TABLE_NAME,"
serde/src/test/org/apache/hadoop/hive/serde2/dynamic_type/TestDynamicSerDe.java,427,".setProperty(Constants.SERIALIZATION_DDL,"
serde/src/test/org/apache/hadoop/hive/serde2/dynamic_type/TestDynamicSerDe.java,429,"schema.setProperty(Constants.SERIALIZATION_LIB, new DynamicSerDe()"
serde/src/test/org/apache/hadoop/hive/serde2/dynamic_type/TestDynamicSerDe.java,432,"schema.setProperty(Constants.FIELD_DELIM, ""9"");"
serde/src/test/org/apache/hadoop/hive/serde2/dynamic_type/TestDynamicSerDe.java,433,"schema.setProperty(Constants.COLLECTION_DELIM, ""1"");"
serde/src/test/org/apache/hadoop/hive/serde2/dynamic_type/TestDynamicSerDe.java,434,"schema.setProperty(Constants.LINE_DELIM, ""2"");"
serde/src/test/org/apache/hadoop/hive/serde2/dynamic_type/TestDynamicSerDe.java,435,"schema.setProperty(Constants.MAPKEY_DELIM, ""4"");"
serde/src/test/org/apache/hadoop/hive/serde2/dynamic_type/TestDynamicSerDe.java,497,"schema.setProperty(Constants.SERIALIZATION_FORMAT,"
serde/src/test/org/apache/hadoop/hive/serde2/dynamic_type/TestDynamicSerDe.java,501,"org.apache.hadoop.hive.metastore.api.Constants.META_TABLE_NAME,"
serde/src/test/org/apache/hadoop/hive/serde2/dynamic_type/TestDynamicSerDe.java,504,".setProperty(Constants.SERIALIZATION_DDL,"
serde/src/test/org/apache/hadoop/hive/serde2/dynamic_type/TestDynamicSerDe.java,506,"schema.setProperty(Constants.SERIALIZATION_LIB, new DynamicSerDe()"
serde/src/test/org/apache/hadoop/hive/serde2/dynamic_type/TestDynamicSerDe.java,547,"schema.setProperty(Constants.SERIALIZATION_FORMAT,"
serde/src/test/org/apache/hadoop/hive/serde2/dynamic_type/TestDynamicSerDe.java,551,"org.apache.hadoop.hive.metastore.api.Constants.META_TABLE_NAME,"
serde/src/test/org/apache/hadoop/hive/serde2/dynamic_type/TestDynamicSerDe.java,554,".setProperty(Constants.SERIALIZATION_DDL,"
serde/src/test/org/apache/hadoop/hive/serde2/dynamic_type/TestDynamicSerDe.java,556,"schema.setProperty(Constants.SERIALIZATION_LIB, new DynamicSerDe()"
serde/src/test/org/apache/hadoop/hive/serde2/dynamic_type/TestDynamicSerDe.java,605,"schema.setProperty(Constants.SERIALIZATION_FORMAT,"
serde/src/test/org/apache/hadoop/hive/serde2/dynamic_type/TestDynamicSerDe.java,609,"org.apache.hadoop.hive.metastore.api.Constants.META_TABLE_NAME,"
serde/src/test/org/apache/hadoop/hive/serde2/dynamic_type/TestDynamicSerDe.java,612,".setProperty(Constants.SERIALIZATION_DDL,"
serde/src/test/org/apache/hadoop/hive/serde2/dynamic_type/TestDynamicSerDe.java,614,"schema.setProperty(Constants.SERIALIZATION_LIB, new DynamicSerDe()"
serde/src/test/org/apache/hadoop/hive/serde2/dynamic_type/TestDynamicSerDe.java,663,"schema.setProperty(Constants.SERIALIZATION_FORMAT,"
serde/src/test/org/apache/hadoop/hive/serde2/dynamic_type/TestDynamicSerDe.java,667,"org.apache.hadoop.hive.metastore.api.Constants.META_TABLE_NAME,"
serde/src/test/org/apache/hadoop/hive/serde2/dynamic_type/TestDynamicSerDe.java,670,".setProperty(Constants.SERIALIZATION_DDL,"
serde/src/test/org/apache/hadoop/hive/serde2/dynamic_type/TestDynamicSerDe.java,672,"schema.setProperty(Constants.SERIALIZATION_LIB, new DynamicSerDe()"
serde/src/test/org/apache/hadoop/hive/serde2/dynamic_type/TestDynamicSerDe.java,717,"schema.setProperty(Constants.SERIALIZATION_FORMAT,"
serde/src/test/org/apache/hadoop/hive/serde2/dynamic_type/TestDynamicSerDe.java,720,"org.apache.hadoop.hive.metastore.api.Constants.META_TABLE_NAME,"
serde/src/test/org/apache/hadoop/hive/serde2/dynamic_type/TestDynamicSerDe.java,723,"Constants.SERIALIZATION_DDL,"
serde/src/test/org/apache/hadoop/hive/serde2/dynamic_type/TestDynamicSerDe.java,725,"schema.setProperty(Constants.SERIALIZATION_LIB, new DynamicSerDe()"
serde/src/test/org/apache/hadoop/hive/serde2/dynamic_type/TestDynamicSerDe.java,793,"schema.setProperty(Constants.SERIALIZATION_FORMAT,"
serde/src/test/org/apache/hadoop/hive/serde2/dynamic_type/TestDynamicSerDe.java,797,"org.apache.hadoop.hive.metastore.api.Constants.META_TABLE_NAME,"
serde/src/test/org/apache/hadoop/hive/serde2/dynamic_type/TestDynamicSerDe.java,800,".setProperty(Constants.SERIALIZATION_DDL,"
serde/src/test/org/apache/hadoop/hive/serde2/dynamic_type/TestDynamicSerDe.java,802,"schema.setProperty(Constants.SERIALIZATION_LIB, new DynamicSerDe()"
serde/src/test/org/apache/hadoop/hive/serde2/dynamic_type/TestDynamicSerDe.java,805,"schema.setProperty(Constants.FIELD_DELIM, ""9"");"
serde/src/test/org/apache/hadoop/hive/serde2/dynamic_type/TestDynamicSerDe.java,806,"schema.setProperty(Constants.COLLECTION_DELIM, ""1"");"
serde/src/test/org/apache/hadoop/hive/serde2/dynamic_type/TestDynamicSerDe.java,807,"schema.setProperty(Constants.LINE_DELIM, ""2"");"
serde/src/test/org/apache/hadoop/hive/serde2/dynamic_type/TestDynamicSerDe.java,808,"schema.setProperty(Constants.MAPKEY_DELIM, ""4"");"
serde/src/test/org/apache/hadoop/hive/serde2/dynamic_type/TestDynamicSerDe.java,834,".setProperty(Constants.SERIALIZATION_DDL,"
serde/src/test/org/apache/hadoop/hive/serde2/dynamic_type/TestDynamicSerDe.java,411,"HashMap<String, Integer> another = new HashMap<String, Integer>();"
serde/src/test/org/apache/hadoop/hive/serde2/dynamic_type/TestDynamicSerDe.java,784,"HashMap<String, Integer> another = new HashMap<String, Integer>();"
serde/src/test/org/apache/hadoop/hive/serde2/lazy/TestLazySimpleSerDe.java,27,import org.apache.hadoop.hive.serde.Constants;
serde/src/test/org/apache/hadoop/hive/serde2/lazy/TestLazySimpleSerDe.java,54,"tbl.setProperty(Constants.SERIALIZATION_FORMAT, ""9"");"
serde/src/test/org/apache/hadoop/hive/serde2/lazy/TestLazySimpleSerDe.java,59,"tbl.setProperty(Constants.SERIALIZATION_NULL_FORMAT, ""NULL"");"
serde/src/test/org/apache/hadoop/hive/serde2/lazy/TestLazySimpleSerDe.java,108,"tbl.setProperty(Constants.SERIALIZATION_FORMAT, ""9"");"
serde/src/test/org/apache/hadoop/hive/serde2/lazy/TestLazySimpleSerDe.java,113,"tbl.setProperty(Constants.SERIALIZATION_NULL_FORMAT, ""NULL"");"
serde/src/test/org/apache/hadoop/hive/serde2/lazy/TestLazySimpleSerDe.java,126,"tbl.setProperty(Constants.SERIALIZATION_LAST_COLUMN_TAKES_REST, ""true"");"
serde/src/test/org/apache/hadoop/hive/serde2/objectinspector/TestCrossMapEqualComparer.java,26,import org.apache.hadoop.hive.serde.Constants;
serde/src/test/org/apache/hadoop/hive/serde2/objectinspector/TestCrossMapEqualComparer.java,99,"tbl.setProperty(Constants.LIST_COLUMNS, ObjectInspectorUtils.getFieldNames(oi1));"
serde/src/test/org/apache/hadoop/hive/serde2/objectinspector/TestCrossMapEqualComparer.java,100,"tbl.setProperty(Constants.LIST_COLUMN_TYPES, ObjectInspectorUtils.getFieldTypes(oi1));"
serde/src/test/org/apache/hadoop/hive/serde2/objectinspector/TestCrossMapEqualComparer.java,153,"tbl.setProperty(Constants.LIST_COLUMNS, ObjectInspectorUtils.getFieldNames(oi1));"
serde/src/test/org/apache/hadoop/hive/serde2/objectinspector/TestCrossMapEqualComparer.java,154,"tbl.setProperty(Constants.LIST_COLUMN_TYPES, ObjectInspectorUtils.getFieldTypes(oi1));"
serde/src/test/org/apache/hadoop/hive/serde2/objectinspector/TestSimpleMapEqualComparer.java,26,import org.apache.hadoop.hive.serde.Constants;
serde/src/test/org/apache/hadoop/hive/serde2/objectinspector/TestSimpleMapEqualComparer.java,99,"tbl.setProperty(Constants.LIST_COLUMNS, ObjectInspectorUtils.getFieldNames(oi1));"
serde/src/test/org/apache/hadoop/hive/serde2/objectinspector/TestSimpleMapEqualComparer.java,100,"tbl.setProperty(Constants.LIST_COLUMN_TYPES, ObjectInspectorUtils.getFieldTypes(oi1));"
serde/src/test/org/apache/hadoop/hive/serde2/objectinspector/TestSimpleMapEqualComparer.java,153,"tbl.setProperty(Constants.LIST_COLUMNS, ObjectInspectorUtils.getFieldNames(oi1));"
serde/src/test/org/apache/hadoop/hive/serde2/objectinspector/TestSimpleMapEqualComparer.java,154,"tbl.setProperty(Constants.LIST_COLUMN_TYPES, ObjectInspectorUtils.getFieldTypes(oi1));"
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveClusterStatus.java,123,private BitSet __isset_bit_vector = new BitSet(5);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveClusterStatus.java,173,__isset_bit_vector.clear();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveClusterStatus.java,174,__isset_bit_vector.or(other.__isset_bit_vector);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveClusterStatus.java,214,__isset_bit_vector.clear(__TASKTRACKERS_ISSET_ID);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveClusterStatus.java,219,return __isset_bit_vector.get(__TASKTRACKERS_ISSET_ID);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveClusterStatus.java,223,"__isset_bit_vector.set(__TASKTRACKERS_ISSET_ID, value);"
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveClusterStatus.java,236,__isset_bit_vector.clear(__MAPTASKS_ISSET_ID);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveClusterStatus.java,241,return __isset_bit_vector.get(__MAPTASKS_ISSET_ID);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveClusterStatus.java,245,"__isset_bit_vector.set(__MAPTASKS_ISSET_ID, value);"
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveClusterStatus.java,258,__isset_bit_vector.clear(__REDUCETASKS_ISSET_ID);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveClusterStatus.java,263,return __isset_bit_vector.get(__REDUCETASKS_ISSET_ID);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveClusterStatus.java,267,"__isset_bit_vector.set(__REDUCETASKS_ISSET_ID, value);"
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveClusterStatus.java,280,__isset_bit_vector.clear(__MAXMAPTASKS_ISSET_ID);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveClusterStatus.java,285,return __isset_bit_vector.get(__MAXMAPTASKS_ISSET_ID);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveClusterStatus.java,289,"__isset_bit_vector.set(__MAXMAPTASKS_ISSET_ID, value);"
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveClusterStatus.java,302,__isset_bit_vector.clear(__MAXREDUCETASKS_ISSET_ID);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveClusterStatus.java,307,return __isset_bit_vector.get(__MAXREDUCETASKS_ISSET_ID);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveClusterStatus.java,311,"__isset_bit_vector.set(__MAXREDUCETASKS_ISSET_ID, value);"
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveClusterStatus.java,596,org.apache.thrift.protocol.TField field;
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveClusterStatus.java,597,iprot.readStructBegin();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveClusterStatus.java,598,while (true)
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveClusterStatus.java,600,field = iprot.readFieldBegin();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveClusterStatus.java,601,if (field.type == org.apache.thrift.protocol.TType.STOP) {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveClusterStatus.java,602,break;
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveClusterStatus.java,604,switch (field.id) {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveClusterStatus.java,605,case 1: // TASK_TRACKERS
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveClusterStatus.java,606,if (field.type == org.apache.thrift.protocol.TType.I32) {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveClusterStatus.java,607,this.taskTrackers = iprot.readI32();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveClusterStatus.java,608,setTaskTrackersIsSet(true);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveClusterStatus.java,609,} else {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveClusterStatus.java,610,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveClusterStatus.java,612,break;
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveClusterStatus.java,613,case 2: // MAP_TASKS
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveClusterStatus.java,614,if (field.type == org.apache.thrift.protocol.TType.I32) {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveClusterStatus.java,615,this.mapTasks = iprot.readI32();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveClusterStatus.java,616,setMapTasksIsSet(true);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveClusterStatus.java,617,} else {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveClusterStatus.java,618,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveClusterStatus.java,620,break;
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveClusterStatus.java,621,case 3: // REDUCE_TASKS
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveClusterStatus.java,622,if (field.type == org.apache.thrift.protocol.TType.I32) {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveClusterStatus.java,623,this.reduceTasks = iprot.readI32();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveClusterStatus.java,624,setReduceTasksIsSet(true);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveClusterStatus.java,625,} else {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveClusterStatus.java,626,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveClusterStatus.java,628,break;
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveClusterStatus.java,629,case 4: // MAX_MAP_TASKS
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveClusterStatus.java,630,if (field.type == org.apache.thrift.protocol.TType.I32) {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveClusterStatus.java,631,this.maxMapTasks = iprot.readI32();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveClusterStatus.java,632,setMaxMapTasksIsSet(true);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveClusterStatus.java,633,} else {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveClusterStatus.java,634,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveClusterStatus.java,636,break;
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveClusterStatus.java,637,case 5: // MAX_REDUCE_TASKS
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveClusterStatus.java,638,if (field.type == org.apache.thrift.protocol.TType.I32) {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveClusterStatus.java,639,this.maxReduceTasks = iprot.readI32();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveClusterStatus.java,640,setMaxReduceTasksIsSet(true);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveClusterStatus.java,641,} else {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveClusterStatus.java,642,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveClusterStatus.java,644,break;
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveClusterStatus.java,645,case 6: // STATE
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveClusterStatus.java,646,if (field.type == org.apache.thrift.protocol.TType.I32) {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveClusterStatus.java,647,this.state = JobTrackerState.findByValue(iprot.readI32());
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveClusterStatus.java,648,} else {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveClusterStatus.java,649,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveClusterStatus.java,651,break;
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveClusterStatus.java,652,default:
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveClusterStatus.java,653,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveClusterStatus.java,655,iprot.readFieldEnd();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveClusterStatus.java,657,iprot.readStructEnd();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveClusterStatus.java,658,validate();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveClusterStatus.java,662,validate();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveClusterStatus.java,664,oprot.writeStructBegin(STRUCT_DESC);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveClusterStatus.java,665,oprot.writeFieldBegin(TASK_TRACKERS_FIELD_DESC);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveClusterStatus.java,666,oprot.writeI32(this.taskTrackers);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveClusterStatus.java,667,oprot.writeFieldEnd();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveClusterStatus.java,668,oprot.writeFieldBegin(MAP_TASKS_FIELD_DESC);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveClusterStatus.java,669,oprot.writeI32(this.mapTasks);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveClusterStatus.java,670,oprot.writeFieldEnd();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveClusterStatus.java,671,oprot.writeFieldBegin(REDUCE_TASKS_FIELD_DESC);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveClusterStatus.java,672,oprot.writeI32(this.reduceTasks);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveClusterStatus.java,673,oprot.writeFieldEnd();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveClusterStatus.java,674,oprot.writeFieldBegin(MAX_MAP_TASKS_FIELD_DESC);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveClusterStatus.java,675,oprot.writeI32(this.maxMapTasks);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveClusterStatus.java,676,oprot.writeFieldEnd();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveClusterStatus.java,677,oprot.writeFieldBegin(MAX_REDUCE_TASKS_FIELD_DESC);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveClusterStatus.java,678,oprot.writeI32(this.maxReduceTasks);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveClusterStatus.java,679,oprot.writeFieldEnd();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveClusterStatus.java,680,if (this.state != null) {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveClusterStatus.java,681,oprot.writeFieldBegin(STATE_FIELD_DESC);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveClusterStatus.java,682,oprot.writeI32(this.state.getValue());
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveClusterStatus.java,683,oprot.writeFieldEnd();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveClusterStatus.java,685,oprot.writeFieldStop();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveClusterStatus.java,686,oprot.writeStructEnd();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveClusterStatus.java,740,__isset_bit_vector = new BitSet(1);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveClusterStatus.java,401,return Integer.valueOf(getTaskTrackers());
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveClusterStatus.java,404,return Integer.valueOf(getMapTasks());
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveClusterStatus.java,407,return Integer.valueOf(getReduceTasks());
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveClusterStatus.java,410,return Integer.valueOf(getMaxMapTasks());
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveClusterStatus.java,413,return Integer.valueOf(getMaxReduceTasks());
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveServerException.java,23,"public class HiveServerException extends Exception implements org.apache.thrift.TBase<HiveServerException, HiveServerException._Fields>, java.io.Serializable, Cloneable {"
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveServerException.java,100,private BitSet __isset_bit_vector = new BitSet(1);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveServerException.java,134,__isset_bit_vector.clear();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveServerException.java,135,__isset_bit_vector.or(other.__isset_bit_vector);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveServerException.java,190,__isset_bit_vector.clear(__ERRORCODE_ISSET_ID);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveServerException.java,195,return __isset_bit_vector.get(__ERRORCODE_ISSET_ID);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveServerException.java,199,"__isset_bit_vector.set(__ERRORCODE_ISSET_ID, value);"
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveServerException.java,380,org.apache.thrift.protocol.TField field;
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveServerException.java,381,iprot.readStructBegin();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveServerException.java,382,while (true)
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveServerException.java,384,field = iprot.readFieldBegin();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveServerException.java,385,if (field.type == org.apache.thrift.protocol.TType.STOP) {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveServerException.java,386,break;
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveServerException.java,388,switch (field.id) {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveServerException.java,389,case 1: // MESSAGE
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveServerException.java,390,if (field.type == org.apache.thrift.protocol.TType.STRING) {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveServerException.java,391,this.message = iprot.readString();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveServerException.java,392,} else {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveServerException.java,393,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveServerException.java,395,break;
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveServerException.java,396,case 2: // ERROR_CODE
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveServerException.java,397,if (field.type == org.apache.thrift.protocol.TType.I32) {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveServerException.java,398,this.errorCode = iprot.readI32();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveServerException.java,399,setErrorCodeIsSet(true);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveServerException.java,400,} else {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveServerException.java,401,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveServerException.java,403,break;
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveServerException.java,404,case 3: // SQLSTATE
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveServerException.java,405,if (field.type == org.apache.thrift.protocol.TType.STRING) {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveServerException.java,406,this.SQLState = iprot.readString();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveServerException.java,407,} else {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveServerException.java,408,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveServerException.java,410,break;
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveServerException.java,411,default:
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveServerException.java,412,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveServerException.java,414,iprot.readFieldEnd();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveServerException.java,416,iprot.readStructEnd();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveServerException.java,417,validate();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveServerException.java,421,validate();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveServerException.java,423,oprot.writeStructBegin(STRUCT_DESC);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveServerException.java,424,if (this.message != null) {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveServerException.java,425,oprot.writeFieldBegin(MESSAGE_FIELD_DESC);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveServerException.java,426,oprot.writeString(this.message);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveServerException.java,427,oprot.writeFieldEnd();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveServerException.java,429,oprot.writeFieldBegin(ERROR_CODE_FIELD_DESC);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveServerException.java,430,oprot.writeI32(this.errorCode);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveServerException.java,431,oprot.writeFieldEnd();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveServerException.java,432,if (this.SQLState != null) {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveServerException.java,433,oprot.writeFieldBegin(SQLSTATE_FIELD_DESC);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveServerException.java,434,oprot.writeString(this.SQLState);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveServerException.java,435,oprot.writeFieldEnd();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveServerException.java,437,oprot.writeFieldStop();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveServerException.java,438,oprot.writeStructEnd();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveServerException.java,484,__isset_bit_vector = new BitSet(1);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/HiveServerException.java,260,return Integer.valueOf(getErrorCode());
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,594,public static class Processor<I extends Iface> extends org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore.Processor implements org.apache.thrift.TProcessor {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,617,"private static class execute<I extends Iface> extends org.apache.thrift.ProcessFunction<I, execute_args> {"
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,622,protected execute_args getEmptyArgsInstance() {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,626,"protected execute_result getResult(I iface, execute_args args) throws org.apache.thrift.TException {"
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,637,"private static class fetchOne<I extends Iface> extends org.apache.thrift.ProcessFunction<I, fetchOne_args> {"
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,642,protected fetchOne_args getEmptyArgsInstance() {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,646,"protected fetchOne_result getResult(I iface, fetchOne_args args) throws org.apache.thrift.TException {"
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,657,"private static class fetchN<I extends Iface> extends org.apache.thrift.ProcessFunction<I, fetchN_args> {"
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,662,protected fetchN_args getEmptyArgsInstance() {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,666,"protected fetchN_result getResult(I iface, fetchN_args args) throws org.apache.thrift.TException {"
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,677,"private static class fetchAll<I extends Iface> extends org.apache.thrift.ProcessFunction<I, fetchAll_args> {"
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,682,protected fetchAll_args getEmptyArgsInstance() {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,686,"protected fetchAll_result getResult(I iface, fetchAll_args args) throws org.apache.thrift.TException {"
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,697,"private static class getSchema<I extends Iface> extends org.apache.thrift.ProcessFunction<I, getSchema_args> {"
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,702,protected getSchema_args getEmptyArgsInstance() {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,706,"protected getSchema_result getResult(I iface, getSchema_args args) throws org.apache.thrift.TException {"
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,717,"private static class getThriftSchema<I extends Iface> extends org.apache.thrift.ProcessFunction<I, getThriftSchema_args> {"
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,722,protected getThriftSchema_args getEmptyArgsInstance() {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,726,"protected getThriftSchema_result getResult(I iface, getThriftSchema_args args) throws org.apache.thrift.TException {"
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,737,"private static class getClusterStatus<I extends Iface> extends org.apache.thrift.ProcessFunction<I, getClusterStatus_args> {"
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,742,protected getClusterStatus_args getEmptyArgsInstance() {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,746,"protected getClusterStatus_result getResult(I iface, getClusterStatus_args args) throws org.apache.thrift.TException {"
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,757,"private static class getQueryPlan<I extends Iface> extends org.apache.thrift.ProcessFunction<I, getQueryPlan_args> {"
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,762,protected getQueryPlan_args getEmptyArgsInstance() {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,766,"protected getQueryPlan_result getResult(I iface, getQueryPlan_args args) throws org.apache.thrift.TException {"
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,777,"private static class clean<I extends Iface> extends org.apache.thrift.ProcessFunction<I, clean_args> {"
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,782,protected clean_args getEmptyArgsInstance() {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,786,"protected clean_result getResult(I iface, clean_args args) throws org.apache.thrift.TException {"
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,1013,org.apache.thrift.protocol.TField field;
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,1014,iprot.readStructBegin();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,1015,while (true)
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,1017,field = iprot.readFieldBegin();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,1018,if (field.type == org.apache.thrift.protocol.TType.STOP) {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,1019,break;
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,1021,switch (field.id) {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,1022,case 1: // QUERY
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,1023,if (field.type == org.apache.thrift.protocol.TType.STRING) {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,1024,this.query = iprot.readString();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,1025,} else {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,1026,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,1028,break;
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,1029,default:
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,1030,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,1032,iprot.readFieldEnd();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,1034,iprot.readStructEnd();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,1035,validate();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,1039,validate();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,1041,oprot.writeStructBegin(STRUCT_DESC);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,1042,if (this.query != null) {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,1043,oprot.writeFieldBegin(QUERY_FIELD_DESC);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,1044,oprot.writeString(this.query);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,1045,oprot.writeFieldEnd();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,1047,oprot.writeFieldStop();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,1048,oprot.writeStructEnd();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,1307,org.apache.thrift.protocol.TField field;
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,1308,iprot.readStructBegin();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,1309,while (true)
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,1311,field = iprot.readFieldBegin();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,1312,if (field.type == org.apache.thrift.protocol.TType.STOP) {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,1313,break;
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,1315,switch (field.id) {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,1316,case 1: // EX
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,1317,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,1318,this.ex = new HiveServerException();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,1319,this.ex.read(iprot);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,1320,} else {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,1321,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,1323,break;
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,1324,default:
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,1325,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,1327,iprot.readFieldEnd();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,1329,iprot.readStructEnd();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,1330,validate();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,1334,oprot.writeStructBegin(STRUCT_DESC);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,1336,if (this.isSetEx()) {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,1337,oprot.writeFieldBegin(EX_FIELD_DESC);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,1338,this.ex.write(oprot);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,1339,oprot.writeFieldEnd();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,1526,org.apache.thrift.protocol.TField field;
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,1527,iprot.readStructBegin();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,1528,while (true)
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,1530,field = iprot.readFieldBegin();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,1531,if (field.type == org.apache.thrift.protocol.TType.STOP) {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,1532,break;
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,1534,switch (field.id) {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,1535,default:
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,1536,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,1538,iprot.readFieldEnd();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,1540,iprot.readStructEnd();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,1541,validate();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,1545,validate();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,1547,oprot.writeStructBegin(STRUCT_DESC);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,1548,oprot.writeFieldStop();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,1549,oprot.writeStructEnd();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,1869,org.apache.thrift.protocol.TField field;
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,1870,iprot.readStructBegin();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,1871,while (true)
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,1873,field = iprot.readFieldBegin();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,1874,if (field.type == org.apache.thrift.protocol.TType.STOP) {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,1875,break;
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,1877,switch (field.id) {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,1878,case 0: // SUCCESS
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,1879,if (field.type == org.apache.thrift.protocol.TType.STRING) {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,1880,this.success = iprot.readString();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,1881,} else {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,1882,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,1884,break;
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,1885,case 1: // EX
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,1886,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,1887,this.ex = new HiveServerException();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,1888,this.ex.read(iprot);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,1889,} else {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,1890,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,1892,break;
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,1893,default:
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,1894,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,1896,iprot.readFieldEnd();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,1898,iprot.readStructEnd();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,1899,validate();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,1903,oprot.writeStructBegin(STRUCT_DESC);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,1905,if (this.isSetSuccess()) {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,1906,oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,1907,oprot.writeString(this.success);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,1908,oprot.writeFieldEnd();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,1909,} else if (this.isSetEx()) {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,1910,oprot.writeFieldBegin(EX_FIELD_DESC);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,1911,this.ex.write(oprot);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,1912,oprot.writeFieldEnd();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,2031,private BitSet __isset_bit_vector = new BitSet(1);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,2057,__isset_bit_vector.clear();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,2058,__isset_bit_vector.or(other.__isset_bit_vector);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,2082,__isset_bit_vector.clear(__NUMROWS_ISSET_ID);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,2087,return __isset_bit_vector.get(__NUMROWS_ISSET_ID);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,2091,"__isset_bit_vector.set(__NUMROWS_ISSET_ID, value);"
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,2185,org.apache.thrift.protocol.TField field;
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,2186,iprot.readStructBegin();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,2187,while (true)
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,2189,field = iprot.readFieldBegin();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,2190,if (field.type == org.apache.thrift.protocol.TType.STOP) {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,2191,break;
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,2193,switch (field.id) {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,2194,case 1: // NUM_ROWS
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,2195,if (field.type == org.apache.thrift.protocol.TType.I32) {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,2196,this.numRows = iprot.readI32();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,2197,setNumRowsIsSet(true);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,2198,} else {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,2199,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,2201,break;
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,2202,default:
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,2203,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,2205,iprot.readFieldEnd();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,2207,iprot.readStructEnd();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,2208,validate();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,2212,validate();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,2214,oprot.writeStructBegin(STRUCT_DESC);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,2215,oprot.writeFieldBegin(NUM_ROWS_FIELD_DESC);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,2216,oprot.writeI32(this.numRows);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,2217,oprot.writeFieldEnd();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,2218,oprot.writeFieldStop();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,2219,oprot.writeStructEnd();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,2249,__isset_bit_vector = new BitSet(1);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,2564,org.apache.thrift.protocol.TField field;
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,2565,iprot.readStructBegin();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,2566,while (true)
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,2568,field = iprot.readFieldBegin();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,2569,if (field.type == org.apache.thrift.protocol.TType.STOP) {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,2570,break;
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,2572,switch (field.id) {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,2573,case 0: // SUCCESS
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,2574,if (field.type == org.apache.thrift.protocol.TType.LIST) {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,2576,org.apache.thrift.protocol.TList _list0 = iprot.readListBegin();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,2577,this.success = new ArrayList<String>(_list0.size);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,2578,for (int _i1 = 0; _i1 < _list0.size; ++_i1)
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,2580,String _elem2; // required
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,2581,_elem2 = iprot.readString();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,2582,this.success.add(_elem2);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,2584,iprot.readListEnd();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,2586,} else {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,2587,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,2589,break;
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,2590,case 1: // EX
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,2591,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,2592,this.ex = new HiveServerException();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,2593,this.ex.read(iprot);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,2594,} else {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,2595,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,2597,break;
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,2598,default:
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,2599,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,2601,iprot.readFieldEnd();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,2603,iprot.readStructEnd();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,2604,validate();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,2608,oprot.writeStructBegin(STRUCT_DESC);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,2610,if (this.isSetSuccess()) {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,2611,oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,2613,"oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, this.success.size()));"
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,2614,for (String _iter3 : this.success)
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,2616,oprot.writeString(_iter3);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,2618,oprot.writeListEnd();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,2620,oprot.writeFieldEnd();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,2621,} else if (this.isSetEx()) {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,2622,oprot.writeFieldBegin(EX_FIELD_DESC);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,2623,this.ex.write(oprot);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,2624,oprot.writeFieldEnd();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,2626,oprot.writeFieldStop();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,2627,oprot.writeStructEnd();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,2819,org.apache.thrift.protocol.TField field;
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,2820,iprot.readStructBegin();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,2821,while (true)
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,2823,field = iprot.readFieldBegin();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,2824,if (field.type == org.apache.thrift.protocol.TType.STOP) {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,2825,break;
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,2827,switch (field.id) {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,2828,default:
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,2829,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,2831,iprot.readFieldEnd();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,2833,iprot.readStructEnd();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,2834,validate();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,2838,validate();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,2840,oprot.writeStructBegin(STRUCT_DESC);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,2841,oprot.writeFieldStop();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,2842,oprot.writeStructEnd();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,3182,org.apache.thrift.protocol.TField field;
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,3183,iprot.readStructBegin();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,3184,while (true)
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,3186,field = iprot.readFieldBegin();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,3187,if (field.type == org.apache.thrift.protocol.TType.STOP) {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,3188,break;
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,3190,switch (field.id) {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,3191,case 0: // SUCCESS
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,3192,if (field.type == org.apache.thrift.protocol.TType.LIST) {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,3194,org.apache.thrift.protocol.TList _list4 = iprot.readListBegin();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,3195,this.success = new ArrayList<String>(_list4.size);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,3196,for (int _i5 = 0; _i5 < _list4.size; ++_i5)
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,3198,String _elem6; // required
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,3199,_elem6 = iprot.readString();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,3200,this.success.add(_elem6);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,3202,iprot.readListEnd();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,3204,} else {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,3205,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,3207,break;
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,3208,case 1: // EX
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,3209,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,3210,this.ex = new HiveServerException();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,3211,this.ex.read(iprot);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,3212,} else {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,3213,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,3215,break;
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,3216,default:
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,3217,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,3219,iprot.readFieldEnd();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,3221,iprot.readStructEnd();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,3222,validate();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,3226,oprot.writeStructBegin(STRUCT_DESC);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,3228,if (this.isSetSuccess()) {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,3229,oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,3231,"oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, this.success.size()));"
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,3232,for (String _iter7 : this.success)
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,3234,oprot.writeString(_iter7);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,3236,oprot.writeListEnd();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,3238,oprot.writeFieldEnd();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,3239,} else if (this.isSetEx()) {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,3240,oprot.writeFieldBegin(EX_FIELD_DESC);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,3241,this.ex.write(oprot);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,3242,oprot.writeFieldEnd();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,3437,org.apache.thrift.protocol.TField field;
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,3438,iprot.readStructBegin();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,3439,while (true)
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,3441,field = iprot.readFieldBegin();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,3442,if (field.type == org.apache.thrift.protocol.TType.STOP) {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,3443,break;
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,3445,switch (field.id) {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,3446,default:
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,3447,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,3449,iprot.readFieldEnd();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,3451,iprot.readStructEnd();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,3452,validate();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,3456,validate();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,3458,oprot.writeStructBegin(STRUCT_DESC);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,3459,oprot.writeFieldStop();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,3460,oprot.writeStructEnd();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,3780,org.apache.thrift.protocol.TField field;
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,3781,iprot.readStructBegin();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,3782,while (true)
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,3784,field = iprot.readFieldBegin();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,3785,if (field.type == org.apache.thrift.protocol.TType.STOP) {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,3786,break;
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,3788,switch (field.id) {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,3789,case 0: // SUCCESS
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,3790,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,3791,this.success = new org.apache.hadoop.hive.metastore.api.Schema();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,3792,this.success.read(iprot);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,3793,} else {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,3794,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,3796,break;
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,3797,case 1: // EX
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,3798,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,3799,this.ex = new HiveServerException();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,3800,this.ex.read(iprot);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,3801,} else {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,3802,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,3804,break;
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,3805,default:
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,3806,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,3808,iprot.readFieldEnd();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,3810,iprot.readStructEnd();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,3811,validate();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,3815,oprot.writeStructBegin(STRUCT_DESC);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,3817,if (this.isSetSuccess()) {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,3818,oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,3819,this.success.write(oprot);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,3820,oprot.writeFieldEnd();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,3821,} else if (this.isSetEx()) {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,3822,oprot.writeFieldBegin(EX_FIELD_DESC);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,3823,this.ex.write(oprot);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,3824,oprot.writeFieldEnd();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,4019,org.apache.thrift.protocol.TField field;
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,4020,iprot.readStructBegin();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,4021,while (true)
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,4023,field = iprot.readFieldBegin();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,4024,if (field.type == org.apache.thrift.protocol.TType.STOP) {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,4025,break;
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,4027,switch (field.id) {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,4028,default:
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,4029,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,4031,iprot.readFieldEnd();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,4033,iprot.readStructEnd();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,4034,validate();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,4038,validate();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,4040,oprot.writeStructBegin(STRUCT_DESC);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,4041,oprot.writeFieldStop();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,4042,oprot.writeStructEnd();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,4362,org.apache.thrift.protocol.TField field;
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,4363,iprot.readStructBegin();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,4364,while (true)
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,4366,field = iprot.readFieldBegin();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,4367,if (field.type == org.apache.thrift.protocol.TType.STOP) {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,4368,break;
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,4370,switch (field.id) {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,4371,case 0: // SUCCESS
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,4372,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,4373,this.success = new org.apache.hadoop.hive.metastore.api.Schema();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,4374,this.success.read(iprot);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,4375,} else {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,4376,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,4378,break;
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,4379,case 1: // EX
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,4380,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,4381,this.ex = new HiveServerException();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,4382,this.ex.read(iprot);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,4383,} else {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,4384,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,4386,break;
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,4387,default:
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,4388,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,4390,iprot.readFieldEnd();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,4392,iprot.readStructEnd();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,4393,validate();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,4397,oprot.writeStructBegin(STRUCT_DESC);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,4399,if (this.isSetSuccess()) {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,4400,oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,4401,this.success.write(oprot);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,4402,oprot.writeFieldEnd();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,4403,} else if (this.isSetEx()) {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,4404,oprot.writeFieldBegin(EX_FIELD_DESC);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,4405,this.ex.write(oprot);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,4406,oprot.writeFieldEnd();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,4440,private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,4441,try {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,4442,write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,4443,} catch (org.apache.thrift.TException te) {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,4444,throw new java.io.IOException(te);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,4448,"private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {"
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,4449,try {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,4450,read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,4451,} catch (org.apache.thrift.TException te) {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,4452,throw new java.io.IOException(te);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,4601,org.apache.thrift.protocol.TField field;
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,4602,iprot.readStructBegin();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,4603,while (true)
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,4605,field = iprot.readFieldBegin();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,4606,if (field.type == org.apache.thrift.protocol.TType.STOP) {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,4607,break;
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,4609,switch (field.id) {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,4610,default:
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,4611,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,4613,iprot.readFieldEnd();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,4615,iprot.readStructEnd();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,4616,validate();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,4620,validate();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,4622,oprot.writeStructBegin(STRUCT_DESC);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,4623,oprot.writeFieldStop();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,4624,oprot.writeStructEnd();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,4944,org.apache.thrift.protocol.TField field;
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,4945,iprot.readStructBegin();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,4946,while (true)
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,4948,field = iprot.readFieldBegin();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,4949,if (field.type == org.apache.thrift.protocol.TType.STOP) {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,4950,break;
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,4952,switch (field.id) {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,4953,case 0: // SUCCESS
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,4954,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,4955,this.success = new HiveClusterStatus();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,4956,this.success.read(iprot);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,4957,} else {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,4958,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,4960,break;
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,4961,case 1: // EX
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,4962,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,4963,this.ex = new HiveServerException();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,4964,this.ex.read(iprot);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,4965,} else {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,4966,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,4968,break;
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,4969,default:
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,4970,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,4972,iprot.readFieldEnd();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,4974,iprot.readStructEnd();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,4975,validate();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,4979,oprot.writeStructBegin(STRUCT_DESC);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,4981,if (this.isSetSuccess()) {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,4982,oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,4983,this.success.write(oprot);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,4984,oprot.writeFieldEnd();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,4985,} else if (this.isSetEx()) {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,4986,oprot.writeFieldBegin(EX_FIELD_DESC);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,4987,this.ex.write(oprot);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,4988,oprot.writeFieldEnd();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,5183,org.apache.thrift.protocol.TField field;
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,5184,iprot.readStructBegin();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,5185,while (true)
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,5187,field = iprot.readFieldBegin();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,5188,if (field.type == org.apache.thrift.protocol.TType.STOP) {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,5189,break;
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,5191,switch (field.id) {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,5192,default:
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,5193,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,5195,iprot.readFieldEnd();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,5197,iprot.readStructEnd();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,5198,validate();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,5202,validate();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,5204,oprot.writeStructBegin(STRUCT_DESC);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,5205,oprot.writeFieldStop();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,5206,oprot.writeStructEnd();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,5526,org.apache.thrift.protocol.TField field;
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,5527,iprot.readStructBegin();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,5528,while (true)
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,5530,field = iprot.readFieldBegin();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,5531,if (field.type == org.apache.thrift.protocol.TType.STOP) {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,5532,break;
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,5534,switch (field.id) {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,5535,case 0: // SUCCESS
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,5536,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,5537,this.success = new org.apache.hadoop.hive.ql.plan.api.QueryPlan();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,5538,this.success.read(iprot);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,5539,} else {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,5540,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,5542,break;
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,5543,case 1: // EX
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,5544,if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,5545,this.ex = new HiveServerException();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,5546,this.ex.read(iprot);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,5547,} else {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,5548,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,5550,break;
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,5551,default:
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,5552,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,5554,iprot.readFieldEnd();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,5556,iprot.readStructEnd();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,5557,validate();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,5561,oprot.writeStructBegin(STRUCT_DESC);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,5563,if (this.isSetSuccess()) {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,5564,oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,5565,this.success.write(oprot);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,5566,oprot.writeFieldEnd();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,5567,} else if (this.isSetEx()) {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,5568,oprot.writeFieldBegin(EX_FIELD_DESC);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,5569,this.ex.write(oprot);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,5570,oprot.writeFieldEnd();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,5765,org.apache.thrift.protocol.TField field;
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,5766,iprot.readStructBegin();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,5767,while (true)
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,5769,field = iprot.readFieldBegin();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,5770,if (field.type == org.apache.thrift.protocol.TType.STOP) {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,5771,break;
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,5773,switch (field.id) {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,5774,default:
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,5775,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,5777,iprot.readFieldEnd();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,5779,iprot.readStructEnd();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,5780,validate();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,5784,validate();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,5786,oprot.writeStructBegin(STRUCT_DESC);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,5787,oprot.writeFieldStop();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,5788,oprot.writeStructEnd();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,5965,org.apache.thrift.protocol.TField field;
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,5966,iprot.readStructBegin();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,5967,while (true)
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,5969,field = iprot.readFieldBegin();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,5970,if (field.type == org.apache.thrift.protocol.TType.STOP) {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,5971,break;
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,5973,switch (field.id) {
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,5974,default:
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,5975,"org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);"
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,5977,iprot.readFieldEnd();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,5979,iprot.readStructEnd();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,5980,validate();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,5984,oprot.writeStructBegin(STRUCT_DESC);
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,5986,oprot.writeFieldStop();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,5987,oprot.writeStructEnd();
service/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/service/ThriftHive.java,2110,return Integer.valueOf(getNumRows());
service/src/test/org/apache/hadoop/hive/service/TestHiveServer.java,32,import org.apache.hadoop.hive.serde.Constants;
service/src/test/org/apache/hadoop/hive/service/TestHiveServer.java,305,"dsp.setProperty(Constants.SERIALIZATION_FORMAT,"
service/src/test/org/apache/hadoop/hive/service/TestHiveServer.java,309,"org.apache.hadoop.hive.metastore.api.Constants.META_TABLE_NAME,"
service/src/test/org/apache/hadoop/hive/service/TestHiveServer.java,323,"dsp.setProperty(Constants.SERIALIZATION_DDL, serDDL);"
service/src/test/org/apache/hadoop/hive/service/TestHiveServer.java,324,"dsp.setProperty(Constants.SERIALIZATION_LIB, ds.getClass().toString());"
service/src/test/org/apache/hadoop/hive/service/TestHiveServer.java,325,"dsp.setProperty(Constants.FIELD_DELIM, ""9"");"
service/src/test/org/apache/hadoop/hive/service/TestHiveServer.java,352,"dsp.setProperty(Constants.SERIALIZATION_DDL, serDDL);"
service/src/test/org/apache/hadoop/hive/service/TestHiveServerSessions.java,55,Thread.sleep(1000);
ql/src/java/org/apache/hadoop/hive/ql/io/RCFile.java,724,"fs.getDefaultReplication(), fs.getDefaultBlockSize(), progress,"
metastore/src/java/org/apache/hadoop/hive/metastore/HiveMetaStoreFsImpl.java,44,Configuration dupConf = new Configuration(conf);
metastore/src/java/org/apache/hadoop/hive/metastore/HiveMetaStoreFsImpl.java,45,"FileSystem.setDefaultUri(dupConf, fs.getUri());"
metastore/src/java/org/apache/hadoop/hive/metastore/HiveMetaStoreFsImpl.java,48,Trash trashTmp = new Trash(dupConf);
metastore/src/java/org/apache/hadoop/hive/metastore/HiveMetaStoreFsImpl.java,49,if (trashTmp.moveToTrash(f)) {
ql/src/java/org/apache/hadoop/hive/ql/exec/AbstractMapJoinOperator.java,89,"JoinUtil.populateJoinKeyValue(joinKeys, conf.getKeys(),order,NOTSKIPBIGTABLE);"
ql/src/java/org/apache/hadoop/hive/ql/exec/AbstractMapJoinOperator.java,57,protected transient int posBigTable = -1; // one of the tables that is not in memory
ql/src/java/org/apache/hadoop/hive/ql/exec/AbstractMapJoinOperator.java,96,posBigTable = conf.getPosBigTable();
ql/src/java/org/apache/hadoop/hive/ql/exec/AbstractMapJoinOperator.java,100,"rowContainerStandardObjectInspectors.get((byte) posBigTable),"
ql/src/java/org/apache/hadoop/hive/ql/exec/AbstractMapJoinOperator.java,102,"storage.put((byte) posBigTable, bigPosRC);"
ql/src/java/org/apache/hadoop/hive/ql/exec/CommonJoinOperator.java,249,"order,NOTSKIPBIGTABLE);"
ql/src/java/org/apache/hadoop/hive/ql/exec/CommonJoinOperator.java,253,"JoinUtil.populateJoinKeyValue(joinFilters, conf.getFilters(),order,NOTSKIPBIGTABLE);"
ql/src/java/org/apache/hadoop/hive/ql/exec/HashTableSinkOperator.java,188,posBigTableTag = conf.getPosBigTable();
ql/src/java/org/apache/hadoop/hive/ql/exec/HashTableSinkOperator.java,203,"JoinUtil.populateJoinKeyValue(joinKeys, conf.getKeys(), order, posBigTableAlias);"
ql/src/java/org/apache/hadoop/hive/ql/exec/HashTableSinkOperator.java,211,"JoinUtil.populateJoinKeyValue(joinValues, conf.getExprs(), order, posBigTableAlias);"
ql/src/java/org/apache/hadoop/hive/ql/exec/HashTableSinkOperator.java,219,"JoinUtil.populateJoinKeyValue(joinFilters, conf.getFilters(), order, posBigTableAlias);"
ql/src/java/org/apache/hadoop/hive/ql/exec/HashTableSinkOperator.java,258,if (pos == posBigTableTag) {
ql/src/java/org/apache/hadoop/hive/ql/exec/HashTableSinkOperator.java,312,alias = order[tag];
ql/src/java/org/apache/hadoop/hive/ql/exec/HashTableSinkOperator.java,324,"HashMapWrapper<AbstractMapJoinKey, MapJoinObjectValue> hashTable = mapJoinTables"
ql/src/java/org/apache/hadoop/hive/ql/exec/HashTableSinkOperator.java,325,.get((byte) tag);
ql/src/java/org/apache/hadoop/hive/ql/exec/MapJoinOperator.java,230,alias = order[tag];
ql/src/java/org/apache/hadoop/hive/ql/exec/MapJoinOperator.java,246,storage.get((byte) tag).add(value);
ql/src/java/org/apache/hadoop/hive/ql/exec/MapJoinOperator.java,249,if (pos.intValue() != tag) {
ql/src/java/org/apache/hadoop/hive/ql/exec/MapJoinOperator.java,125,for (int tag = 0; tag < order.length; tag++) {
ql/src/java/org/apache/hadoop/hive/ql/exec/MapJoinOperator.java,126,int alias = (int) order[tag];
ql/src/java/org/apache/hadoop/hive/ql/exec/MapJoinOperator.java,128,if (alias == this.bigTableAlias) {
ql/src/java/org/apache/hadoop/hive/ql/exec/MapJoinOperator.java,138,"MapJoinMetaData.put(Integer.valueOf(alias), new HashTableSinkObjectCtx(ObjectInspectorUtils"
ql/src/java/org/apache/hadoop/hive/ql/exec/MapJoinOperator.java,259,"storage.put(pos, dummyObjVectors[pos.intValue()]);"
ql/src/java/org/apache/hadoop/hive/ql/exec/MapJoinOperator.java,274,for (Byte pos : order) {
ql/src/java/org/apache/hadoop/hive/ql/exec/MapJoinOperator.java,275,if (pos.intValue() != tag) {
ql/src/java/org/apache/hadoop/hive/ql/optimizer/physical/LocalMapJoinProcFactory.java,144,if (i == bigTableAlias) {
ql/src/java/org/apache/hadoop/hive/ql/exec/ConditionalTask.java,87,"console.printInfo(HadoopJobExecHelper.getJobEndMsg("""" + Utilities.randGen.nextInt())"
ql/src/java/org/apache/hadoop/hive/ql/exec/ConditionalTask.java,88,"+ "", job is filtered out (removed at runtime)."");"
ql/src/java/org/apache/hadoop/hive/ql/exec/SMBMapJoinOperator.java,93,for (Byte alias: order) {
ql/src/java/org/apache/hadoop/hive/ql/exec/SMBMapJoinOperator.java,94,if (alias > maxAlias) {
ql/src/java/org/apache/hadoop/hive/ql/exec/SMBMapJoinOperator.java,95,maxAlias = alias;
ql/src/java/org/apache/hadoop/hive/ql/exec/SMBMapJoinOperator.java,109,byte storePos = (byte) 0;
ql/src/java/org/apache/hadoop/hive/ql/exec/SMBMapJoinOperator.java,110,for (Byte alias : order) {
ql/src/java/org/apache/hadoop/hive/ql/exec/SMBMapJoinOperator.java,114,nextGroupStorage[storePos] = rc;
ql/src/java/org/apache/hadoop/hive/ql/exec/SMBMapJoinOperator.java,118,candidateStorage[alias] = candidateRC;
ql/src/java/org/apache/hadoop/hive/ql/exec/SMBMapJoinOperator.java,119,storePos++;
ql/src/java/org/apache/hadoop/hive/ql/exec/SMBMapJoinOperator.java,127,foundNextKeyGroup[alias] = false;
ql/src/java/org/apache/hadoop/hive/ql/exec/SMBMapJoinOperator.java,212,for (Byte t : order) {
ql/src/java/org/apache/hadoop/hive/ql/exec/SMBMapJoinOperator.java,213,if(t != (byte)posBigTable) {
ql/src/java/org/apache/hadoop/hive/ql/exec/SMBMapJoinOperator.java,214,fetchNextGroup(t);
ql/src/java/org/apache/hadoop/hive/ql/exec/SMBMapJoinOperator.java,247,assert tag == (byte)posBigTable;
ql/src/java/org/apache/hadoop/hive/ql/exec/SMBMapJoinOperator.java,253,&& !smallestPos.contains((byte)this.posBigTable));
ql/src/java/org/apache/hadoop/hive/ql/exec/SMBMapJoinOperator.java,292,for (byte t : order) {
ql/src/java/org/apache/hadoop/hive/ql/exec/SMBMapJoinOperator.java,293,if (this.foundNextKeyGroup[t]
ql/src/java/org/apache/hadoop/hive/ql/exec/SMBMapJoinOperator.java,294,&& this.nextKeyWritables[t] != null) {
ql/src/java/org/apache/hadoop/hive/ql/exec/SMBMapJoinOperator.java,295,promoteNextGroupToCandidate(t);
ql/src/java/org/apache/hadoop/hive/ql/exec/SMBMapJoinOperator.java,300,for (byte r : order) {
ql/src/java/org/apache/hadoop/hive/ql/exec/SMBMapJoinOperator.java,301,if (this.candidateStorage[r].size() > 0) {
ql/src/java/org/apache/hadoop/hive/ql/exec/SMBMapJoinOperator.java,311,for (Byte tag : order) {
ql/src/java/org/apache/hadoop/hive/ql/exec/SMBMapJoinOperator.java,312,if(tag == (byte) posBigTable) {
ql/src/java/org/apache/hadoop/hive/ql/exec/SMBMapJoinOperator.java,377,if(t == (byte)posBigTable) {
ql/src/java/org/apache/hadoop/hive/ql/exec/SMBMapJoinOperator.java,442,for (byte i : order) {
ql/src/java/org/apache/hadoop/hive/ql/exec/SMBMapJoinOperator.java,443,ArrayList<Object> key = keyWritables[i];
ql/src/java/org/apache/hadoop/hive/ql/exec/SMBMapJoinOperator.java,449,result[i] = -1;
ql/src/java/org/apache/hadoop/hive/ql/exec/SMBMapJoinOperator.java,452,"result[i] = compareKeys(key, smallestOne);"
ql/src/java/org/apache/hadoop/hive/ql/exec/SMBMapJoinOperator.java,453,if (result[i] < 0) {
ql/src/java/org/apache/hadoop/hive/ql/exec/SMBMapJoinOperator.java,543,for (Byte t : order) {
ql/src/java/org/apache/hadoop/hive/ql/exec/SMBMapJoinOperator.java,544,if(t != (byte)posBigTable) {
ql/src/java/org/apache/hadoop/hive/ql/exec/SMBMapJoinOperator.java,545,fetchNextGroup(t);
ql/src/java/org/apache/hadoop/hive/ql/exec/SMBMapJoinOperator.java,558,foundNextKeyGroup[alias] = false;
ql/src/java/org/apache/hadoop/hive/ql/exec/ReduceSinkOperator.java,170,if (evals.length > length) {
ql/src/java/org/apache/hadoop/hive/ql/QueryPlan.java,87,"private HashMap<String, HashMap<String, Long>> counters;"
ql/src/java/org/apache/hadoop/hive/ql/QueryPlan.java,88,private HashSet<String> done;
ql/src/java/org/apache/hadoop/hive/ql/QueryPlan.java,89,private HashSet<String> started;
ql/src/java/org/apache/hadoop/hive/ql/QueryPlan.java,405,"counters.put(op.getOperatorId(), op.getCounters());"
ql/src/java/org/apache/hadoop/hive/ql/QueryPlan.java,645,public HashSet<String> getStarted() {
ql/src/java/org/apache/hadoop/hive/ql/QueryPlan.java,649,public HashSet<String> getDone() {
ql/src/java/org/apache/hadoop/hive/ql/QueryPlan.java,709,"public HashMap<String, HashMap<String, Long>> getCounters() {"
ql/src/java/org/apache/hadoop/hive/ql/QueryPlan.java,105,inputs = sem.getInputs();
ql/src/java/org/apache/hadoop/hive/ql/QueryPlan.java,106,outputs = sem.getOutputs();
ql/src/java/org/apache/hadoop/hive/ql/history/HiveHistory.java,491,"static Map<String, String> ctrmap = null;"
ql/src/java/org/apache/hadoop/hive/ql/history/HiveHistory.java,494,if (ctrmap == null) {
ql/src/java/org/apache/hadoop/hive/ql/history/HiveHistory.java,495,"ctrmap = new HashMap<String, String>();"
ql/src/java/org/apache/hadoop/hive/ql/udf/UDFHour.java,90,result.set(calendar.get(Calendar.HOUR));
ql/src/java/org/apache/hadoop/hive/ql/optimizer/unionproc/UnionProcContext.java,43,private transient int numInputs;
ql/src/java/org/apache/hadoop/hive/ql/optimizer/unionproc/UnionProcContext.java,95,if (mapOnlySubq != null) {
ql/src/java/org/apache/hadoop/hive/ql/optimizer/unionproc/UnionProcContext.java,96,for (boolean mapOnly : mapOnlySubq) {
ql/src/java/org/apache/hadoop/hive/ql/optimizer/unionproc/UnionProcContext.java,97,if (!mapOnly) {
ql/src/java/org/apache/hadoop/hive/ql/optimizer/unionproc/UnionProcContext.java,98,return false;
ql/src/java/org/apache/hadoop/hive/ql/optimizer/unionproc/UnionProcContext.java,102,return true;
ql/src/java/org/apache/hadoop/hive/ql/optimizer/unionproc/UnionProcContext.java,106,if (mapOnlySubqSet != null) {
ql/src/java/org/apache/hadoop/hive/ql/optimizer/unionproc/UnionProcContext.java,107,for (boolean mapOnlySet : mapOnlySubqSet) {
ql/src/java/org/apache/hadoop/hive/ql/optimizer/unionproc/UnionProcContext.java,108,if (!mapOnlySet) {
ql/src/java/org/apache/hadoop/hive/ql/optimizer/unionproc/UnionProcContext.java,109,return false;
ql/src/java/org/apache/hadoop/hive/ql/optimizer/unionproc/UnionProcFactory.java,159,if (parentUnionOperator != null) {
ql/src/java/org/apache/hadoop/hive/ql/optimizer/unionproc/UnionProcFactory.java,160,UnionParseContext parentUCtx =
ql/src/java/org/apache/hadoop/hive/ql/optimizer/unionproc/UnionProcFactory.java,162,if (parentUCtx != null && parentUCtx.allMapOnlySubQSet()) {
ql/src/java/org/apache/hadoop/hive/ql/optimizer/unionproc/UnionProcFactory.java,163,mapOnly = parentUCtx.allMapOnlySubQ();
ql/src/java/org/apache/hadoop/hive/ql/optimizer/unionproc/UnionProcFactory.java,169,"uCtx.setRootTask(pos, false);"
ql/src/java/org/apache/hadoop/hive/ql/ppd/OpProcFactory.java,506,Set<String> aliases = owi.getRowResolver(nd).getTableNames();
ql/src/java/org/apache/hadoop/hive/ql/ppd/OpProcFactory.java,508,"if (aliases.size() == 1 && aliases.contains("""")) {"
ql/src/java/org/apache/hadoop/hive/ql/ppd/OpProcFactory.java,510,ignoreAliases = true;
ql/src/java/org/apache/hadoop/hive/ql/ppd/OpProcFactory.java,251,"prunePreds.addAlias(expr, alias);"
ql/src/java/org/apache/hadoop/hive/ql/ppd/OpProcFactory.java,252,prunePreds.addNonFinalCandidate(expr);
ql/src/java/org/apache/hadoop/hive/ql/stats/jdbc/JDBCStatsPublisher.java,236,"DriverManager.getConnection(connectionString + "";shutdown=true"");"
ql/src/java/org/apache/hadoop/hive/ql/stats/jdbc/JDBCStatsPublisher.java,259,DriverManager.setLoginTimeout(timeout);
ql/src/java/org/apache/hadoop/hive/ql/stats/jdbc/JDBCStatsPublisher.java,260,conn = DriverManager.getConnection(connectionString);
ql/src/java/org/apache/hadoop/hive/ql/stats/jdbc/JDBCStatsPublisher.java,262,Statement stmt = conn.createStatement();
ql/src/java/org/apache/hadoop/hive/ql/stats/jdbc/JDBCStatsPublisher.java,263,stmt.setQueryTimeout(timeout);
ql/src/java/org/apache/hadoop/hive/ql/stats/jdbc/JDBCStatsPublisher.java,266,DatabaseMetaData dbm = conn.getMetaData();
ql/src/java/org/apache/hadoop/hive/ql/stats/jdbc/JDBCStatsPublisher.java,267,"ResultSet rs = dbm.getTables(null, null, JDBCStatsUtils.getStatTableName(), null);"
ql/src/java/org/apache/hadoop/hive/ql/stats/jdbc/JDBCStatsPublisher.java,268,boolean tblExists = rs.next();
ql/src/java/org/apache/hadoop/hive/ql/stats/jdbc/JDBCStatsPublisher.java,269,"if (!tblExists) { // Table does not exist, create it"
ql/src/java/org/apache/hadoop/hive/ql/stats/jdbc/JDBCStatsPublisher.java,270,"String createTable = JDBCStatsUtils.getCreate("""");"
ql/src/java/org/apache/hadoop/hive/ql/stats/jdbc/JDBCStatsPublisher.java,272,stmt.close();
ql/src/java/org/apache/hadoop/hive/ql/stats/jdbc/JDBCStatsPublisher.java,271,stmt.executeUpdate(createTable);
hbase-handler/src/test/org/apache/hadoop/hive/hbase/TestLazyHBaseObject.java,61,public void testLazyHBaseCellMap1() {
hbase-handler/src/test/org/apache/hadoop/hive/hbase/TestLazyHBaseObject.java,122,public void testLazyHBaseCellMap2() {
hbase-handler/src/test/org/apache/hadoop/hive/hbase/TestLazyHBaseObject.java,184,public void testLazyHBaseCellMap3() {
hbase-handler/src/test/org/apache/hadoop/hive/hbase/TestLazyHBaseObject.java,454,public void testLazyHBaseRow1() {
hbase-handler/src/test/org/apache/hadoop/hive/hbase/TestLazyHBaseObject.java,571,public void testLazyHBaseRow2() {
hbase-handler/src/test/org/apache/hadoop/hive/hbase/TestLazyHBaseObject.java,693,public void testLazyHBaseRow3() {
serde/src/java/org/apache/hadoop/hive/serde2/lazy/LazyFactory.java,203,byte escapeChar) {
serde/src/java/org/apache/hadoop/hive/serde2/lazy/LazyFactory.java,217,"separator[separatorIndex], separator[separatorIndex + 1],"
serde/src/java/org/apache/hadoop/hive/serde2/lazy/LazyFactory.java,223,"nullSequence, escaped, escapeChar), separator[separatorIndex],"
serde/src/java/org/apache/hadoop/hive/serde2/lazy/LazyFactory.java,238,"fieldNames, fieldObjectInspectors, separator[separatorIndex],"
serde/src/java/org/apache/hadoop/hive/serde2/lazy/LazyFactory.java,249,"separator[separatorIndex], nullSequence, escaped, escapeChar);"
serde/src/java/org/apache/hadoop/hive/serde2/lazy/LazyFactory.java,268,byte escapeChar) {
serde/src/java/org/apache/hadoop/hive/serde2/lazy/LazyFactory.java,289,"Text nullSequence, boolean escaped, byte escapeChar) {"
common/src/java/org/apache/hadoop/hive/conf/HiveConf.java,280,"METASTORE_CONNECTION_POOLING_TYPE(""datanucleus.connectionPoolingType"", ""DBCP""),"
ql/src/java/org/apache/hadoop/hive/ql/exec/persistence/AbstractRowContainer.java,41,public abstract int size();
ql/src/java/org/apache/hadoop/hive/ql/exec/persistence/MapJoinObjectValue.java,131,out.writeInt(v.size());
ql/src/java/org/apache/hadoop/hive/ql/exec/persistence/MapJoinRowContainer.java,68,public int size() {
ql/src/java/org/apache/hadoop/hive/ql/exec/persistence/RowContainer.java,89,private int size; // total # of elements in the RowContainer
ql/src/java/org/apache/hadoop/hive/ql/exec/persistence/RowContainer.java,278,ArrayList<Object> row = new ArrayList<Object>(2);
ql/src/java/org/apache/hadoop/hive/ql/exec/persistence/RowContainer.java,354,public int size() {
ql/src/java/org/apache/hadoop/hive/ql/exec/persistence/RowContainer.java,105,int acutalSplitNum = 0;
ql/src/java/org/apache/hadoop/hive/ql/exec/persistence/RowContainer.java,210,acutalSplitNum = inputSplits.length;
ql/src/java/org/apache/hadoop/hive/ql/exec/persistence/RowContainer.java,381,if (nextSplit && this.currentSplitPointer < this.acutalSplitNum) {
ql/src/java/org/apache/hadoop/hive/ql/exec/persistence/RowContainer.java,427,this.acutalSplitNum = 0;
serde/src/java/org/apache/hadoop/hive/serde2/lazybinary/LazyBinaryUtils.java,126,static VInt vInt = new LazyBinaryUtils.VInt();
serde/src/java/org/apache/hadoop/hive/serde2/lazybinary/LazyBinaryUtils.java,356,private static byte[] vLongBytes = new byte[9];
ql/src/java/org/apache/hadoop/hive/ql/plan/CreateTableDesc.java,40,ArrayList<FieldSchema> cols;
ql/src/java/org/apache/hadoop/hive/ql/plan/CreateTableDesc.java,41,ArrayList<FieldSchema> partCols;
ql/src/java/org/apache/hadoop/hive/ql/plan/CreateTableDesc.java,42,ArrayList<String> bucketCols;
ql/src/java/org/apache/hadoop/hive/ql/plan/CreateTableDesc.java,43,ArrayList<Order> sortCols;
ql/src/java/org/apache/hadoop/hive/ql/plan/CreateTableDesc.java,148,public ArrayList<FieldSchema> getCols() {
ql/src/java/org/apache/hadoop/hive/ql/plan/CreateTableDesc.java,156,public ArrayList<FieldSchema> getPartCols() {
ql/src/java/org/apache/hadoop/hive/ql/plan/CreateTableDesc.java,165,public ArrayList<String> getBucketCols() {
ql/src/java/org/apache/hadoop/hive/ql/plan/CreateTableDesc.java,285,public ArrayList<Order> getSortCols() {
ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFSplit.java,75,for (String str : s.toString().split(regex.toString())) {
ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDAFCorrelation.java,284,double xavgOld = myagg.xavg;
ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDAFCorrelation.java,285,double yavgOld = myagg.yavg;
ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDAFCorrelation.java,287,myagg.xavg += (vx - xavgOld) / myagg.count;
ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDAFCorrelation.java,288,myagg.yavg += (vy - yavgOld) / myagg.count;
ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDAFCorrelation.java,290,myagg.covar += (vx - xavgOld) * (vy - myagg.yavg);
ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDAFCorrelation.java,291,myagg.xvar += (vx - xavgOld) * (vx - myagg.xavg);
ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDAFCorrelation.java,292,myagg.yvar += (vy - yavgOld) * (vy - myagg.yavg);
ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDAFCorrelation.java,347,myagg.xvar += xvarB + (xavgA - xavgB) * (xavgA - xavgB) * myagg.count;
ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDAFCorrelation.java,348,myagg.yvar += yvarB + (yavgA - yavgB) * (yavgA - yavgB) * myagg.count;
ql/src/java/org/apache/hadoop/hive/ql/optimizer/physical/GenMRSkewJoinProcessor.java,342,cndTsk
ql/src/java/org/apache/hadoop/hive/ql/optimizer/physical/GenMRSkewJoinProcessor.java,343,.setResolverCtx(new ConditionalResolverSkewJoin.ConditionalResolverSkewJoinCtx(
ql/src/java/org/apache/hadoop/hive/ql/optimizer/physical/GenMRSkewJoinProcessor.java,344,bigKeysDirToTaskMap));
ql/src/java/org/apache/hadoop/hive/ql/optimizer/physical/GenMRSkewJoinProcessor.java,345,List<Task<? extends Serializable>> oldChildTasks = currTask.getChildTasks();
ql/src/java/org/apache/hadoop/hive/ql/plan/ConditionalResolverSkewJoin.java,52,"HashMap<String, Task<? extends Serializable>> dirToTaskMap;"
ql/src/java/org/apache/hadoop/hive/ql/plan/ConditionalResolverSkewJoin.java,61,"HashMap<String, Task<? extends Serializable>> dirToTaskMap) {"
ql/src/java/org/apache/hadoop/hive/ql/plan/ConditionalResolverCommonJoin.java,115,ConditionalResolverCommonJoinCtx ctx = (ConditionalResolverCommonJoinCtx) objCtx;
ql/src/java/org/apache/hadoop/hive/ql/plan/ConditionalResolverCommonJoin.java,119,"HashMap<String, ArrayList<String>> pathToAliases = ctx.getPathToAliases();"
ql/src/java/org/apache/hadoop/hive/ql/plan/ConditionalResolverCommonJoin.java,120,"HashMap<String, Long> aliasToKnownSize = ctx.getAliasToKnownSize();"
ql/src/java/org/apache/hadoop/hive/ql/plan/ConditionalResolverCommonJoin.java,121,"String bigTableAlias = this.resolveMapJoinTask(pathToAliases, ctx"
ql/src/java/org/apache/hadoop/hive/ql/plan/ConditionalResolverCommonJoin.java,122,".getAliasToTask(), aliasToKnownSize, ctx.getHdfsTmpDir(), ctx"
ql/src/java/org/apache/hadoop/hive/ql/plan/ConditionalResolverCommonJoin.java,123,".getLocalTmpDir(), conf);"
ql/src/java/org/apache/hadoop/hive/ql/plan/ConditionalResolverCommonJoin.java,166,long smallTablesFileSizeSum = 0;
ql/src/java/org/apache/hadoop/hive/ql/plan/ConditionalResolverCommonJoin.java,168,"Map<String, AliasFileSizePair> aliasToFileSizeMap = new HashMap<String, AliasFileSizePair>();"
ql/src/java/org/apache/hadoop/hive/ql/plan/ConditionalResolverCommonJoin.java,169,"for (Map.Entry<String, Long> entry : aliasToKnownSize.entrySet()) {"
ql/src/java/org/apache/hadoop/hive/ql/plan/ConditionalResolverCommonJoin.java,170,String alias = entry.getKey();
ql/src/java/org/apache/hadoop/hive/ql/plan/ConditionalResolverCommonJoin.java,171,"AliasFileSizePair pair = new AliasFileSizePair(alias, entry.getValue());"
ql/src/java/org/apache/hadoop/hive/ql/plan/ConditionalResolverCommonJoin.java,172,"aliasToFileSizeMap.put(alias, pair);"
ql/src/java/org/apache/hadoop/hive/ql/plan/ConditionalResolverCommonJoin.java,203,List<AliasFileSizePair> aliasFileSizeList = new ArrayList<AliasFileSizePair>(
ql/src/java/org/apache/hadoop/hive/ql/plan/ConditionalResolverCommonJoin.java,204,aliasToFileSizeMap.values());
ql/src/java/org/apache/hadoop/hive/ql/plan/ConditionalResolverCommonJoin.java,206,Collections.sort(aliasFileSizeList);
ql/src/java/org/apache/hadoop/hive/ql/plan/ConditionalResolverCommonJoin.java,209,int idx = aliasFileSizeList.size() - 1;
ql/src/java/org/apache/hadoop/hive/ql/plan/ConditionalResolverCommonJoin.java,210,boolean bigAliasFound = false;
ql/src/java/org/apache/hadoop/hive/ql/plan/ConditionalResolverCommonJoin.java,211,while (idx >= 0) {
ql/src/java/org/apache/hadoop/hive/ql/plan/ConditionalResolverCommonJoin.java,212,AliasFileSizePair pair = aliasFileSizeList.get(idx);
ql/src/java/org/apache/hadoop/hive/ql/plan/ConditionalResolverCommonJoin.java,213,String alias = pair.alias;
ql/src/java/org/apache/hadoop/hive/ql/plan/ConditionalResolverCommonJoin.java,214,long size = pair.size;
ql/src/java/org/apache/hadoop/hive/ql/plan/ConditionalResolverCommonJoin.java,215,idx--;
ql/src/java/org/apache/hadoop/hive/ql/plan/ConditionalResolverCommonJoin.java,216,if (!bigAliasFound && aliasToTask.get(alias) != null) {
ql/src/java/org/apache/hadoop/hive/ql/plan/ConditionalResolverCommonJoin.java,218,bigAliasFound = true;
ql/src/java/org/apache/hadoop/hive/ql/plan/ConditionalResolverCommonJoin.java,219,bigTableFileAlias = alias;
ql/src/java/org/apache/hadoop/hive/ql/plan/ConditionalResolverCommonJoin.java,220,continue;
serde/src/test/org/apache/hadoop/hive/serde2/lazy/TestLazyArrayMapStruct.java,156,"assertEquals(""{'2':'d\\tf','2':'d','-1':null,'0':'0','8':'abc'}"""
serde/src/test/org/apache/hadoop/hive/serde2/lazy/TestLazyArrayMapStruct.java,220,"assertEquals(""{'a':null,'b':['',''],'c':{'':null,'':null},'d':':'}"""
metastore/src/java/org/apache/hadoop/hive/metastore/ObjectStore.java,2096,"return new MIndex(index.getIndexName(), origTable, index.getCreateTime(),"
metastore/src/java/org/apache/hadoop/hive/metastore/ObjectStore.java,2137,"midx = (MIndex) query.execute(originalTblName, dbName, indexName);"
metastore/src/java/org/apache/hadoop/hive/metastore/ObjectStore.java,2166,"mIndex.getOrigTable().getDatabase().getName(),"
metastore/src/java/org/apache/hadoop/hive/metastore/ObjectStore.java,2167,"mIndex.getOrigTable().getTableName(),"
metastore/src/java/org/apache/hadoop/hive/metastore/ObjectStore.java,2170,"mIndex.getIndexTable().getTableName(),"
metastore/src/java/org/apache/hadoop/hive/metastore/ObjectStore.java,2171,"this.convertToStorageDescriptor(mIndex.getSd()),"
metastore/src/java/org/apache/hadoop/hive/metastore/ObjectStore.java,3914,rollbackTransaction();
metastore/src/java/org/apache/hadoop/hive/metastore/ObjectStore.java,1809,"query.setOrdering(""partitionName ascending"");"
metastore/src/test/org/apache/hadoop/hive/metastore/DummyListener.java,51,notifyList.add(partition);
metastore/src/test/org/apache/hadoop/hive/metastore/DummyListener.java,56,notifyList.add(db);
metastore/src/test/org/apache/hadoop/hive/metastore/DummyListener.java,61,notifyList.add(table);
metastore/src/test/org/apache/hadoop/hive/metastore/DummyListener.java,66,notifyList.add(db);
metastore/src/test/org/apache/hadoop/hive/metastore/DummyListener.java,71,notifyList.add(partition);
metastore/src/test/org/apache/hadoop/hive/metastore/DummyListener.java,76,notifyList.add(table);
metastore/src/test/org/apache/hadoop/hive/metastore/DummyListener.java,81,notifyList.add(event);
metastore/src/test/org/apache/hadoop/hive/metastore/DummyListener.java,86,notifyList.add(event);
metastore/src/test/org/apache/hadoop/hive/metastore/DummyListener.java,91,notifyList.add(partEvent);
ql/src/java/org/apache/hadoop/hive/ql/plan/DropIndexDesc.java,32,"public DropIndexDesc(String indexName, String tableName) {"
ql/src/java/org/apache/hadoop/hive/ql/plan/DropIndexDesc.java,33,super();
ql/src/java/org/apache/hadoop/hive/ql/plan/GroupByDesc.java,72,"this(mode, outputColumnNames, keys, aggregators, groupKeyNotReductionKey,"
ql/src/java/org/apache/hadoop/hive/ql/plan/ConditionalWork.java,28,"@Explain(displayName = ""Conditional Operator"")"
ql/src/java/org/apache/hadoop/hive/ql/optimizer/lineage/Generator.java,52,LineageCtx lCtx = new LineageCtx(pctx);
ql/src/java/org/apache/hadoop/hive/ql/optimizer/lineage/Generator.java,67,GraphWalker ogw = new PreOrderWalker(disp);
ql/src/java/org/apache/hadoop/hive/ql/optimizer/lineage/LineageCtx.java,141,public LineageCtx(ParseContext pctx) {
ql/src/java/org/apache/hadoop/hive/ql/optimizer/lineage/LineageCtx.java,142,index = new Index();
ql/src/java/org/apache/hadoop/hive/ql/optimizer/lineage/LineageCtx.java,117,old_dep.setBaseCols(new ArrayList<BaseColumnInfo>(bci_set));
ql/src/java/org/apache/hadoop/hive/ql/optimizer/lineage/OpProcFactory.java,107,col_set.addAll(d.getBaseCols());
ql/src/java/org/apache/hadoop/hive/ql/optimizer/lineage/OpProcFactory.java,116,"lCtx.getIndex().putDependency(op, ci, dep);"
ql/src/java/org/apache/hadoop/hive/ql/optimizer/lineage/OpProcFactory.java,297,ArrayList<ColumnInfo> col_infos = sop.getSchema().getSignature();
ql/src/java/org/apache/hadoop/hive/ql/optimizer/lineage/OpProcFactory.java,300,"lctx.getIndex().putDependency(sop, col_infos.get(cnt++),"
ql/src/java/org/apache/hadoop/hive/ql/optimizer/lineage/OpProcFactory.java,301,"ExprProcFactory.getExprDependency(lctx, getParent(stack), expr));"
ql/src/java/org/apache/hadoop/hive/ql/optimizer/lineage/OpProcFactory.java,334,dep.setExpr(null);
ql/src/java/org/apache/hadoop/hive/ql/optimizer/lineage/OpProcFactory.java,338,if (expr_dep != null) {
ql/src/java/org/apache/hadoop/hive/ql/optimizer/lineage/OpProcFactory.java,112,dep.setBaseCols(new ArrayList<BaseColumnInfo>(col_set));
ql/src/java/org/apache/hadoop/hive/ql/optimizer/lineage/OpProcFactory.java,171,dep.setBaseCols(new ArrayList<BaseColumnInfo>());
ql/src/java/org/apache/hadoop/hive/ql/optimizer/lineage/OpProcFactory.java,375,dep.setBaseCols(new ArrayList<BaseColumnInfo>(bci_set));
ql/src/java/org/apache/hadoop/hive/ql/session/LineageState.java,115,public void setIndex(Index index) {
ql/src/java/org/apache/hadoop/hive/ql/session/LineageState.java,116,this.index = index;
ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFMapKeys.java,64,retArray.addAll(mapOI.getMap(mapObj).keySet());
ql/src/java/org/apache/hadoop/hive/ql/ppd/ExprWalkerProcFactory.java,262,exprRules.put(
ql/src/java/org/apache/hadoop/hive/ql/ppd/ExprWalkerProcFactory.java,263,"new RuleRegExp(""R1"", ExprNodeColumnDesc.class.getName() + ""%""),"
ql/src/java/org/apache/hadoop/hive/ql/ppd/ExprWalkerProcFactory.java,264,getColumnProcessor());
ql/src/java/org/apache/hadoop/hive/ql/ppd/ExprWalkerProcFactory.java,265,exprRules.put(
ql/src/java/org/apache/hadoop/hive/ql/ppd/ExprWalkerProcFactory.java,266,"new RuleRegExp(""R2"", ExprNodeFieldDesc.class.getName() + ""%""),"
ql/src/java/org/apache/hadoop/hive/ql/ppd/ExprWalkerProcFactory.java,267,getFieldProcessor());
ql/src/java/org/apache/hadoop/hive/ql/ppd/ExprWalkerProcFactory.java,268,"exprRules.put(new RuleRegExp(""R3"", ExprNodeGenericFuncDesc.class.getName()"
ql/src/java/org/apache/hadoop/hive/ql/ppd/ExprWalkerProcFactory.java,269,"+ ""%""), getGenericFuncProcessor());"
ql/src/java/org/apache/hadoop/hive/ql/ppd/ExprWalkerProcFactory.java,314,"(ExprNodeDesc) expr.getChildren().get(i),"
ql/src/java/org/apache/hadoop/hive/ql/ppd/ExprWalkerProcFactory.java,316,"extractFinalCandidates((ExprNodeDesc) expr.getChildren().get(i),"
ql/src/java/org/apache/hadoop/hive/ql/ppd/ExprWalkerProcFactory.java,84,"ctx.setIsCandidate(colref, false);"
ql/src/java/org/apache/hadoop/hive/ql/ppd/ExprWalkerProcFactory.java,100,"ctx.setIsCandidate(colref, isCandidate);"
ql/src/java/org/apache/hadoop/hive/ql/ppd/ExprWalkerProcFactory.java,122,ExprNodeDesc newCh = ctx.getConvertedNode(ch);
ql/src/java/org/apache/hadoop/hive/ql/ppd/ExprWalkerProcFactory.java,129,isCandidate = isCandidate && ctx.isCandidate(ch);
ql/src/java/org/apache/hadoop/hive/ql/ppd/ExprWalkerProcFactory.java,134,if (alias == null) {
ql/src/java/org/apache/hadoop/hive/ql/ppd/ExprWalkerProcFactory.java,135,alias = chAlias;
ql/src/java/org/apache/hadoop/hive/ql/ppd/ExprWalkerProcFactory.java,136,} else if (!chAlias.equalsIgnoreCase(alias)) {
ql/src/java/org/apache/hadoop/hive/ql/ppd/ExprWalkerProcFactory.java,137,isCandidate = false;
ql/src/java/org/apache/hadoop/hive/ql/ppd/ExprWalkerProcFactory.java,141,"ctx.addAlias(expr, alias);"
ql/src/java/org/apache/hadoop/hive/ql/ppd/ExprWalkerProcFactory.java,142,"ctx.setIsCandidate(expr, isCandidate);"
ql/src/java/org/apache/hadoop/hive/ql/ppd/ExprWalkerProcFactory.java,164,"ctx.setIsCandidate(expr, false);"
ql/src/java/org/apache/hadoop/hive/ql/ppd/ExprWalkerProcFactory.java,172,ExprNodeDesc newCh = ctx.getConvertedNode(ch);
ql/src/java/org/apache/hadoop/hive/ql/ppd/ExprWalkerProcFactory.java,179,isCandidate = isCandidate && ctx.isCandidate(ch);
ql/src/java/org/apache/hadoop/hive/ql/ppd/ExprWalkerProcFactory.java,195,"ctx.addAlias(expr, alias);"
ql/src/java/org/apache/hadoop/hive/ql/ppd/ExprWalkerProcFactory.java,196,"ctx.setIsCandidate(expr, isCandidate);"
ql/src/java/org/apache/hadoop/hive/ql/ppd/ExprWalkerProcFactory.java,211,"ctx.setIsCandidate((ExprNodeDesc) nd, true);"
ql/src/java/org/apache/hadoop/hive/ql/ppd/ExprWalkerProcFactory.java,322,if (ctx.isCandidate(expr)) {
ql/src/java/org/apache/hadoop/hive/ql/ppd/ExprWalkerProcFactory.java,323,ctx.addFinalCandidate(expr);
ql/src/java/org/apache/hadoop/hive/ql/ppd/ExprWalkerProcFactory.java,327,ctx.addNonFinalCandidate(expr);
ql/src/java/org/apache/hadoop/hive/ql/lib/RuleRegExp.java,34,private final Pattern pattern;
ql/src/java/org/apache/hadoop/hive/ql/lib/RuleRegExp.java,49,pattern = Pattern.compile(regExp);
ql/src/java/org/apache/hadoop/hive/ql/lib/RuleRegExp.java,66,Matcher m = pattern.matcher(name);
ql/src/java/org/apache/hadoop/hive/ql/lib/RuleRegExp.java,68,return m.group().length();
ql/src/java/org/apache/hadoop/hive/ql/lib/RuleRegExp.java,65,"name = stack.get(pos).getName() + ""%"" + name;"
ql/src/java/org/apache/hadoop/hive/ql/plan/ExplainWork.java,45,"String astStringTree,"
ql/src/java/org/apache/hadoop/hive/ql/plan/ExplainWork.java,50,this.astStringTree = astStringTree;
ql/src/java/org/apache/hadoop/hive/ql/plan/ExplainWork.java,71,public String getAstStringTree() {
ql/src/java/org/apache/hadoop/hive/ql/plan/ExplainWork.java,72,return astStringTree;
ql/src/java/org/apache/hadoop/hive/ql/plan/ExplainWork.java,75,public void setAstStringTree(String astStringTree) {
ql/src/java/org/apache/hadoop/hive/ql/plan/ExplainWork.java,76,this.astStringTree = astStringTree;
ql/src/java/org/apache/hadoop/hive/ql/plan/HiveOperation.java,85,"QUERY(""QUERY"", new Privilege[]{Privilege.SELECT}, new Privilege[]{Privilege.ALTER_DATA, Privilege.CREATE}),"
ql/src/java/org/apache/hadoop/hive/ql/plan/HiveOperation.java,112,"Privilege[] inputRequiredPrivileges, Privilege[] outputRequiredPrivileges) {"
ql/src/java/org/apache/hadoop/hive/ql/session/SessionState.java,66,protected HiveConf conf;
ql/src/java/org/apache/hadoop/hive/ql/session/SessionState.java,210,"conf.setVar(HiveConf.ConfVars.HIVEQUERYSTRING, cmdString);"
ql/src/java/org/apache/hadoop/hive/ql/session/SessionState.java,214,return (conf.getVar(HiveConf.ConfVars.HIVEQUERYSTRING));
ql/src/java/org/apache/hadoop/hive/ql/optimizer/GenMapRedUtils.java,752,assert ((tblDir == null) && (tblDesc == null));
ql/src/java/org/apache/hadoop/hive/ql/optimizer/GenMapRedUtils.java,755,tblDesc = Utilities.getTableDesc(part.getTable());
ql/src/java/org/apache/hadoop/hive/ql/optimizer/GenMapRedUtils.java,757,tblDesc = Utilities.getTableDesc(part.getTable());
ql/src/java/org/apache/hadoop/hive/ql/optimizer/GenMapRedUtils.java,771,"partDesc.add(Utilities.getPartitionDescFromTableDesc(tblDesc, part));"
ql/src/java/org/apache/hadoop/hive/ql/optimizer/GenMapRedUtils.java,668,sizeNeeded = parseCtx.getGlobalLimitCtx().getGlobalLimit() * sizePerRow;
ql/src/java/org/apache/hadoop/hive/ql/exec/FileSinkOperator.java,716,if (isNativeTable) {
ql/src/java/org/apache/hadoop/hive/ql/optimizer/pcr/PcrExprProcFactory.java,127,"static Boolean opAnd(Boolean op1, Boolean op2) {"
ql/src/java/org/apache/hadoop/hive/ql/optimizer/pcr/PcrExprProcFactory.java,131,if (op1 == null || op2 == null) {
ql/src/java/org/apache/hadoop/hive/ql/optimizer/pcr/PcrExprProcFactory.java,137,"static Boolean opOr(Boolean op1, Boolean op2) {"
ql/src/java/org/apache/hadoop/hive/ql/optimizer/pcr/PcrExprProcFactory.java,141,if (op1 == null || op2 == null) {
ql/src/java/org/apache/hadoop/hive/ql/optimizer/pcr/PcrExprProcFactory.java,250,assert (nodeOutputs.length == 2);
ql/src/java/org/apache/hadoop/hive/ql/optimizer/pcr/PcrExprProcFactory.java,251,NodeInfoWrapper c1 = (NodeInfoWrapper)nodeOutputs[0];
ql/src/java/org/apache/hadoop/hive/ql/optimizer/pcr/PcrExprProcFactory.java,252,NodeInfoWrapper c2 = (NodeInfoWrapper)nodeOutputs[1];
ql/src/java/org/apache/hadoop/hive/ql/optimizer/pcr/PcrExprProcFactory.java,254,if (c1.state == WalkState.FALSE) {
ql/src/java/org/apache/hadoop/hive/ql/optimizer/pcr/PcrExprProcFactory.java,255,return c1;
ql/src/java/org/apache/hadoop/hive/ql/optimizer/pcr/PcrExprProcFactory.java,256,} else if (c2.state == WalkState.FALSE) {
ql/src/java/org/apache/hadoop/hive/ql/optimizer/pcr/PcrExprProcFactory.java,257,return c2;
ql/src/java/org/apache/hadoop/hive/ql/optimizer/pcr/PcrExprProcFactory.java,258,} else if (c1.state == WalkState.TRUE) {
ql/src/java/org/apache/hadoop/hive/ql/optimizer/pcr/PcrExprProcFactory.java,259,return c2;
ql/src/java/org/apache/hadoop/hive/ql/optimizer/pcr/PcrExprProcFactory.java,260,} else if (c2.state == WalkState.TRUE) {
ql/src/java/org/apache/hadoop/hive/ql/optimizer/pcr/PcrExprProcFactory.java,261,return c1;
ql/src/java/org/apache/hadoop/hive/ql/optimizer/pcr/PcrExprProcFactory.java,262,} else if (c1.state == WalkState.UNKNOWN || c2.state == WalkState.UNKNOWN) {
ql/src/java/org/apache/hadoop/hive/ql/optimizer/pcr/PcrExprProcFactory.java,263,"return new NodeInfoWrapper(WalkState.UNKNOWN, null, getOutExpr(fd, nodeOutputs));"
ql/src/java/org/apache/hadoop/hive/ql/optimizer/pcr/PcrExprProcFactory.java,264,} else if (c1.state == WalkState.DIVIDED && c2.state == WalkState.DIVIDED) {
ql/src/java/org/apache/hadoop/hive/ql/optimizer/pcr/PcrExprProcFactory.java,267,"results[i] = opAnd(c1.ResultVector[i], c2.ResultVector[i]);"
ql/src/java/org/apache/hadoop/hive/ql/optimizer/pcr/PcrExprProcFactory.java,269,"return getResultWrapFromResults(results, fd, nodeOutputs);"
ql/src/java/org/apache/hadoop/hive/ql/optimizer/pcr/PcrExprProcFactory.java,271,"return new NodeInfoWrapper(WalkState.UNKNOWN, null, getOutExpr(fd, nodeOutputs));"
ql/src/java/org/apache/hadoop/hive/ql/optimizer/pcr/PcrExprProcFactory.java,273,assert (nodeOutputs.length == 2);
ql/src/java/org/apache/hadoop/hive/ql/optimizer/pcr/PcrExprProcFactory.java,274,NodeInfoWrapper c1 = (NodeInfoWrapper)nodeOutputs[0];
ql/src/java/org/apache/hadoop/hive/ql/optimizer/pcr/PcrExprProcFactory.java,275,NodeInfoWrapper c2 = (NodeInfoWrapper)nodeOutputs[1];
ql/src/java/org/apache/hadoop/hive/ql/optimizer/pcr/PcrExprProcFactory.java,277,if (c1.state == WalkState.TRUE) {
ql/src/java/org/apache/hadoop/hive/ql/optimizer/pcr/PcrExprProcFactory.java,278,return c1;
ql/src/java/org/apache/hadoop/hive/ql/optimizer/pcr/PcrExprProcFactory.java,279,} else if (c2.state == WalkState.TRUE) {
ql/src/java/org/apache/hadoop/hive/ql/optimizer/pcr/PcrExprProcFactory.java,280,return c2;
ql/src/java/org/apache/hadoop/hive/ql/optimizer/pcr/PcrExprProcFactory.java,281,} else if (c1.state == WalkState.FALSE) {
ql/src/java/org/apache/hadoop/hive/ql/optimizer/pcr/PcrExprProcFactory.java,282,return c2;
ql/src/java/org/apache/hadoop/hive/ql/optimizer/pcr/PcrExprProcFactory.java,283,} else if (c2.state == WalkState.FALSE) {
ql/src/java/org/apache/hadoop/hive/ql/optimizer/pcr/PcrExprProcFactory.java,284,return c1;
ql/src/java/org/apache/hadoop/hive/ql/optimizer/pcr/PcrExprProcFactory.java,285,} else if (c1.state == WalkState.UNKNOWN || c2.state == WalkState.UNKNOWN) {
ql/src/java/org/apache/hadoop/hive/ql/optimizer/pcr/PcrExprProcFactory.java,286,"return new NodeInfoWrapper(WalkState.UNKNOWN, null, getOutExpr(fd, nodeOutputs));"
ql/src/java/org/apache/hadoop/hive/ql/optimizer/pcr/PcrExprProcFactory.java,287,} else if (c1.state == WalkState.DIVIDED && c2.state == WalkState.DIVIDED) {
ql/src/java/org/apache/hadoop/hive/ql/optimizer/pcr/PcrExprProcFactory.java,290,"results[i] = opOr(c1.ResultVector[i], c2.ResultVector[i]);"
ql/src/java/org/apache/hadoop/hive/ql/optimizer/pcr/PcrExprProcFactory.java,292,"return getResultWrapFromResults(results, fd, nodeOutputs);"
ql/src/java/org/apache/hadoop/hive/ql/optimizer/pcr/PcrExprProcFactory.java,294,"return new NodeInfoWrapper(WalkState.UNKNOWN, null, getOutExpr(fd, nodeOutputs));"
ql/src/java/org/apache/hadoop/hive/ql/optimizer/pcr/PcrExprProcFactory.java,311,if (has_part_col) {
ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFOPAnd.java,33,"@Description(name = ""and"", value = ""a _FUNC_ b - Logical and"")"
ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFOPAnd.java,40,if (arguments.length != 2) {
ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFOPAnd.java,42,"""The operator 'AND' only accepts 2 argument."");"
ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFOPAnd.java,51,"boolean bool_a0 = false, bool_a1 = false;"
ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFOPAnd.java,52,Object a0 = arguments[0].get();
ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFOPAnd.java,53,if (a0 != null) {
ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFOPAnd.java,54,bool_a0 = boi0.get(a0);
ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFOPAnd.java,55,if (bool_a0 == false) {
ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFOPAnd.java,56,result.set(false);
ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFOPAnd.java,57,return result;
ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFOPAnd.java,61,Object a1 = arguments[1].get();
ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFOPAnd.java,62,if (a1 != null) {
ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFOPAnd.java,63,bool_a1 = boi1.get(a1);
ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFOPAnd.java,64,if (bool_a1 == false) {
ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFOPAnd.java,65,result.set(false);
ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFOPAnd.java,66,return result;
ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFOPAnd.java,70,if ((a0 != null && bool_a0 == true) && (a1 != null && bool_a1 == true)) {
ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFOPAnd.java,80,assert (children.length == 2);
ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFOPAnd.java,81,"return ""("" + children[0] + "" and "" + children[1] + "")"";"
ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFOPOr.java,33,"@Description(name = ""or"", value = ""a _FUNC_ b - Logical or"")"
ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFOPOr.java,41,if (arguments.length != 2) {
ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFOPOr.java,43,"""The operator 'OR' only accepts 2 argument."");"
ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFOPOr.java,52,"boolean bool_a0 = false, bool_a1 = false;"
ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFOPOr.java,53,Object a0 = arguments[0].get();
ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFOPOr.java,54,if (a0 != null) {
ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFOPOr.java,55,bool_a0 = boi0.get(a0);
ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFOPOr.java,56,if (bool_a0 == true) {
ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFOPOr.java,57,result.set(true);
ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFOPOr.java,58,return result;
ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFOPOr.java,62,Object a1 = arguments[1].get();
ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFOPOr.java,63,if (a1 != null) {
ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFOPOr.java,64,bool_a1 = boi1.get(a1);
ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFOPOr.java,65,if (bool_a1 == true) {
ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFOPOr.java,66,result.set(true);
ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFOPOr.java,67,return result;
ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFOPOr.java,71,if ((a0 != null && bool_a0 == false) && (a1 != null && bool_a1 == false)) {
ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFOPOr.java,81,assert (children.length == 2);
ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFOPOr.java,82,"return ""("" + children[0] + "" or "" + children[1] + "")"";"
ql/src/java/org/apache/hadoop/hive/ql/metadata/Partition.java,298,.getOutputFormatSubstitute(outputFormatClass).toString());
ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFIn.java,60,private Set<Object> constantInSet;
ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFStruct.java,47,StructObjectInspector soi =
ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFStruct.java,48,"ObjectInspectorFactory.getStandardStructObjectInspector(fname, Arrays.asList(arguments));"
ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFStruct.java,49,return soi;
ql/src/java/org/apache/hadoop/hive/ql/optimizer/ppr/OpProcFactory.java,85,ExprNodeDesc predicate = fop.getConf().getPredicate();
ql/src/java/org/apache/hadoop/hive/ql/hooks/LineageInfo.java,315,private List<BaseColumnInfo> baseCols;
ql/src/java/org/apache/hadoop/hive/ql/hooks/LineageInfo.java,348,public List<BaseColumnInfo> getBaseCols() {
ql/src/java/org/apache/hadoop/hive/ql/hooks/LineageInfo.java,355,public void setBaseCols(List<BaseColumnInfo> baseCols) {
ql/src/java/org/apache/hadoop/hive/ql/optimizer/lineage/ExprProcFactory.java,121,dep.setBaseCols(new ArrayList<BaseColumnInfo>(bci_set));
ql/src/java/org/apache/hadoop/hive/ql/optimizer/lineage/ExprProcFactory.java,143,dep.setBaseCols(new ArrayList<BaseColumnInfo>());
common/src/java/org/apache/hadoop/hive/common/LogUtils.java,51,LogManager.resetConfiguration();
common/src/java/org/apache/hadoop/hive/common/LogUtils.java,52,PropertyConfigurator.configure(hive_l4j);
ql/src/java/org/apache/hadoop/hive/ql/lib/DefaultGraphWalker.java,103,if (nodeOutput != null) {
ql/src/java/org/apache/hadoop/hive/ql/lib/DefaultGraphWalker.java,39,protected Stack<Node> opStack;
ql/src/java/org/apache/hadoop/hive/ql/lib/DefaultGraphWalker.java,58,public List<Node> getToWalk() {
ql/src/java/org/apache/hadoop/hive/ql/lib/DefaultGraphWalker.java,59,return toWalk;
ql/src/java/org/apache/hadoop/hive/ql/lib/DefaultGraphWalker.java,117,if (opStack.empty() || nd != opStack.peek()) {
ql/src/java/org/apache/hadoop/hive/ql/lib/DefaultGraphWalker.java,118,opStack.push(nd);
ql/src/java/org/apache/hadoop/hive/ql/lib/DefaultGraphWalker.java,121,if ((nd.getChildren() == null)
ql/src/java/org/apache/hadoop/hive/ql/lib/DefaultGraphWalker.java,122,|| getDispatchedList().containsAll(nd.getChildren())) {
ql/src/java/org/apache/hadoop/hive/ql/lib/DefaultGraphWalker.java,124,if (!getDispatchedList().contains(nd)) {
ql/src/java/org/apache/hadoop/hive/ql/lib/DefaultGraphWalker.java,125,"dispatch(nd, opStack);"
ql/src/java/org/apache/hadoop/hive/ql/lib/DefaultGraphWalker.java,127,opStack.pop();
ql/src/java/org/apache/hadoop/hive/ql/lib/DefaultGraphWalker.java,128,return;
ql/src/java/org/apache/hadoop/hive/ql/lib/DefaultGraphWalker.java,131,"getToWalk().add(0, nd);"
ql/src/java/org/apache/hadoop/hive/ql/lib/DefaultGraphWalker.java,132,getToWalk().removeAll(nd.getChildren());
ql/src/java/org/apache/hadoop/hive/ql/lib/DefaultGraphWalker.java,133,"getToWalk().addAll(0, nd.getChildren());"
ql/src/java/org/apache/hadoop/hive/ql/lib/DefaultGraphWalker.java,65,public Set<Node> getDispatchedList() {
ql/src/java/org/apache/hadoop/hive/ql/lib/DefaultGraphWalker.java,116,public void walk(Node nd) throws SemanticException {
ql/src/java/org/apache/hadoop/hive/ql/optimizer/index/RewriteCanApplyCtx.java,41,import org.apache.hadoop.hive.ql.lib.PreOrderWalker;
ql/src/java/org/apache/hadoop/hive/ql/optimizer/index/RewriteCanApplyCtx.java,267,GraphWalker ogw = new PreOrderWalker(disp);
ql/src/java/org/apache/hadoop/hive/ql/exec/KeyWrapperFactory.java,106,hashcode = Arrays.hashCode(keys);
serde/src/java/org/apache/hadoop/hive/serde2/objectinspector/ObjectInspectorFactory.java,69,"oi = getReflectionObjectInspectorNoCache(t, options);"
serde/src/java/org/apache/hadoop/hive/serde2/objectinspector/ObjectInspectorFactory.java,70,"objectInspectorCache.put(t, oi);"
serde/src/java/org/apache/hadoop/hive/serde2/objectinspector/ObjectInspectorFactory.java,90,"ObjectInspectorOptions checkOption, Class[] classes) {"
serde/src/java/org/apache/hadoop/hive/serde2/objectinspector/ObjectInspectorFactory.java,93,for (Class checkClass : classes) {
serde/src/java/org/apache/hadoop/hive/serde2/objectinspector/ObjectInspectorFactory.java,104,ObjectInspectorOptions options) {
serde/src/java/org/apache/hadoop/hive/serde2/objectinspector/ObjectInspectorFactory.java,108,".getGenericComponentType(), options));"
serde/src/java/org/apache/hadoop/hive/serde2/objectinspector/ObjectInspectorFactory.java,116,".getActualTypeArguments()[0], options));"
serde/src/java/org/apache/hadoop/hive/serde2/objectinspector/ObjectInspectorFactory.java,121,".getActualTypeArguments()[0], options),"
serde/src/java/org/apache/hadoop/hive/serde2/objectinspector/ObjectInspectorFactory.java,123,options));
serde/src/test/org/apache/hadoop/hive/serde2/objectinspector/TestReflectionObjectInspectors.java,25,import junit.framework.TestCase;
serde/src/java/org/apache/hadoop/hive/serde2/objectinspector/StandardStructObjectInspector.java,162,boolean isArray = ! (data instanceof List);
ql/src/java/org/apache/hadoop/hive/ql/plan/ExprNodeDesc.java,95,public static class ExprNodeDescEqualityWrapper {
ql/src/java/org/apache/hadoop/hive/ql/plan/ExprNodeDesc.java,96,private ExprNodeDesc exprNodeDesc;
ql/src/java/org/apache/hadoop/hive/ql/ppd/ExprWalkerInfo.java,104,"exprInfoMap = new HashMap<ExprNodeDesc, ExprInfo>();"
ql/src/java/org/apache/hadoop/hive/ql/ppd/ExprWalkerInfo.java,105,"newToOldExprMap = new HashMap<ExprNodeDesc, ExprNodeDesc>();"
ql/src/java/org/apache/hadoop/hive/ql/ppd/ExprWalkerInfo.java,114,"exprInfoMap = new HashMap<ExprNodeDesc, ExprInfo>();"
ql/src/java/org/apache/hadoop/hive/ql/ppd/ExprWalkerInfo.java,116,"newToOldExprMap = new HashMap<ExprNodeDesc, ExprNodeDesc>();"
ql/src/java/org/apache/hadoop/hive/ql/ppd/ExprWalkerInfo.java,42,private static class ExprInfo {
ql/src/java/org/apache/hadoop/hive/ql/ppd/ExprWalkerInfo.java,47,public boolean isCandidate = false;
ql/src/java/org/apache/hadoop/hive/ql/ppd/ExprWalkerInfo.java,49,public String alias = null;
ql/src/java/org/apache/hadoop/hive/ql/ppd/ExprWalkerInfo.java,51,public ExprNodeDesc convertedExpr = null;
ql/src/java/org/apache/hadoop/hive/ql/ppd/ExprWalkerInfo.java,63,protected static final Log LOG = LogFactory.getLog(OpProcFactory.class
ql/src/java/org/apache/hadoop/hive/ql/ppd/ExprWalkerInfo.java,64,.getName());;
ql/src/java/org/apache/hadoop/hive/ql/ppd/ExprWalkerInfo.java,160,"public void addConvertedNode(ExprNodeDesc oldNode, ExprNodeDesc newNode) {"
ql/src/java/org/apache/hadoop/hive/ql/ppd/ExprWalkerInfo.java,161,ExprInfo ei = exprInfoMap.get(oldNode);
ql/src/java/org/apache/hadoop/hive/ql/ppd/ExprWalkerInfo.java,162,if (ei == null) {
ql/src/java/org/apache/hadoop/hive/ql/ppd/ExprWalkerInfo.java,163,ei = new ExprInfo();
ql/src/java/org/apache/hadoop/hive/ql/ppd/ExprWalkerInfo.java,164,"exprInfoMap.put(oldNode, ei);"
ql/src/java/org/apache/hadoop/hive/ql/ppd/ExprWalkerInfo.java,166,ei.convertedExpr = newNode;
ql/src/java/org/apache/hadoop/hive/ql/ppd/ExprWalkerInfo.java,167,"exprInfoMap.put(newNode, new ExprInfo(ei.isCandidate, ei.alias, null));"
ql/src/java/org/apache/hadoop/hive/ql/ppd/ExprWalkerInfo.java,176,public boolean isCandidate(ExprNodeDesc expr) {
ql/src/java/org/apache/hadoop/hive/ql/ppd/ExprWalkerInfo.java,177,ExprInfo ei = exprInfoMap.get(expr);
ql/src/java/org/apache/hadoop/hive/ql/ppd/ExprWalkerInfo.java,178,if (ei == null) {
ql/src/java/org/apache/hadoop/hive/ql/ppd/ExprWalkerInfo.java,179,return false;
ql/src/java/org/apache/hadoop/hive/ql/ppd/ExprWalkerInfo.java,181,return ei.isCandidate;
ql/src/java/org/apache/hadoop/hive/ql/ppd/ExprWalkerInfo.java,191,"public void setIsCandidate(ExprNodeDesc expr, boolean b) {"
ql/src/java/org/apache/hadoop/hive/ql/ppd/ExprWalkerInfo.java,192,ExprInfo ei = exprInfoMap.get(expr);
ql/src/java/org/apache/hadoop/hive/ql/ppd/ExprWalkerInfo.java,193,if (ei == null) {
ql/src/java/org/apache/hadoop/hive/ql/ppd/ExprWalkerInfo.java,194,ei = new ExprInfo();
ql/src/java/org/apache/hadoop/hive/ql/ppd/ExprWalkerInfo.java,195,"exprInfoMap.put(expr, ei);"
ql/src/java/org/apache/hadoop/hive/ql/ppd/ExprWalkerInfo.java,275,public void addNonFinalCandidate(ExprNodeDesc expr) {
ql/src/java/org/apache/hadoop/hive/ql/ppd/ExprWalkerInfo.java,276,String alias = getAlias(expr);
ql/src/java/org/apache/hadoop/hive/ql/optimizer/ColumnPruner.java,148,getToWalk().removeAll(nd.getChildren());
ql/src/java/org/apache/hadoop/hive/ql/optimizer/ColumnPruner.java,149,"getToWalk().addAll(0, nd.getChildren());"
ql/src/java/org/apache/hadoop/hive/ql/optimizer/ColumnPruner.java,151,getToWalk().add(nd);
ql/src/java/org/apache/hadoop/hive/ql/optimizer/ColumnPruner.java,124,public void walk(Node nd) throws SemanticException {
ql/src/java/org/apache/hadoop/hive/ql/lib/PreOrderWalker.java,52,public void walk(Node nd) throws SemanticException {
ql/src/java/org/apache/hadoop/hive/ql/optimizer/unionproc/UnionProcessor.java,80,GraphWalker ogw = new PreOrderWalker(disp);
ql/src/java/org/apache/hadoop/hive/ql/parse/GenMapRedWalker.java,50,public void walk(Node nd) throws SemanticException {
hbase-handler/src/java/org/apache/hadoop/hive/hbase/LazyHBaseCellMap.java,92,keyRef.setData(e.getKey());
ql/src/java/org/apache/hadoop/hive/ql/exec/Operator.java,358,"LOG.info(""Initialization Done "" + id + "" "" + getName());"
ql/src/java/org/apache/hadoop/hive/ql/exec/StatsTask.java,406,"console.printInfo(""Partition "" + tableFullName + partn.getSpec() +"
ql/src/java/org/apache/hadoop/hive/ql/exec/MoveTask.java,114,"fs.copyToLocalFile(sourcePath, targetPath);"
ql/src/java/org/apache/hadoop/hive/ql/log/PerfLogger.java,28,import org.apache.hadoop.hive.ql.QueryPlan;
ql/src/java/org/apache/hadoop/hive/ql/log/PerfLogger.java,29,import org.apache.hadoop.hive.ql.session.SessionState;
ql/src/java/org/apache/hadoop/hive/ql/optimizer/ppr/PartitionPruner.java,324,PerfLogger perfLogger = PerfLogger.getPerfLogger();
ql/src/java/org/apache/hadoop/hive/ql/optimizer/ppr/PartitionPruner.java,257,static private ExprNodeDesc compactExpr(ExprNodeDesc expr) {
ql/src/java/org/apache/hadoop/hive/ql/optimizer/ppr/PartitionPruner.java,274,return null;
ql/src/java/org/apache/hadoop/hive/ql/io/HiveFileFormatUtils.java,167,"Class<? extends InputFormat> inputFormatCls, ArrayList<FileStatus> files)"
ql/src/java/org/apache/hadoop/hive/ql/io/HiveFileFormatUtils.java,169,if (files.size() > 0) {
ql/src/java/org/apache/hadoop/hive/ql/io/HiveFileFormatUtils.java,171,if (checkerCls == null
ql/src/java/org/apache/hadoop/hive/ql/io/HiveFileFormatUtils.java,172,&& inputFormatCls.isAssignableFrom(TextInputFormat.class)) {
ql/src/java/org/apache/hadoop/hive/ql/io/HiveFileFormatUtils.java,177,"return checkTextInputFormat(fs, conf, files);"
ql/src/java/org/apache/hadoop/hive/ql/io/HiveFileFormatUtils.java,180,if (checkerCls != null) {
ql/src/java/org/apache/hadoop/hive/ql/io/HiveFileFormatUtils.java,181,InputFormatChecker checkerInstance = inputFormatCheckerInstanceCache
ql/src/java/org/apache/hadoop/hive/ql/io/HiveFileFormatUtils.java,182,.get(checkerCls);
ql/src/java/org/apache/hadoop/hive/ql/io/HiveFileFormatUtils.java,183,try {
ql/src/java/org/apache/hadoop/hive/ql/io/HiveFileFormatUtils.java,184,if (checkerInstance == null) {
ql/src/java/org/apache/hadoop/hive/ql/io/HiveFileFormatUtils.java,185,checkerInstance = checkerCls.newInstance();
ql/src/java/org/apache/hadoop/hive/ql/io/HiveFileFormatUtils.java,188,"return checkerInstance.validateInput(fs, conf, files);"
ql/src/java/org/apache/hadoop/hive/ql/io/HiveFileFormatUtils.java,189,} catch (Exception e) {
ql/src/java/org/apache/hadoop/hive/ql/io/HiveFileFormatUtils.java,190,throw new HiveException(e);
ql/src/java/org/apache/hadoop/hive/ql/io/HiveFileFormatUtils.java,195,return false;
ql/src/java/org/apache/hadoop/hive/ql/io/HiveFileFormatUtils.java,200,ArrayList<FileStatus> files) throws HiveException {
ql/src/java/org/apache/hadoop/hive/ql/io/HiveFileFormatUtils.java,201,Set<Class<? extends InputFormat>> inputFormatter = inputFormatCheckerMap
ql/src/java/org/apache/hadoop/hive/ql/io/HiveFileFormatUtils.java,202,.keySet();
ql/src/java/org/apache/hadoop/hive/ql/io/HiveFileFormatUtils.java,204,"boolean result = checkInputFormat(fs, conf, reg, files);"
ql/src/java/org/apache/hadoop/hive/ql/io/HiveFileFormatUtils.java,35,import org.apache.hadoop.hive.ql.exec.Utilities;
ql/src/java/org/apache/hadoop/hive/ql/io/HiveFileFormatUtils.java,170,Class<? extends InputFormatChecker> checkerCls = getInputFormatChecker(inputFormatCls);
ql/src/java/org/apache/hadoop/hive/ql/io/HiveFileFormatUtils.java,186,"inputFormatCheckerInstanceCache.put(checkerCls, checkerInstance);"
ql/src/java/org/apache/hadoop/hive/ql/io/InputFormatChecker.java,22,import java.util.ArrayList;
ql/src/java/org/apache/hadoop/hive/ql/io/InputFormatChecker.java,37,"boolean validateInput(FileSystem fs, HiveConf conf,"
ql/src/java/org/apache/hadoop/hive/ql/io/InputFormatChecker.java,38,ArrayList<FileStatus> files) throws IOException;
ql/src/java/org/apache/hadoop/hive/ql/io/RCFileInputFormat.java,62,ArrayList<FileStatus> files) throws IOException {
ql/src/java/org/apache/hadoop/hive/ql/io/SequenceFileInputFormatChecker.java,38,ArrayList<FileStatus> files) throws IOException {
metastore/src/java/org/apache/hadoop/hive/metastore/Warehouse.java,157,"return new Path(whRoot, tableName.toLowerCase());"
metastore/src/java/org/apache/hadoop/hive/metastore/Warehouse.java,169,"return getDnsPath(new Path(getDatabasePath(db), tableName.toLowerCase()));"
ql/src/java/org/apache/hadoop/hive/ql/lockmgr/HiveLockObject.java,109,"this(new String[] {tbl.getDbName(), tbl.getTableName()}, lockData);"
cli/src/java/org/apache/hadoop/hive/cli/CliDriver.java,608,SessionState.start(ss);
ql/src/java/org/apache/hadoop/hive/ql/exec/LimitOperator.java,50,if (currCount < limit) {
ql/src/java/org/apache/hadoop/hive/ql/parse/QBParseInfo.java,83,"private final HashMap<String, Integer> destToLimit;"
ql/src/java/org/apache/hadoop/hive/ql/parse/QBParseInfo.java,106,"destToLimit = new HashMap<String, Integer>();"
ql/src/java/org/apache/hadoop/hive/ql/parse/QBParseInfo.java,356,"public void setDestLimit(String dest, Integer limit) {"
ql/src/java/org/apache/hadoop/hive/ql/parse/QBParseInfo.java,357,"destToLimit.put(dest, limit);"
ql/src/java/org/apache/hadoop/hive/ql/parse/QBParseInfo.java,361,return destToLimit.get(dest);
ql/src/java/org/apache/hadoop/hive/ql/parse/QBParseInfo.java,494,"public HashMap<String, Integer> getDestToLimit() {"
ql/src/java/org/apache/hadoop/hive/ql/optimizer/Optimizer.java,53,"if (HiveConf.getBoolVar(hiveConf, HiveConf.ConfVars.HIVEOPTPPD)) {"
ql/src/java/org/apache/hadoop/hive/ql/optimizer/Optimizer.java,74,"if(HiveConf.getBoolVar(hiveConf, HiveConf.ConfVars.HIVEOPTREDUCEDEDUPLICATION)) {"
ql/src/java/org/apache/hadoop/hive/ql/io/HiveInputFormat.java,407,match =
ql/src/java/org/apache/hadoop/hive/ql/io/HiveInputFormat.java,408,splitPath.startsWith(key) || splitPathWithNoSchema.startsWith(key);
ql/src/java/org/apache/hadoop/hive/ql/parse/ExplainSemanticAnalyzer.java,62,List<Task<? extends Serializable>> tasks = sem.getRootTasks();
ql/src/java/org/apache/hadoop/hive/ql/exec/errors/TaskLogProcessor.java,53,"query = HiveConf.getVar(conf, HiveConf.ConfVars.HIVEQUERYSTRING);"
serde/src/java/org/apache/hadoop/hive/serde2/io/TimestampWritable.java,287,public void write(OutputStream out) throws IOException {
ql/src/java/org/apache/hadoop/hive/ql/optimizer/ppr/PartExprEvalUtils.java,87,for (int i = 0; i < partNames.size(); i++) {
ql/src/java/org/apache/hadoop/hive/ql/optimizer/ppr/PartExprEvalUtils.java,91,".getStandardStructObjectInspector(partNames, partObjectInspectors);"
ql/src/java/org/apache/hadoop/hive/ql/processors/DfsProcessor.java,56,"String[] tokens = command.split(""\\s+"");"
common/src/java/org/apache/hadoop/hive/common/io/NonSyncByteArrayOutputStream.java,70,private int enLargeBuffer(int increment) {
common/src/java/org/apache/hadoop/hive/common/io/NonSyncByteArrayOutputStream.java,71,int temp = count + increment;
common/src/java/org/apache/hadoop/hive/common/io/NonSyncByteArrayOutputStream.java,72,int newLen = temp;
common/src/java/org/apache/hadoop/hive/common/io/NonSyncByteArrayOutputStream.java,73,if (temp > buf.length) {
common/src/java/org/apache/hadoop/hive/common/io/NonSyncByteArrayOutputStream.java,74,if ((buf.length << 1) > temp) {
common/src/java/org/apache/hadoop/hive/common/io/NonSyncByteArrayOutputStream.java,75,newLen = buf.length << 1;
common/src/java/org/apache/hadoop/hive/common/io/NonSyncByteArrayOutputStream.java,77,byte newbuf[] = new byte[newLen];
common/src/java/org/apache/hadoop/hive/common/io/NonSyncByteArrayOutputStream.java,78,"System.arraycopy(buf, 0, newbuf, 0, count);"
common/src/java/org/apache/hadoop/hive/common/io/NonSyncByteArrayOutputStream.java,79,buf = newbuf;
common/src/java/org/apache/hadoop/hive/common/io/NonSyncByteArrayOutputStream.java,92,} else if (len == 0) {